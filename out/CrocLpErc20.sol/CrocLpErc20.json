{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quote",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "pool",
          "type": "bytes32"
        },
        {
          "internalType": "int24",
          "name": "lowerTick",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "upperTick",
          "type": "int24"
        },
        {
          "internalType": "uint128",
          "name": "seeds",
          "type": "uint128"
        },
        {
          "internalType": "uint72",
          "name": "",
          "type": "uint72"
        }
      ],
      "name": "depositCrocLiq",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolType",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoteToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "pool",
          "type": "bytes32"
        },
        {
          "internalType": "int24",
          "name": "lowerTick",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "upperTick",
          "type": "int24"
        },
        {
          "internalType": "uint128",
          "name": "seeds",
          "type": "uint128"
        },
        {
          "internalType": "uint72",
          "name": "",
          "type": "uint72"
        }
      ],
      "name": "withdrawCrocLiq",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "194:1641:58:-:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;194:1641:58;;;;;;;-1:-1:-1;;;;;194:1641:58;;;;;;-1:-1:-1;194:1641:58;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;194:1641:58;;;;;;;;;;;;;;530:2;2139:20:115;;2189:13;2170:32;;194:1641:58;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5786:22:115;;194:1641:58;;;5637:295:115;;;;194:1641:58;5669:95:115;194:1641:58;;;;;;5830:14:115;194:1641:58;;;;2189:13:115;2139:20;194:1641:58;;;5909:4:115;2170:32;194:1641:58;;;2170:32:115;5637:295;;194:1641:58;;;;;;;;;;;;;;;;;;5610:336:115;;194:1641:58;2212:51:115;-1:-1:-1;;;;;194:1641:58;;;;;816:19;;;;:36;;194:1641;816:52;;;194:1641;;;;902:16;;;;;;;928:18;;;;956;;;;;194:1641;5837:15:33;;;;194:1641:58;;;;;5880:35:33;;;194:1641:58;;;;;;;;;;;;5880:35:33;;2139:20:115;194:1641:58;;;;;;;;;;;;;;;;;5870:46:33;;984:52:58;;194:1641;;;;;;2139:20:115;194:1641:58;;;;;2170:32:115;194:1641:58;;;;;;;;;;;984:52;194:1641;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;194:1641:58;;;;;;;;;;;;;;-1:-1:-1;;;194:1641:58;;;;;;;;;;;;;530:2;194:1641;;;;;;;816:52;194:1641;;;;856:12;;816:52;;:36;194:1641;;;;;839:13;;816:36;;194:1641;-1:-1:-1;;;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;194:1641:58;;;;;;;;;;;-1:-1:-1;;194:1641:58;;;;;;;;;;;;;-1:-1:-1;194:1641:58;;-1:-1:-1;194:1641:58;;-1:-1:-1;194:1641:58;;;;;-1:-1:-1;194:1641:58;;;;;;;;;;;;;-1:-1:-1;194:1641:58;;-1:-1:-1;;194:1641:58;;;;;;;;;;;;;-1:-1:-1;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;194:1641:58;;;;;;;;;;;;;-1:-1:-1;;;194:1641:58;;;;;;;;;;;;-1:-1:-1;194:1641:58;;;;;;;;;;;;-1:-1:-1;;;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;194:1641:58;;;;;;;;;;;;;;;-1:-1:-1;194:1641:58;;;;;-1:-1:-1;194:1641:58;;-1:-1:-1;194:1641:58;;;;;;;;;-1:-1:-1;;;;;194:1641:58;;;;;;;:::o;:::-;;;;;-1:-1:-1;;194:1641:58;;;;-1:-1:-1;;;;;194:1641:58;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;194:1641:58;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461094b57508063095ea7b3146108dd57806318160ddd146108be578063217a4b701461087a57806323b872dd146107b9578063313ce5671461077b5780633644e51514610757578063668e2cdb146106a557806370a082311461066d5780637ecebe001461063557806393835c1e1461058357806395d89b41146104a45780639b503daf14610469578063a9059cbb146103f7578063b1dd61b6146103bc578063c55dae6314610378578063d505accf146101345763dd62ed3e146100e957600080fd5b346101305781600319360112610130576020928291610106610aac565b61010e610ac7565b6001600160a01b03918216845291865283832091168252845220549051908152f35b8280fd5b509190346103745760e036600319011261037457610150610aac565b90610159610ac7565b91604435606435926084359260ff84168094036103705742851061032d5761017f610bea565b9560018060a01b038092169586895260209560058752848a209889549960018b01905585519285898501957f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c987528b89870152169a8b606086015288608086015260a085015260c084015260c0835260e0830167ffffffffffffffff9484821086831117610319578188528451902061010085019261190160f01b8452610102860152610122850152604281526101608401948186109086111761030657848752519020835261018082015260a4356101a082015260c4356101c0909101528780528490889060809060015afa156102fc5786511696871515806102f3575b156102c15786977f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259596975283528087208688528352818188205551908152a380f35b83606492519162461bcd60e51b8352820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152fd5b5084881461027e565b81513d88823e3d90fd5b634e487b7160e01b8c5260418d5260248cfd5b50634e487b7160e01b8c5260418d5260248cfd5b815162461bcd60e51b81526020818a0152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606490fd5b8680fd5b5080fd5b505034610374578160031936011261037457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610374578160031936011261037457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b505034610374578060031936011261037457602091610414610aac565b82602435913384526003865281842061042e848254610bc7565b90556001600160a01b031680845260038652922080548201905582519081523390600080516020610d91833981519152908590a35160018152f35b505034610374578160031936011261037457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346103745781600319360112610374578051908260018054916104c8836109f1565b8086529282811690811561055b57506001146104ff575b5050506104f1826104fb940383610a2b565b5191829182610a63565b0390f35b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828610610543575050506104f18260206104fb95820101946104df565b80546020878701810191909152909501948101610526565b6104fb9750869350602092506104f194915060ff191682840152151560051b820101946104df565b505034610374576020916105e1600080516020610d91833981519152846001600160801b036105f26105b436610add565b5094939890927f000000000000000000000000000000000000000000000000000000000000000014610b49565b60020b159081610629575b50610b82565b169260018060a01b03169283855260038252858520610612828254610bc7565b905580600254036002558551908152a35160018152f35b905060020b15386105ec565b5050346103745760203660031901126103745760209181906001600160a01b0361065d610aac565b1681526005845220549051908152f35b5050346103745760203660031901126103745760209181906001600160a01b03610695610aac565b1681526003845220549051908152f35b509134610754576105e1906001600160801b036106f16106c436610add565b5094939790927f000000000000000000000000000000000000000000000000000000000000000014610b49565b1691600254838101809111610741576002556001600160a01b0316808252600360209081528483208054850190558451938452945091600080516020610d91833981519152908590a35160018152f35b634e487b7160e01b835260118652602483fd5b80fd5b505034610374578160031936011261037457602090610774610bea565b9051908152f35b5050346103745781600319360112610374576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b509134610754576060366003190112610754576107d4610aac565b600080516020610d918339815191526107eb610ac7565b6001600160a01b0392831680855260208781528686203387528152868620549097919488936044359389938560018201610857575b50505086885260038552828820610838858254610bc7565b9055169586815260038452208181540190558551908152a35160018152f35b61086091610bc7565b90888a528652838920338a52865283892055388085610820565b505034610374578160031936011261037457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346103745781600319360112610374576020906002549051908152f35b50346101305781600319360112610130576020926108f9610aac565b918360243592839233825287528181209460018060a01b0316948582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8490843461013057826003193601126101305782805461096a816109f1565b8085529160019180831690811561055b5750600114610995575050506104f1826104fb940383610a2b565b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8286106109d9575050506104f18260206104fb95820101946104df565b805460208787018101919091529095019481016109bc565b90600182811c92168015610a21575b6020831014610a0b57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610a00565b90601f8019910116810190811067ffffffffffffffff821117610a4d57604052565b634e487b7160e01b600052604160045260246000fd5b6020808252825181830181905290939260005b828110610a9857505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610a76565b600435906001600160a01b0382168203610ac257565b600080fd5b602435906001600160a01b0382168203610ac257565b60c0906003190112610ac2576004356001600160a01b0381168103610ac25790602435906044358060020b8103610ac257906064358060020b8103610ac257906084356001600160801b0381168103610ac2579060a43568ffffffffffffffffff81168103610ac25790565b15610b5057565b60405162461bcd60e51b815260206004820152600a60248201526915dc9bdb99c81c1bdbdb60b21b6044820152606490fd5b15610b8957565b60405162461bcd60e51b8152602060048201526016602482015275139bdb8b505b589a595b9d0813140811195c1bdcda5d60521b6044820152606490fd5b91908203918211610bd457565b634e487b7160e01b600052601160045260246000fd5b6000467f000000000000000000000000000000000000000000000000000000000000000003610c3857507f000000000000000000000000000000000000000000000000000000000000000090565b60405181548291610c48826109f1565b8082528160209485820194600190878282169182600014610d72575050600114610d19575b50610c7a92500382610a2b565b51902091604051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f845260408301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608301524660808301523060a083015260a0825260c082019082821067ffffffffffffffff831117610d05575060405251902090565b634e487b7160e01b81526041600452602490fd5b87805286915087907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b858310610d5a575050610c7a935082010138610c6d565b80548388018501528694508893909201918101610d43565b60ff19168852610c7a95151560051b8501019250389150610c6d905056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220f28bb6efb566d40326ab45c68234d943fd40bfbbc9fccb00b43f46df198e071264736f6c63430008130033",
    "sourceMap": "194:1641:58:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;194:1641:58;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4054:15:115;4042:27;;194:1641:58;;4425:18:115;;:::i;:::-;194:1641:58;;;;;;;;;;;;;;;4870:6:115;194:1641:58;;;;;;;;;;;;;;;;4508:449:115;;;;;194:1641:58;4552:165:115;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;4508:449:115;;194:1641:58;;;;;;;;;;;;;;;;;;;4469:514:115;;4347:658;;;194:1641:58;;;;;;;;;;;;;;;4347:658:115;;194:1641:58;;;;;;;;;;;;;;;;;4316:707:115;;194:1641:58;;;;;;;;;;;;;;;;;;;4289:805:115;;;194:1641:58;;;;;;;4289:805:115;;;;;;;194:1641:58;5117:30:115;;;;:59;;;194:1641:58;;;;;;5280:31:115;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;5280:31:115;194:1641:58;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;194:1641:58;;;;;5117:59:115;5151:25;;;;5117:59;;4289:805;194:1641:58;;;;;;;;;;-1:-1:-1;;;194:1641:58;;;;;;;;;-1:-1:-1;;;;194:1641:58;;;;;;;;;;;-1:-1:-1;;;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;286:34;-1:-1:-1;;;;;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;367:33;194:1641;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2771:10:115;;194:1641:58;;;;;;;;2761:31:115;194:1641:58;;;2761:31:115;:::i;:::-;194:1641:58;;-1:-1:-1;;;;;194:1641:58;;;;;;;;;;;;;;;;;;;;2771:10:115;;-1:-1:-1;;;;;;;;;;;2987:32:115;194:1641:58;;2987:32:115;194:1641:58;;;;;;;;;;;;;;;;;;;;;;247:33;194:1641;;;;;;;;;;;;;;;;;;;;;1053:20:115;194:1641:58;;;;;;:::i;:::-;;;;;;;;;1053:20:115;;;;194:1641:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1658:39;-1:-1:-1;;;;;;;;;;;194:1641:58;-1:-1:-1;;;;;1707:67:58;194:1641;;;:::i;:::-;1674:8;;;;;;;1666:16;1658:39;:::i;:::-;194:1641;;1715:14;:32;;;;194:1641;1707:67;;:::i;:::-;194:1641;;;;;;;;;;;;6550:9:115;194:1641:58;;;;;6550:25:115;194:1641:58;;;6550:25:115;:::i;:::-;194:1641:58;;;;;;;;;;;;;6765:34:115;194:1641:58;;;;;1715:32;194:1641;;;;1733:14;1715:32;;;194:1641;;;;;;;;-1:-1:-1;;194:1641:58;;;;;;;;-1:-1:-1;;;;;194:1641:58;;:::i;:::-;;;;1748:41:115;194:1641:58;;;;;;;;;;;;;;;;;;-1:-1:-1;;194:1641:58;;;;;;;;-1:-1:-1;;;;;194:1641:58;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1264:39;194:1641;-1:-1:-1;;;;;1313:67:58;194:1641;;;:::i;:::-;1280:8;;;;;;;1272:16;1264:39;:::i;1313:67::-;194:1641;;;;;;;;;;;;;;-1:-1:-1;;;;;194:1641:58;;;;6384:9:115;194:1641:58;;;;;;;;;;;;;;;;;;;-1:-1:-1;194:1641:58;-1:-1:-1;;;;;;;;;;;6433:32:115;194:1641:58;;6433:32:115;194:1641:58;;;;;;-1:-1:-1;;;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1080:31:115;194:1641:58;;;;;;;;;;;;-1:-1:-1;;194:1641:58;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;194:1641:58;;:::i;:::-;-1:-1:-1;;;;;194:1641:58;;;;;;;;;;;;;3222:10:115;194:1641:58;;;;;;;;;;;;;;;;;;;;;3284:28:115;;3280:80;;194:1641:58;;;;;;;;;;;;;3371:25:115;194:1641:58;;;3371:25:115;:::i;:::-;194:1641:58;;;;;;;;;;;;;;;;;;;;;;3591:26:115;194:1641:58;;;;;3280:80:115;3344:16;;;:::i;:::-;194:1641:58;;;;;;;;;3222:10:115;194:1641:58;;;;;;;;3280:80:115;;;;;194:1641:58;;;;;;;;;;;;;;;326:35;-1:-1:-1;;;;;194:1641:58;;;;;;;;;;;;;;;;;;;;;;1301:26:115;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2558:10:115;;;;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;;;;;2603:37:115;2558:10;;2603:37;;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;194:1641:58;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;194:1641:58;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;194:1641:58;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;194:1641:58;;;;;;;;;;;;-1:-1:-1;;;194:1641:58;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;194:1641:58;;;;;;;;;;;;-1:-1:-1;;;194:1641:58;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;5324:177:115;-1:-1:-1;5407:13:115;5424:16;5407:33;5424:16;;5443:24;;5324:177;:::o;5407:87::-;194:1641:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5786:22:115;;194:1641:58;;;5637:295:115;;;194:1641:58;5669:95:115;194:1641:58;;;;;;5830:14:115;194:1641:58;;;;5407:13:115;194:1641:58;;;;5909:4:115;194:1641:58;;;;;5637:295:115;;194:1641:58;;;;;;;;;;;;;;;;;5610:336:115;;5324:177;:::o;194:1641:58:-;-1:-1:-1;;;194:1641:58;;;;;;;;;;;;;;-1:-1:-1;194:1641:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;194:1641:58;;;;;;;;;;;-1:-1:-1;;194:1641:58;;;;;;;;;;;;;-1:-1:-1;194:1641:58;;-1:-1:-1;194:1641:58;;-1:-1:-1;194:1641:58",
    "linkReferences": {},
    "immutableReferences": {
      "29215": [
        {
          "start": 1153,
          "length": 32
        },
        {
          "start": 1468,
          "length": 32
        },
        {
          "start": 1740,
          "length": 32
        }
      ],
      "29217": [
        {
          "start": 909,
          "length": 32
        }
      ],
      "29219": [
        {
          "start": 2191,
          "length": 32
        }
      ],
      "29221": [
        {
          "start": 980,
          "length": 32
        }
      ],
      "82197": [
        {
          "start": 1941,
          "length": 32
        }
      ],
      "82211": [
        {
          "start": 3055,
          "length": 32
        }
      ],
      "82213": [
        {
          "start": 3094,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseToken()": "c55dae63",
    "decimals()": "313ce567",
    "depositCrocLiq(address,bytes32,int24,int24,uint128,uint72)": "668e2cdb",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "poolHash()": "9b503daf",
    "poolType()": "b1dd61b6",
    "quoteToken()": "217a4b70",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "withdrawCrocLiq(address,bytes32,int24,int24,uint128,uint72)": "93835c1e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"pool\",\"type\":\"bytes32\"},{\"internalType\":\"int24\",\"name\":\"lowerTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"upperTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"seeds\",\"type\":\"uint128\"},{\"internalType\":\"uint72\",\"name\":\"\",\"type\":\"uint72\"}],\"name\":\"depositCrocLiq\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"pool\",\"type\":\"bytes32\"},{\"internalType\":\"int24\",\"name\":\"lowerTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"upperTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"seeds\",\"type\":\"uint128\"},{\"internalType\":\"uint72\",\"name\":\"\",\"type\":\"uint72\"}],\"name\":\"withdrawCrocLiq\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/CrocLpErc20.sol\":\"CrocLpErc20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@rari-capital/=node_modules/@rari-capital/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/ICrocLpConduit.sol\":{\"keccak256\":\"0x2e7ec87b1050365c16ba74f7d9beecea883d4791ec1def08e8ae45dd3510e27a\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://8f283048c17c0a0b2c525bcaf313b0fa31a3cd78a69b782f3974088352992524\",\"dweb:/ipfs/QmTuewpvVVBotRkDNUtZcZsbDDEfMLSUiCGRjiThWFevx7\"]},\"contracts/libraries/Directives.sol\":{\"keccak256\":\"0x349193c45904235db59b908070f910310ff88e33ca17de4aaf971a40ddbfb0e0\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://ff2062cc76d966adae1811773b929a90878965a9673d18bc41d86ba6f354a585\",\"dweb:/ipfs/QmYJmJ8BxYptvnt8SyTNfK6kvfhV1wYeKzqo9of6AEMp17\"]},\"contracts/libraries/PoolSpecs.sol\":{\"keccak256\":\"0x13c94aa15a3e26002d5f4b6e6f2a55e32a742e40cfb8cb97b1d1b6333ca293cb\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://a0723aad7e94311ae7a933f46cc97b99f6cd5df6692172ad8c60e5e4d8e08a4b\",\"dweb:/ipfs/QmRM2VDrDyPAYfmaTV2ggSto9ChsLifNMxrHhUzn4ZUvDq\"]},\"contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0xf898eb103e1a643b06af1bdf2bd548e6f3f5cd20a1fb0c14adce5eabd69f3916\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7d14c65f9b5c726154c73d5e2d0d2b41d4449b7586376a03cf57ccff8c4361e5\",\"dweb:/ipfs/QmPf4bHt9WRgKAqzb7nN8GGSoDVHYfnbdZE8Qxt1cvzZBg\"]},\"contracts/periphery/CrocLpErc20.sol\":{\"keccak256\":\"0xf4eff197b7e64ad0414f35f5e1469cb98e0e30a940e7a1e6fd662257de8025c8\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://5813ecdb507bc7fe2e7d6c85aa2d7dca510be1a87da43920025d8ebe20683539\",\"dweb:/ipfs/Qmdx9FGvx7AZ8NQKNyyzmomZmERdLEzpEvvnVojKC3ibXh\"]},\"node_modules/@rari-capital/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x0240f7703cff32a61ee3e9fbb339e09a944260432a9ef37debf3692b1a6c8049\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2d8b0c0158b1952a87c327d506a645040924a94c8f9f937184659f8a8e3b0759\",\"dweb:/ipfs/QmZ9rGdkjRCk8zfr4xeH7Jh88tkWJNt9LvG1o2GcCm7Uqa\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quote",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "int24",
              "name": "lowerTick",
              "type": "int24"
            },
            {
              "internalType": "int24",
              "name": "upperTick",
              "type": "int24"
            },
            {
              "internalType": "uint128",
              "name": "seeds",
              "type": "uint128"
            },
            {
              "internalType": "uint72",
              "name": "",
              "type": "uint72"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositCrocLiq",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolType",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quoteToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "int24",
              "name": "lowerTick",
              "type": "int24"
            },
            {
              "internalType": "int24",
              "name": "upperTick",
              "type": "int24"
            },
            {
              "internalType": "uint128",
              "name": "seeds",
              "type": "uint128"
            },
            {
              "internalType": "uint72",
              "name": "",
              "type": "uint72"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawCrocLiq",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@rari-capital/=node_modules/@rari-capital/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "solidity-code-metrics/=node_modules/solidity-code-metrics/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/periphery/CrocLpErc20.sol": "CrocLpErc20"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/interfaces/ICrocLpConduit.sol": {
        "keccak256": "0x2e7ec87b1050365c16ba74f7d9beecea883d4791ec1def08e8ae45dd3510e27a",
        "urls": [
          "bzz-raw://8f283048c17c0a0b2c525bcaf313b0fa31a3cd78a69b782f3974088352992524",
          "dweb:/ipfs/QmTuewpvVVBotRkDNUtZcZsbDDEfMLSUiCGRjiThWFevx7"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/Directives.sol": {
        "keccak256": "0x349193c45904235db59b908070f910310ff88e33ca17de4aaf971a40ddbfb0e0",
        "urls": [
          "bzz-raw://ff2062cc76d966adae1811773b929a90878965a9673d18bc41d86ba6f354a585",
          "dweb:/ipfs/QmYJmJ8BxYptvnt8SyTNfK6kvfhV1wYeKzqo9of6AEMp17"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/PoolSpecs.sol": {
        "keccak256": "0x13c94aa15a3e26002d5f4b6e6f2a55e32a742e40cfb8cb97b1d1b6333ca293cb",
        "urls": [
          "bzz-raw://a0723aad7e94311ae7a933f46cc97b99f6cd5df6692172ad8c60e5e4d8e08a4b",
          "dweb:/ipfs/QmRM2VDrDyPAYfmaTV2ggSto9ChsLifNMxrHhUzn4ZUvDq"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/SafeCast.sol": {
        "keccak256": "0xf898eb103e1a643b06af1bdf2bd548e6f3f5cd20a1fb0c14adce5eabd69f3916",
        "urls": [
          "bzz-raw://7d14c65f9b5c726154c73d5e2d0d2b41d4449b7586376a03cf57ccff8c4361e5",
          "dweb:/ipfs/QmPf4bHt9WRgKAqzb7nN8GGSoDVHYfnbdZE8Qxt1cvzZBg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/periphery/CrocLpErc20.sol": {
        "keccak256": "0xf4eff197b7e64ad0414f35f5e1469cb98e0e30a940e7a1e6fd662257de8025c8",
        "urls": [
          "bzz-raw://5813ecdb507bc7fe2e7d6c85aa2d7dca510be1a87da43920025d8ebe20683539",
          "dweb:/ipfs/Qmdx9FGvx7AZ8NQKNyyzmomZmERdLEzpEvvnVojKC3ibXh"
        ],
        "license": "GPL-3"
      },
      "node_modules/@rari-capital/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x0240f7703cff32a61ee3e9fbb339e09a944260432a9ef37debf3692b1a6c8049",
        "urls": [
          "bzz-raw://2d8b0c0158b1952a87c327d506a645040924a94c8f9f937184659f8a8e3b0759",
          "dweb:/ipfs/QmZ9rGdkjRCk8zfr4xeH7Jh88tkWJNt9LvG1o2GcCm7Uqa"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/periphery/CrocLpErc20.sol",
    "id": 29365,
    "exportedSymbols": {
      "CrocLpErc20": [
        29364
      ],
      "Directives": [
        13070
      ],
      "ERC20": [
        82560
      ],
      "ICrocLpConduit": [
        5763
      ],
      "PoolSpecs": [
        15228
      ],
      "SafeCast": [
        16160
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:1801:58",
    "nodes": [
      {
        "id": 29206,
        "nodeType": "PragmaDirective",
        "src": "35:23:58",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 29207,
        "nodeType": "ImportDirective",
        "src": "60:36:58",
        "nodes": [],
        "absolutePath": "contracts/libraries/PoolSpecs.sol",
        "file": "../libraries/PoolSpecs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29365,
        "sourceUnit": 15229,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29208,
        "nodeType": "ImportDirective",
        "src": "97:42:58",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ICrocLpConduit.sol",
        "file": "../interfaces/ICrocLpConduit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29365,
        "sourceUnit": 5764,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29209,
        "nodeType": "ImportDirective",
        "src": "140:52:58",
        "nodes": [],
        "absolutePath": "node_modules/@rari-capital/solmate/src/tokens/ERC20.sol",
        "file": "@rari-capital/solmate/src/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29365,
        "sourceUnit": 82561,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29364,
        "nodeType": "ContractDefinition",
        "src": "194:1641:58",
        "nodes": [
          {
            "id": 29215,
            "nodeType": "VariableDeclaration",
            "src": "247:33:58",
            "nodes": [],
            "constant": false,
            "functionSelector": "9b503daf",
            "mutability": "immutable",
            "name": "poolHash",
            "nameLocation": "272:8:58",
            "scope": 29364,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 29214,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "247:7:58",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29217,
            "nodeType": "VariableDeclaration",
            "src": "286:34:58",
            "nodes": [],
            "constant": false,
            "functionSelector": "c55dae63",
            "mutability": "immutable",
            "name": "baseToken",
            "nameLocation": "311:9:58",
            "scope": 29364,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29216,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:58",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29219,
            "nodeType": "VariableDeclaration",
            "src": "326:35:58",
            "nodes": [],
            "constant": false,
            "functionSelector": "217a4b70",
            "mutability": "immutable",
            "name": "quoteToken",
            "nameLocation": "351:10:58",
            "scope": 29364,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29218,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "326:7:58",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29221,
            "nodeType": "VariableDeclaration",
            "src": "367:33:58",
            "nodes": [],
            "constant": false,
            "functionSelector": "b1dd61b6",
            "mutability": "immutable",
            "name": "poolType",
            "nameLocation": "392:8:58",
            "scope": 29364,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29220,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "367:7:58",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29275,
            "nodeType": "FunctionDefinition",
            "src": "411:632:58",
            "nodes": [],
            "body": {
              "id": 29274,
              "nodeType": "Block",
              "src": "534:509:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 29249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 29245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 29241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 29236,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29225,
                              "src": "816:5:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 29239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "833:1:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 29238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "825:7:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 29237,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "825:7:58",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 29240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "825:10:58",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "816:19:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 29244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 29242,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29223,
                              "src": "839:4:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 29243,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29225,
                              "src": "847:5:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "839:13:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "816:36:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 29248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 29246,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29225,
                            "src": "856:5:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 29247,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29223,
                            "src": "864:4:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "856:12:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "816:52:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420546f6b656e2050616972",
                        "id": 29250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "870:20:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3bb11149a040ef65e8bd86fb6cf6038989054da45367daba0aeda396d0f396c5",
                          "typeString": "literal_string \"Invalid Token Pair\""
                        },
                        "value": "Invalid Token Pair"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3bb11149a040ef65e8bd86fb6cf6038989054da45367daba0aeda396d0f396c5",
                          "typeString": "literal_string \"Invalid Token Pair\""
                        }
                      ],
                      "id": 29235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "808:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "808:83:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29252,
                  "nodeType": "ExpressionStatement",
                  "src": "808:83:58"
                },
                {
                  "expression": {
                    "id": 29255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29253,
                      "name": "baseToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29217,
                      "src": "902:9:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29254,
                      "name": "base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29223,
                      "src": "914:4:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "902:16:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29256,
                  "nodeType": "ExpressionStatement",
                  "src": "902:16:58"
                },
                {
                  "expression": {
                    "id": 29259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29257,
                      "name": "quoteToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29219,
                      "src": "928:10:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29258,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29225,
                      "src": "941:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "928:18:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29260,
                  "nodeType": "ExpressionStatement",
                  "src": "928:18:58"
                },
                {
                  "expression": {
                    "id": 29263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29261,
                      "name": "poolType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29221,
                      "src": "956:8:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29262,
                      "name": "poolIdx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29227,
                      "src": "967:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "956:18:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29264,
                  "nodeType": "ExpressionStatement",
                  "src": "956:18:58"
                },
                {
                  "expression": {
                    "id": 29272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29265,
                      "name": "poolHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29215,
                      "src": "984:8:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29268,
                          "name": "base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29223,
                          "src": "1015:4:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 29269,
                          "name": "quote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29225,
                          "src": "1021:5:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 29270,
                          "name": "poolIdx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29227,
                          "src": "1028:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 29266,
                          "name": "PoolSpecs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15228,
                          "src": "995:9:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PoolSpecs_$15228_$",
                            "typeString": "type(library PoolSpecs)"
                          }
                        },
                        "id": 29267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1005:9:58",
                        "memberName": "encodeKey",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15148,
                        "src": "995:19:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (address,address,uint256) pure returns (bytes32)"
                        }
                      },
                      "id": 29271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "995:41:58",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "984:52:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 29273,
                  "nodeType": "ExpressionStatement",
                  "src": "984:52:58"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "43726f6320416d6269656e74204c5020455243323020546f6b656e",
                    "id": 29230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "485:29:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2a3a94714ffc7da5cf7ef66cae90cdbbd9c3584eee44d57a5d7a0ff42f076904",
                      "typeString": "literal_string \"Croc Ambient LP ERC20 Token\""
                    },
                    "value": "Croc Ambient LP ERC20 Token"
                  },
                  {
                    "hexValue": "4c502d43726f63416d62",
                    "id": 29231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "516:12:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ef11dacf0295390789bdff01150cfdf3c1b3db7186cb1f0538ed5db7c67a75e8",
                      "typeString": "literal_string \"LP-CrocAmb\""
                    },
                    "value": "LP-CrocAmb"
                  },
                  {
                    "hexValue": "3138",
                    "id": 29232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "530:2:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 29233,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 29229,
                  "name": "ERC20",
                  "nameLocations": [
                    "478:5:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 82560,
                  "src": "478:5:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "478:55:58"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 29228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29223,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "432:4:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 29275,
                  "src": "424:12:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29225,
                  "mutability": "mutable",
                  "name": "quote",
                  "nameLocation": "446:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 29275,
                  "src": "438:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29227,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "461:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 29275,
                  "src": "453:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "423:46:58"
            },
            "returnParameters": {
              "id": 29234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "534:0:58"
            },
            "scope": 29364,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29319,
            "nodeType": "FunctionDefinition",
            "src": "1053:385:58",
            "nodes": [],
            "body": {
              "id": 29318,
              "nodeType": "Block",
              "src": "1254:184:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 29296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 29294,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29279,
                          "src": "1272:4:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 29295,
                          "name": "poolHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29215,
                          "src": "1280:8:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1272:16:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720706f6f6c",
                        "id": 29297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1290:12:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ae826a6d07ef8cac3b2501d7b5c93fe50e10de4a829b27d06058d0afee15031",
                          "typeString": "literal_string \"Wrong pool\""
                        },
                        "value": "Wrong pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ae826a6d07ef8cac3b2501d7b5c93fe50e10de4a829b27d06058d0afee15031",
                          "typeString": "literal_string \"Wrong pool\""
                        }
                      ],
                      "id": 29293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1264:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:39:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29299,
                  "nodeType": "ExpressionStatement",
                  "src": "1264:39:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 29307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 29303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 29301,
                            "name": "lowerTick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29281,
                            "src": "1321:9:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 29302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1334:1:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1321:14:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 29306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 29304,
                            "name": "upperTick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29283,
                            "src": "1339:9:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 29305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1352:1:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1339:14:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1321:32:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6e2d416d6269656e74204c50204465706f736974",
                        "id": 29308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1355:24:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e0fc44aec4ba16d4216f72de1458940020db8622685c4bd0bbd5d867886c402",
                          "typeString": "literal_string \"Non-Ambient LP Deposit\""
                        },
                        "value": "Non-Ambient LP Deposit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e0fc44aec4ba16d4216f72de1458940020db8622685c4bd0bbd5d867886c402",
                          "typeString": "literal_string \"Non-Ambient LP Deposit\""
                        }
                      ],
                      "id": 29300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1313:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1313:67:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29310,
                  "nodeType": "ExpressionStatement",
                  "src": "1313:67:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29312,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29277,
                        "src": "1396:6:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29313,
                        "name": "seeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29285,
                        "src": "1404:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 29311,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82531,
                      "src": "1390:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 29314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1390:20:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29315,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:20:58"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 29316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1427:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 29292,
                  "id": 29317,
                  "nodeType": "Return",
                  "src": "1420:11:58"
                }
              ]
            },
            "baseFunctions": [
              5745
            ],
            "functionSelector": "668e2cdb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositCrocLiq",
            "nameLocation": "1062:14:58",
            "overrides": {
              "id": 29289,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1230:8:58"
            },
            "parameters": {
              "id": 29288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29277,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1086:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 29319,
                  "src": "1078:14:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1078:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29279,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "1102:4:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 29319,
                  "src": "1094:12:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29278,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29281,
                  "mutability": "mutable",
                  "name": "lowerTick",
                  "nameLocation": "1143:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 29319,
                  "src": "1137:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 29280,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1137:5:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29283,
                  "mutability": "mutable",
                  "name": "upperTick",
                  "nameLocation": "1160:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 29319,
                  "src": "1154:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 29282,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:5:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29285,
                  "mutability": "mutable",
                  "name": "seeds",
                  "nameLocation": "1179:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 29319,
                  "src": "1171:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 29284,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1171:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29319,
                  "src": "1215:6:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 29286,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1077:145:58"
            },
            "returnParameters": {
              "id": 29292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29291,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29319,
                  "src": "1248:4:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29290,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1247:6:58"
            },
            "scope": 29364,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29363,
            "nodeType": "FunctionDefinition",
            "src": "1444:388:58",
            "nodes": [],
            "body": {
              "id": 29362,
              "nodeType": "Block",
              "src": "1648:184:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 29340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 29338,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29323,
                          "src": "1666:4:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 29339,
                          "name": "poolHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29215,
                          "src": "1674:8:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1666:16:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720706f6f6c",
                        "id": 29341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1684:12:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ae826a6d07ef8cac3b2501d7b5c93fe50e10de4a829b27d06058d0afee15031",
                          "typeString": "literal_string \"Wrong pool\""
                        },
                        "value": "Wrong pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ae826a6d07ef8cac3b2501d7b5c93fe50e10de4a829b27d06058d0afee15031",
                          "typeString": "literal_string \"Wrong pool\""
                        }
                      ],
                      "id": 29337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1658:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1658:39:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29343,
                  "nodeType": "ExpressionStatement",
                  "src": "1658:39:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 29351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 29347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 29345,
                            "name": "lowerTick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29325,
                            "src": "1715:9:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 29346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1728:1:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1715:14:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 29350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 29348,
                            "name": "upperTick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29327,
                            "src": "1733:9:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 29349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1746:1:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1733:14:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1715:32:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6e2d416d6269656e74204c50204465706f736974",
                        "id": 29352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1749:24:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e0fc44aec4ba16d4216f72de1458940020db8622685c4bd0bbd5d867886c402",
                          "typeString": "literal_string \"Non-Ambient LP Deposit\""
                        },
                        "value": "Non-Ambient LP Deposit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e0fc44aec4ba16d4216f72de1458940020db8622685c4bd0bbd5d867886c402",
                          "typeString": "literal_string \"Non-Ambient LP Deposit\""
                        }
                      ],
                      "id": 29344,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1707:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:67:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29354,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:67:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29356,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29321,
                        "src": "1790:6:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29357,
                        "name": "seeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29329,
                        "src": "1798:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 29355,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82559,
                      "src": "1784:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 29358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1784:20:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29359,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:20:58"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 29360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1821:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 29336,
                  "id": 29361,
                  "nodeType": "Return",
                  "src": "1814:11:58"
                }
              ]
            },
            "baseFunctions": [
              5762
            ],
            "functionSelector": "93835c1e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawCrocLiq",
            "nameLocation": "1453:15:58",
            "overrides": {
              "id": 29333,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1624:8:58"
            },
            "parameters": {
              "id": 29332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29321,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1478:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 29363,
                  "src": "1470:14:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1470:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29323,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "1494:4:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 29363,
                  "src": "1486:12:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29322,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29325,
                  "mutability": "mutable",
                  "name": "lowerTick",
                  "nameLocation": "1536:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 29363,
                  "src": "1530:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 29324,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:5:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29327,
                  "mutability": "mutable",
                  "name": "upperTick",
                  "nameLocation": "1553:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 29363,
                  "src": "1547:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 29326,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1547:5:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29329,
                  "mutability": "mutable",
                  "name": "seeds",
                  "nameLocation": "1572:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 29363,
                  "src": "1564:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 29328,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29331,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29363,
                  "src": "1609:6:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 29330,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "1609:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1469:147:58"
            },
            "returnParameters": {
              "id": 29336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29335,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29363,
                  "src": "1642:4:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29334,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1641:6:58"
            },
            "scope": 29364,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29210,
              "name": "ERC20",
              "nameLocations": [
                "218:5:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 82560,
              "src": "218:5:58"
            },
            "id": 29211,
            "nodeType": "InheritanceSpecifier",
            "src": "218:5:58"
          },
          {
            "baseName": {
              "id": 29212,
              "name": "ICrocLpConduit",
              "nameLocations": [
                "225:14:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5763,
              "src": "225:14:58"
            },
            "id": 29213,
            "nodeType": "InheritanceSpecifier",
            "src": "225:14:58"
          }
        ],
        "canonicalName": "CrocLpErc20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          29364,
          5763,
          82560
        ],
        "name": "CrocLpErc20",
        "nameLocation": "203:11:58",
        "scope": 29365,
        "usedErrors": []
      }
    ],
    "license": "GPL-3"
  },
  "id": 58
}