{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "pool",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isBid",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "pivotTime",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "feeMileage",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint160",
          "name": "commitEntropy",
          "type": "uint160"
        }
      ],
      "name": "CrocKnockoutCross",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "slot",
          "type": "uint16"
        }
      ],
      "name": "acceptCrocProxyRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        }
      ],
      "name": "userCmd",
      "outputs": [
        {
          "internalType": "int128[]",
          "name": "",
          "type": "int128[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080806040523461002b5762010011805460ff60e01b1916600160e71b17905561352590816100318239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c908163ac54c0fc146116c3575063f96dc7881461003557600080fd5b602036600319011261077c576001600160401b036004351161077c5736602360043501121561077c576001600160401b03600435600401351161077c573660246004356004013560043501011161077c576040516100928161176c565b61009a6117a8565b808252606060208301526004356004013560c01161077c576100c06024600435016118f0565b906100cf6044600435016118fe565b906100de606460043501611912565b916100ed608460043501611920565b926001600160801b0361010460a460043501611934565b9461011360c4600435016118f0565b9515156060860152166040840152600f0b60208301526001600160a01b0316905260c09160ff166000190161077c5761014e60ff821661183d565b61015b6040519182611787565b60ff8216808252601f199061016f9061183d565b0160005b81811061167d57505060208401526000915b60ff821683106111875783516040518561019e8261171b565b600082526000602083015260006040830152600060608301526101bf6117a8565b6080830152604051926101d184611736565b6101d96117cd565b84526101e361181e565b60208501526040516101f48161176c565b60008152600060208201526040850152602082015151916001830183116108dc579293906102246001840161183d565b926102326040519485611787565b600101808452601f19906102459061183d565b013660208501376000905b6020850151908151831015610e3857516001600160a01b039081169160209061027a908590611863565b510151511690818110806040890152600014610e2c57865260208601525b60406102a8826020870151611863565b510151855160208701516001600160a01b0390811691166102c761181e565b928051610dc6575b505050602083015260005b6102e8826020870151611863565b515151811015610c645761030b81610304846020890151611863565b5151611863565b51865160208801518251929792916001600160a01b03908116911661032e6117cd565b506103376117cd565b508082101561077c57604080516001600160a01b039384166020820190815293909216908201526060810183905260019160ff9161038281608081015b03601f198101835282611787565b5190209283600052620100096020526040600020908380604051936103a685611751565b54858116855261ffff8160081c166020860152858160181c16604086015261ffff8160201c166060860152858160301c166080860152858160381c1660a086015260401c85811660c08601521614600014610c5c5760601c5b6040519461040c86611736565b8286526020860152838060a01b03166040850152511611610c3157600160ff8251511603610c075780855287516020808a01519089015160608a01516040808c0151908601516001600160a01b039485169590851694919391169184610a18575b505050505050506080860151604051906104868261176c565b600080835260208301528051156109fd576040890151158252600060208301525b6040810151610939575b506040850152608087015196604051956104ca87611736565b6104d2611941565b875260006020880152600060408801526020865101516104f0611941565b506000526201000f60205260406000206040519061050d8261171b565b60018154916001600160801b0383169283855260801c602085015201546001600160801b03811660408401526001600160401b038160801c16606084015260c01c60808301521561077c57875260206080890151015115610924575b60208801516040870151885160ff602084015116918c8361083c575b5050505060408101906001600160801b038251168061069f575b50505060408801519460005b86518110156105de57806105d88c6105d28c8c836105cb6001988f611863565b5192611f49565b91611de9565b016105ab565b509561067e9493955087819a9992989399602060808501510151610688575b5050602091505101519051906000526201000f60205260016040600020916001600160801b038151166001600160801b0319602083015160801b161783556001600160801b03604082015116906001600160401b0360801b606082015160801b169060806001600160401b0360c01b91015160c01b16911717910155611854565b94919093946102da565b60606106969401519061197a565b888882826105fd565b905160009283929115610781576001600160801b039150511660208951015160018060a01b0360065416916107318c51916103746001600160801b03845116946001600160801b03602086015116926001600160801b03604087015116956001600160401b036080816060840151169201511690604051978896602088019a632ee1158760e01b8c5260248901612f4a565b51915af461073d612f95565b901561077c576107598160208061077494518301019101612ff6565b6001600160801b0360208c9493945101911690525b8b611de9565b89808061059f565b600080fd5b5060208951015160018060a01b0360065416916107fb8c51916103746001600160801b03845116946001600160801b03602086015116926001600160801b03604087015116956001600160401b036080816060840151169201511690604051978896602088019a630a9bc21960e21b8c5260248901612f4a565b51915af4610807612f95565b901561077c576108238160208061077494518301019101612ff6565b6001600160801b0360208c94939451019116905261076e565b61085a61086a916001600160801b0395866040890151169185611eca565b9485919451169251151593611e49565b91156109085780156108f257600160401b600160c01b0361088f9260401b1604611f0e565b905b80156108b5576001600160801b0391905b151583521660408201528a80808c610585565b6001600160801b03600181841601116108dc5760016001600160801b0380931601906108a2565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160801b0361091e92160260401c611f0e565b90610891565b610934868860608b01518c61197a565b610569565b51156109c8576040880151156109b457602088015161096d906001600160a01b03165b6000546001600160a01b031661332f565b600052620100106020526001600160801b03604060002054166001607f1b81101561077c576109a690600f0b6020830151600f0b6118b3565b600f0b6020820152886104b1565b875161096d906001600160a01b031661095c565b6040880151156109e657875161096d906001600160a01b031661095c565b602088015161096d906001600160a01b031661095c565b6040890151151582526060890151600f0b60208301526104a7565b610a8e906001600160801b03604060018060a09a9698979a1b03600054169661ffff60208c510151169582519a8b9963109b753160e11b8b5260048b01523360248b015260448a0152606489015280511515608489015260ff60208201511660a489015201511660c486015260e4850190612f0a565b6101c06101848401526101c48301825180915260206101e485019301906000905b808210610ba0575050506000836020959381936101a483015203925af18015610b9457600090610b55575b61ffff915016908115610b2c5761ffff6000198301116108dc5760209051019061ffff82511661ffff806000198401168203116108dc5761ffff8092600019011690031690528780808080808061046d565b60405162461bcd60e51b81526020600482015260016024820152602d60f91b6044820152606490fd5b506020813d602011610b8c575b81610b6f60209383611787565b8101031261077c575161ffff8116810361077c5761ffff90610ada565b3d9150610b62565b6040513d6000823e3d90fd5b9194509192602060c06001926001600160801b0360a089518051600290810b855286820151900b8685015260408101511515604085015260608101511515606085015260ff608082015116608085015201511660a082015201950192018694939291610aaf565b60405162461bcd60e51b8152602060048201526002602482015261504960f01b6044820152606490fd5b60405162461bcd60e51b815260206004820152600360248201526249505360e81b6044820152606490fd5b5060006103ff565b50608085015185516020870151604083015194979693946001600160a01b03918216936001600160801b039360609391928516911681610d98575b50500151169081610d5c575b5050604084015115610d41576080840151610cdb60208251600f0b920151600f0b915b6060870151600f0b61188d565b90600f0b60608601526000608086015152600060206080870151015260006040608087015101526000606060808701510152610d178385611863565b90600f0b9052610d386020610d2f8482850151611863565b51015192611854565b90939491610250565b6080840151610cdb6020820151600f0b9151600f0b91610cce565b6000526201000c6020526040600020906001600160801b03610d82835492828416611e15565b16906001600160801b0319161790558580610cab565b6000526201000c60205260406000209084610db7835492828416611e15565b16908519161790558980610c9f565b602001511580159290610e245750905b825260018060a01b0316806000526201000a90816020526001600160801b0360406000205460081c16602084015260005260205261ffff60406000205460881c1660408201528680806102cf565b905090610dd6565b60208701528552610298565b85856060890151600f0b610e5160208401515183611863565b52815191600080935b602083015151851015610eb75790610e8e610e9492610e798787611863565b51600f0b60018060a01b0360005416806130d5565b9061188d565b92610eb06020610ea78382860151611863565b51015191611854565b9390610e5a565b6060610eeb610ecc6020879601515186611863565b516000546001600160a01b03169490610e8e908590600f0b87806130d5565b91015115156000549160ff8360a81c1661115d576001600160801b0334169234840361077c5760ff60a81b1916600160a81b17600055600f81900b801561114e57600081131561107557506001600160801b03811691156110665760009160405160208101908682526000604082015260408152610f6881611736565b5190206000526201001060205260406000209182546001600160801b038082169216821160001461104a5750506001600160801b03610fab835492828416611e30565b16906001600160801b0319161790555b6001600160801b0381161561101b57610fd3926133a7565b60405180916020820160208352815180915260206040840192019060005b818110610fff575050500390f35b8251600f0b845285945060209384019390920191600101610ff1565b5080611029575b5050610fd3565b600080808093611043955af161103d612f95565b50613376565b8180611022565b6001600160801b0319169092556110619250611e30565b610fbb565b50611070926133a7565b610fd3565b600013611086575b50505050610fd3565b61108f90611cef565b6001600160801b0316901561112257604051602081019084825260006040820152604081526110bd81611736565b519020600052620100106020526040600020906001600160801b036110e6835492828416611e15565b16906001600160801b03191617905580611107575b50505b8180808061107d565b60008080809361111b955af161103d612f95565b81806110fb565b600080611149946001600160801b0361113d83968496611e15565b16905af161103d612f95565b6110fe565b50505080611029575050610fd3565b60405162461bcd60e51b8152602060048201526002602482015261445360f01b6044820152606490fd5b611195836020860151611863565b516020820182116108dc5760206111bb81840184600435600401356024600435016118d8565b908092918101031261077c576111d26020916118f0565b9201916111e160ff821661183d565b6111ee6040519182611787565b60ff8216808252601f19906112029061183d565b0160005b81811061163157505082526000905b60ff811682106112ec57505060c0820182116108dc5760c061124681840184600435600401356024600435016118d8565b908092918101031261077c5760ff926001928261126460c0946118fe565b906001600160801b0361127960208301611912565b9161128660408201611920565b9061129360608201611934565b906112ac60a06112a560808401611934565b9201611934565b906040602089015198015191151560208301521515905215156060860152166040840152600f0b6020830152848060a01b03169052019301929050610185565b90926112f9848451611863565b519060a0810181116108dc578061132160a080930182600435600401356024600435016118d8565b908093918101031261077c5760a09061133c60208401611934565b92611349604082016118f0565b9361135660608301611920565b9060ff611365608085016118f0565b966001600160801b0360208a01519416604085015216602083015215159052358452019061139560ff821661183d565b6113a26040519182611787565b60ff8216808252601f19906113b69061183d565b0160005b8181106115c357505060408401526000905b60ff811682106114f657505060a0810181116108dc5760a06113fd81830183600435600401356024600435016118d8565b908092918101031261077c5761141281611934565b61141e60208301611934565b60ff61142c604085016118f0565b6001600160801b0361144c608061144560608901611920565b9701611920565b958160608a0151971660808801521660608601521660408401521515602083015215159052610100810160a08201116108dc57806114a06101006060930160a08301600435600401356024600435016118d8565b908093918101031261077c57600192826114bc61010094611934565b9060806114d760406114d060208501611934565b9301611934565b9301519215156040840152151560208301521515905201930190611215565b9091611506836040860151611863565b519060c0810181116108dc578061152e60c080930182600435600401356024600435016118d8565b908093918101031261077c576001928261154960c09461196c565b906115566020820161196c565b9061156360408201611934565b9060ff61157260608301611934565b916001600160801b0361159360a061158c608085016118f0565b9301611920565b1660a08801521660808601521515604085015215156060840152600290810b60208401520b9052019201906113cc565b604051908160c08101106001600160401b0360c08401111761161b578160c06020930160405260008152600083820152600060408201526000606082015260006080820152600060a0820152828286010152016113ba565b634e487b7160e01b600052604160045260246000fd5b6020906040516116408161171b565b6000815261164c61181e565b838201526060604082015261165f611941565b606082015261166c61181e565b608082015282828601015201611206565b60209060405161168c81611736565b606081526116986117a8565b838201526040516116a88161176c565b60008152600084820152604082015282828601015201610173565b3461077c57604036600319011261077c576004356001600160a01b0381160361077c576024359061ffff821680920361077c576004602092148152f35b608081019081106001600160401b0382111761161b57604052565b60a081019081106001600160401b0382111761161b57604052565b606081019081106001600160401b0382111761161b57604052565b60e081019081106001600160401b0382111761161b57604052565b604081019081106001600160401b0382111761161b57604052565b90601f801991011681019081106001600160401b0382111761161b57604052565b604051906117b582611700565b60006060838281528260208201528260408201520152565b604051906117da82611736565b8160408051916117e983611751565b60009283815283602082015283838201528360608201528360808201528360a08201528360c082015281528260208201520152565b6040519061182b82611736565b60006040838281528260208201520152565b6001600160401b03811161161b5760051b60200190565b60001981146108dc5760010190565b80518210156118775760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90600f0b90600f0b019060016001607f1b0319821260016001607f1b038313176108dc57565b600f91820b910b039060016001607f1b0319821260016001607f1b038313176108dc57565b9093929384831161077c57841161077c578101920390565b359060ff8216820361077c57565b35906001600160a01b038216820361077c57565b359081600f0b820361077c57565b35906001600160801b038216820361077c57565b3590811515820361077c57565b6040519061194e8261171b565b60006080838281528260208201528260408201528260608201520152565b35908160020b820361077c57565b9260408101519060ff91826040850151169081611c42575b50506001600160801b036060840151166119ae575b5050505050565b516006548451926001600160a01b0391821692604091611a4c6119d0896123d2565b978451986001600160401b03608060208c019a633d9b87e160e11b8c528c60246001600160801b038351169101528c60446001600160801b036020840151169101528c60646001600160801b038b840151169101528c60848460608401511691015201511660a48b015260020b60c48a015260e4890190612f0a565b60c08251828151166101848a015261ffff806020830151166101a48b01528386830151166101c48b01526060820151166101e48a0152826080820151166102048a01528260a0820151166102248a01520151166102448701526020810151610264870152015116610284908185015283526102c08301918383106001600160401b0384111761161b57600093849360405251915af4611ae9612f95565b901561077c57611af76117a8565b50808051810103610120811261077c5760801361077c5760606001600160801b0381611c359360006020849760405193611b3085611700565b611b3b838201612fd4565b8552611b4960408201612fd4565b83860152611b58868201612fe2565b6040860152611b6960808201612fe2565b8686015286611b7a60a08301612fe2565b81611b8760c08501612fe2565b81611b9460e08701612fe2565b6001600160401b03611bb6610120611baf6101008b016130c1565b99016130c1565b97818a51991660808a0152168c880152166040860152168584015216905201528051611be9600f91820b8951830b61188d565b810b88526020820151810b90611c0660208a01928351830b61188d565b900b90528260408201511683611c2360408a019282845116611e15565b16905201511693019282845116611e15565b16905238808080806119a7565b611c6660608601916001600160801b0393611c618a8686511693611d07565b611d34565b855160208701519015159291849160009015611ce55750600081600f0b125b15158852600081600f0b13600014611cd55781165b169052845115159081146119925715611ccc576f0ffff5433e2b3d8211706e6102aa94725b1660808401523880611992565b62010002611cbf565b611cde90611cef565b8116611c9a565b81600f0b13611c85565b600f0b60016001607f1b031981146108dc5760000390565b8051611d259260209115611d285751600f0b915b0151600f0b61188d565b90565b810151600f0b91611d1b565b9060ff1660018103611d515750506001600160801b0316600f0b90565b60028103611d705750506001600160801b03611d259116600f0b611cef565b60048103611db657506001600160801b0390600f0b9116600f0b9081810291600160ff1b811460008312166108dc5781830514901517156108dc576127109005600f0b90565b600503611dd3576001600160801b03611d259216600f0b9061188d565b6001600160801b03611d259216600f0b906118b3565b602090611dfd611e0e938251600f0b61188d565b600f0b815201918251600f0b61188d565b600f0b9052565b9190916001600160801b03808094169116019182116108dc57565b6001600160801b0391821690821603919082116108dc57565b9015611e91576001600160801b039060009082166004811015611e6e57505050600090565b60031901918211611e7d575090565b634e487b7160e01b81526011600452602490fd5b6001600160801b039060009082166ffffffffffffffffffffffffffffffffb811115611ebc57505090565b600401918211611e7d575090565b611ed9939291611c6191611d07565b80600f0b906000821291600012600014611ef9576001600160801b031691565b611f0290611cef565b6001600160801b031691565b6001600160801b03811691906001600160c01b0316820361077c57565b9060020b9060020b0190627fffff198212627fffff8313176108dc57565b919392909360608201516121e6575b6040918282015190845192611f83825198602095868501958651918660029d8e94850b940b92612284565b848201978851612136575b60a08301926001600160801b03998a8551169081156121225792899695928c95928a8a965115159160009260001461207c57505050600097936120429386888b9a9998956103749551810b9a51900b935116915101519160018060a01b0360065416988d8989515116996120018a6123d2565b995190808983015116908383015116906001600160401b036080816060860151169401511693519b8c9a8b019d8e632370632b60e01b905260248c01613023565b51915af461204e612f95565b901561077c57612067818380899451830101910161308d565b95919890929651951690850152169101529190565b829a95839a9298610374949a98506120f896819651810b9451900b915101519260018060a01b0360065416998989515116996120b78a6123d2565b995190808983015116908383015116906001600160401b036080816060860151169401511693519b8c9a8b019d8e637c6dfe3d60e01b905260248c01613023565b51915af490612105612f95565b911561211f5750612067818380899451830101910161308d565b80fd5b505050505050505050509050600090600090565b61216f858301518451830b8651840b6001600160801b0360a0880151169061ffff6060885151015116926121698d6123d2565b94612722565b15611f8e5760005485835101518451865190895192898401946bffffffffffffffffffffffff199060601b168552603484015260e81b605483015260e81b6057820152603a81526121bf81611736565b5190206000908152620100128652869020805460ff60e81b1916600160e81b179055611f8e565b6121ef836123d2565b825190612200600292830b82611f2b565b820b845261221660208501918251840b90611f2b565b820b8091528351820b90620a276d198212159182612276575b8261226b575b5050156122425750611f58565b6064906040519062461bcd60e51b825260206004830152602482015261149560f21b6044820152fd5b131590503880612235565b620cb14a821315925061222f565b9493929491909160ff6080840151169384156123c9576122d160a08501976122bb6001600160801b03988998898c51169187611eca565b9790955116935115876122d78215948594612b93565b95612b93565b95858b16811161237f5750505061077c576122f5866122fa95611e49565b612698565b821561231957610800600160801b0360409116925b1515910152169052565b610800600160801b03808083161461234f5760016e1fffffffffffffffffffffffffffff604093600b1c1601600b1b169261230f565b60405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b6044820152606490fd5b91925090858a16811061239f57505061077c576122f5866122fa95611e49565b9091506122fa9594836000146123bb5750906122f59194611e49565b949350906122f59193611e49565b50505050505050565b60208101908151156123eb575b60409150015160020b90565b805151916001600160801b039081841693620100028510158061267f575b1561077c57600160401b600160c01b039060401b168083811160071b9181831c926001600160401b03841160061b93841c9363ffffffff851160051b94851c9461ffff861160041b95861c60ff9687821160031b91821c92600f841160021b93841c94600160038711811b96871c1196171717171717179160808310156000146126735750607e1982011c5b8002607f928392828493841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c80029081881c82881c1c80029283891c84891c1c800294858a1c868a1c1c800296878b1c888b1c1c800298898c1c8a8c1c1c80029a8b8d1c8c821c1c8002809d1c8d821c1c8002809e81901c90821c1c80029e8f80911c911c1c800260cd1c6604000000000000169d60cc1c6608000000000000169c60cb1c6610000000000000169b60ca1c6620000000000000169a60c91c6640000000000000169960c81c6680000000000000169860c71c670100000000000000169760c61c670200000000000000169660c51c670400000000000000169560c41c670800000000000000169460c31c671000000000000000169360c21c672000000000000000169260c11c674000000000000000169160c01c6780000000000000001690607f190160401b1717171717171717171717171717693627a301d71055774c85026f028f6481ab7f045a5af012a19d003aa919810160801d60020b906fdb2df09e81959a81455e260799a0632f0160801d60020b906000828214600014966001956040986126555750505090505b60020b84840152526123df565b61265e85612b93565b1611905061266c5750612648565b9050612648565b905081607f031b612495565b506f0ffff5433e2b3d8211706e6102aa94728510612409565b9291906126be579060016126b86126b2611d259594612700565b92612700565b92612698565b6001600160801b0391829181831681841611156126f85703165b1680156108f257600160401b600160c01b03611d259260401b1604611f0e565b9003166126d8565b6001600160801b0380911680156108f257600160801b0481811161077c571690565b939091929461ffff821660020b61273981856127e3565b60020b1590816127ce575b501561275557505050505050600090565b8360020b8360020b121561077c57838361276f9287612ae8565b156127bd5761277d936127f5565b6001600160801b0380911691161061279457600190565b60405162461bcd60e51b81526020600482015260016024820152601160fa1b6044820152606490fd5b505050506001600160801b0361277d565b6127d99150856127e3565b60020b1538612744565b9060020b9081156108f25760020b0790565b926128018184846128dc565b9162ffffff83161561284b5750506128189261287f565b60011b7001fffffffffffffffffffffffffffffffe6ffffffffffffffffffffffffffffffffe8216911681036108dc5790565b61287992506128738461286c84612866611d25999886612a21565b94612aa5565b928661287f565b9361287f565b90611e15565b9062ffffff1680156128c057611d25926126b86128bb6001600160801b0360208601511694511515926128b181612b93565b9460020b90611f2b565b612b93565b505050600090565b60020b627fffff1981146108dc5760000390565b90918060020b8360020b8181121561077c57600013908180612956575b1561291c57505091612916612910611d25946128c8565b916128c8565b916128dc565b9192918161294a575b501561293357505050600090565b61ffff611d259362ffffff9384169316911661299d565b60009150121538612925565b50600081126128f9565b9062ffffff8091169182156108f257160690565b9062ffffff8091169182156108f257160490565b62ffffff91821690821603919082116108dc57565b62ffffff806129ac8385612960565b161580156129f4575b156129c35750505050600090565b806129d86129d18486612974565b9386612974565b16911614156000146129eb575050600090565b611d2591612988565b5080612a008386612960565b16156129b5565b91909162ffffff808094169116029182169182036108dc57565b908060020b90600091828112612a935715612a8d5762ffffff9081169261ffff16916000198401828111612a795782612a5c85600193612974565b1601918211611e7d5750611d259291612a7491612a07565b612988565b634e487b7160e01b82526011600452602482fd5b50905090565b50611d25929150612aa3906128c8565b905b60008260020b12612ad657612ad061ffff611d259362ffffff169216612acb8184612974565b612a07565b90612988565b612ae2611d25926128c8565b90612a21565b929190916001600160801b0360208501511615612b4157612b18604091612b128561ffff95612b67565b94612b67565b93015116908162ffffff80921611159283612b34575b50505090565b1611159050388080612b2e565b50505050600090565b600291820b910b0390627fffff198212627fffff8313176108dc57565b908160020b8160020b13600014612b8a5790612b8291612b4a565b62ffffff1690565b612b8291612b4a565b60020b620a276d1981121580612efd575b1561077c576000811215612ef75780600003905b6001821615612ee5576001600160881b036ffffcb933bd6fad37aa2d162d1a5940015b169160028116612ec9575b60048116612ead575b60088116612e91575b60108116612e75575b60208116612e59575b60408116612e3d575b608090818116612e22575b6101008116612e07575b6102008116612dec575b6104008116612dd1575b6108008116612db6575b6110008116612d9b575b6120008116612d80575b6140008116612d65575b6180008116612d4a575b620100008116612d2f575b620200008116612d15575b620400008116612cfb575b6208000016612ce0575b50600012612cd1575b6001600160801b03906001600160401b038116612cc85760ff60005b169060401c011690565b60ff6001612cbe565b80156108f25760001904612ca2565b6b048a170391f7dc42444e8fa26000929302901c9190612c99565b6d2216e584f5fa1ea926041bedfe98909302811c92612c8f565b926e5d6af8dedb81196699c329225ee60402811c92612c84565b926f09aa508b5b7a84e1c677de54f3e99bc902811c92612c79565b926f31be135f97d08fd981231505542fcfa602811c92612c6e565b926f70d869a156d2a1b890bb3df62baf32f702811c92612c64565b926fa9f746462d870fdf8a65dc1f90e061e502811c92612c5a565b926fd097f3bdfd2022b8845ad8f792aa582502811c92612c50565b926fe7159475a2c29b7443b29c7fa6e889d902811c92612c46565b926ff3392b0822b70005940c7a398e4b70f302811c92612c3c565b926ff987a7253ac413176f2b074cf7815e5402811c92612c32565b926ffcbe86c7900a88aedcffc83b479aa3a402811c92612c28565b926ffe5dee046a99a2a811c461f1969c305302811c92612c1e565b916fff2ea16466c96a3843ec78b326b528610260801c91612c13565b916fff973b41fa98c081472e6896dfb254c00260801c91612c0a565b916fffcb9843d60f6159c9db58835c9266440260801c91612c01565b916fffe5caca7e10e4e61c3624eaa0941cd00260801c91612bf8565b916ffff2e50f5f656932ef12357cf3c7fdcc0260801c91612bef565b916ffff97272373d413259a46990580e213a0260801c91612be6565b6001600160881b03600160801b612bdb565b80612bb8565b50620cb14a811315612ba4565b60809080511515835260208101511515602084015260ff6040820151166040840152816001600160801b0391826060820151166060860152015116910152565b6001600160801b039182168152918116602083015291821660408201526001600160401b039283166060820152919092166080820152911660a082015260c081019190915260e00190565b3d15612fcf573d906001600160401b03821161161b5760405191612fc3601f8201601f191660200184611787565b82523d6000602084013e565b606090565b519081600f0b820361077c57565b51906001600160801b038216820361077c57565b9081606091031261077c5761300a81612fd4565b91611d25604061301c60208501612fd4565b9301612fe2565b969295909a99989491610120989461014089019c6001600160801b03988993848093168c5260020b60208c01521660408a01521660608801526001600160401b0380921660808801521660a086015260020b60c085015260020b60e0840152166101008201520152565b919082608091031261077c576130a282612fd4565b916130af60208201612fd4565b91611d25606061301c60408501612fe2565b51906001600160401b038216820361077c57565b91939290936000946020830151600f0b82600f0b13613137576131056001600160801b03604085015116836134c0565b613110575b50505050565b61312d949550606060018060a01b03845116930151151593613160565b903880808061310a565b60405162461bcd60e51b81526020600482015260016024820152604b60f81b6044820152606490fd5b91936001600160a01b03939184831661317b57505050505090565b85600f9692939495960b600096818880931360001461323257505050506001600160801b0390808216926000146132275785926131b8858761332f565b875262010010602052604087209182548480821692168211600014613208575050826131e8835492828416611e30565b16906001600160801b0319161790555b811615612b2e57611d259261340f565b6001600160801b03191690925591925061322191611e30565b906131f8565b5050611d259261340f565b829492919395975012613249575b50505050505090565b61325290611cef565b94156132a6575050906132649161332f565b825262010010602052604082209081549061328b6001600160801b03918216828416611e15565b16906001600160801b0319161790555b388080838180613240565b9181809492936001600160801b036132fb9760405192602084019563a9059cbb60e01b8752166024840152166044820152604481526132e481611700565b51925af16132f0612f95565b816133005750613376565b61329b565b8051801592508215613315575b50503861103d565b613328925060208091830101910161335e565b388061330d565b604080516001600160a01b03928316602082019081529390921682820152815261335881611736565b51902090565b9081602091031261077c5751801515810361077c5790565b1561337d57565b60405162461bcd60e51b81526020600482015260026024820152612a2360f11b6044820152606490fd5b916001600160801b0391828116838316106133e5576133c591611e30565b16806133cf575050565b6000808080936133e3955af161103d612f95565b565b60405162461bcd60e51b8152602060048201526002602482015261454360f01b6044820152606490fd5b916001600160a01b03811661346e57506001600160801b0380911690816133e557600091820381811161345a5716918261344857505050565b81806133e39481935af161103d612f95565b634e487b7160e01b83526011600452602483fd5b6040516323b872dd60e01b602082019081526001600160a01b0390941660248201523060448201526001600160801b0390921660648301526133e3926000928392919083906132e48160848101610374565b600081600f0b136000146134d5575050600190565b6134de90611cef565b6001600160801b039182169116119056fea26469706673582212206b2ac943df24ab2355aee8f2d5aa2e5d1fe1661371ccf8e14fb818116260a23e64736f6c63430008130033",
    "sourceMap": "1008:4211:7:-:0;;;;;;;6318:3:52;1008:4211:7;;-1:-1:-1;;;;1008:4211:7;-1:-1:-1;;;1008:4211:7;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608080604052600436101561001357600080fd5b60003560e01c908163ac54c0fc146116c3575063f96dc7881461003557600080fd5b602036600319011261077c576001600160401b036004351161077c5736602360043501121561077c576001600160401b03600435600401351161077c573660246004356004013560043501011161077c576040516100928161176c565b61009a6117a8565b808252606060208301526004356004013560c01161077c576100c06024600435016118f0565b906100cf6044600435016118fe565b906100de606460043501611912565b916100ed608460043501611920565b926001600160801b0361010460a460043501611934565b9461011360c4600435016118f0565b9515156060860152166040840152600f0b60208301526001600160a01b0316905260c09160ff166000190161077c5761014e60ff821661183d565b61015b6040519182611787565b60ff8216808252601f199061016f9061183d565b0160005b81811061167d57505060208401526000915b60ff821683106111875783516040518561019e8261171b565b600082526000602083015260006040830152600060608301526101bf6117a8565b6080830152604051926101d184611736565b6101d96117cd565b84526101e361181e565b60208501526040516101f48161176c565b60008152600060208201526040850152602082015151916001830183116108dc579293906102246001840161183d565b926102326040519485611787565b600101808452601f19906102459061183d565b013660208501376000905b6020850151908151831015610e3857516001600160a01b039081169160209061027a908590611863565b510151511690818110806040890152600014610e2c57865260208601525b60406102a8826020870151611863565b510151855160208701516001600160a01b0390811691166102c761181e565b928051610dc6575b505050602083015260005b6102e8826020870151611863565b515151811015610c645761030b81610304846020890151611863565b5151611863565b51865160208801518251929792916001600160a01b03908116911661032e6117cd565b506103376117cd565b508082101561077c57604080516001600160a01b039384166020820190815293909216908201526060810183905260019160ff9161038281608081015b03601f198101835282611787565b5190209283600052620100096020526040600020908380604051936103a685611751565b54858116855261ffff8160081c166020860152858160181c16604086015261ffff8160201c166060860152858160301c166080860152858160381c1660a086015260401c85811660c08601521614600014610c5c5760601c5b6040519461040c86611736565b8286526020860152838060a01b03166040850152511611610c3157600160ff8251511603610c075780855287516020808a01519089015160608a01516040808c0151908601516001600160a01b039485169590851694919391169184610a18575b505050505050506080860151604051906104868261176c565b600080835260208301528051156109fd576040890151158252600060208301525b6040810151610939575b506040850152608087015196604051956104ca87611736565b6104d2611941565b875260006020880152600060408801526020865101516104f0611941565b506000526201000f60205260406000206040519061050d8261171b565b60018154916001600160801b0383169283855260801c602085015201546001600160801b03811660408401526001600160401b038160801c16606084015260c01c60808301521561077c57875260206080890151015115610924575b60208801516040870151885160ff602084015116918c8361083c575b5050505060408101906001600160801b038251168061069f575b50505060408801519460005b86518110156105de57806105d88c6105d28c8c836105cb6001988f611863565b5192611f49565b91611de9565b016105ab565b509561067e9493955087819a9992989399602060808501510151610688575b5050602091505101519051906000526201000f60205260016040600020916001600160801b038151166001600160801b0319602083015160801b161783556001600160801b03604082015116906001600160401b0360801b606082015160801b169060806001600160401b0360c01b91015160c01b16911717910155611854565b94919093946102da565b60606106969401519061197a565b888882826105fd565b905160009283929115610781576001600160801b039150511660208951015160018060a01b0360065416916107318c51916103746001600160801b03845116946001600160801b03602086015116926001600160801b03604087015116956001600160401b036080816060840151169201511690604051978896602088019a632ee1158760e01b8c5260248901612f4a565b51915af461073d612f95565b901561077c576107598160208061077494518301019101612ff6565b6001600160801b0360208c9493945101911690525b8b611de9565b89808061059f565b600080fd5b5060208951015160018060a01b0360065416916107fb8c51916103746001600160801b03845116946001600160801b03602086015116926001600160801b03604087015116956001600160401b036080816060840151169201511690604051978896602088019a630a9bc21960e21b8c5260248901612f4a565b51915af4610807612f95565b901561077c576108238160208061077494518301019101612ff6565b6001600160801b0360208c94939451019116905261076e565b61085a61086a916001600160801b0395866040890151169185611eca565b9485919451169251151593611e49565b91156109085780156108f257600160401b600160c01b0361088f9260401b1604611f0e565b905b80156108b5576001600160801b0391905b151583521660408201528a80808c610585565b6001600160801b03600181841601116108dc5760016001600160801b0380931601906108a2565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160801b0361091e92160260401c611f0e565b90610891565b610934868860608b01518c61197a565b610569565b51156109c8576040880151156109b457602088015161096d906001600160a01b03165b6000546001600160a01b031661332f565b600052620100106020526001600160801b03604060002054166001607f1b81101561077c576109a690600f0b6020830151600f0b6118b3565b600f0b6020820152886104b1565b875161096d906001600160a01b031661095c565b6040880151156109e657875161096d906001600160a01b031661095c565b602088015161096d906001600160a01b031661095c565b6040890151151582526060890151600f0b60208301526104a7565b610a8e906001600160801b03604060018060a09a9698979a1b03600054169661ffff60208c510151169582519a8b9963109b753160e11b8b5260048b01523360248b015260448a0152606489015280511515608489015260ff60208201511660a489015201511660c486015260e4850190612f0a565b6101c06101848401526101c48301825180915260206101e485019301906000905b808210610ba0575050506000836020959381936101a483015203925af18015610b9457600090610b55575b61ffff915016908115610b2c5761ffff6000198301116108dc5760209051019061ffff82511661ffff806000198401168203116108dc5761ffff8092600019011690031690528780808080808061046d565b60405162461bcd60e51b81526020600482015260016024820152602d60f91b6044820152606490fd5b506020813d602011610b8c575b81610b6f60209383611787565b8101031261077c575161ffff8116810361077c5761ffff90610ada565b3d9150610b62565b6040513d6000823e3d90fd5b9194509192602060c06001926001600160801b0360a089518051600290810b855286820151900b8685015260408101511515604085015260608101511515606085015260ff608082015116608085015201511660a082015201950192018694939291610aaf565b60405162461bcd60e51b8152602060048201526002602482015261504960f01b6044820152606490fd5b60405162461bcd60e51b815260206004820152600360248201526249505360e81b6044820152606490fd5b5060006103ff565b50608085015185516020870151604083015194979693946001600160a01b03918216936001600160801b039360609391928516911681610d98575b50500151169081610d5c575b5050604084015115610d41576080840151610cdb60208251600f0b920151600f0b915b6060870151600f0b61188d565b90600f0b60608601526000608086015152600060206080870151015260006040608087015101526000606060808701510152610d178385611863565b90600f0b9052610d386020610d2f8482850151611863565b51015192611854565b90939491610250565b6080840151610cdb6020820151600f0b9151600f0b91610cce565b6000526201000c6020526040600020906001600160801b03610d82835492828416611e15565b16906001600160801b0319161790558580610cab565b6000526201000c60205260406000209084610db7835492828416611e15565b16908519161790558980610c9f565b602001511580159290610e245750905b825260018060a01b0316806000526201000a90816020526001600160801b0360406000205460081c16602084015260005260205261ffff60406000205460881c1660408201528680806102cf565b905090610dd6565b60208701528552610298565b85856060890151600f0b610e5160208401515183611863565b52815191600080935b602083015151851015610eb75790610e8e610e9492610e798787611863565b51600f0b60018060a01b0360005416806130d5565b9061188d565b92610eb06020610ea78382860151611863565b51015191611854565b9390610e5a565b6060610eeb610ecc6020879601515186611863565b516000546001600160a01b03169490610e8e908590600f0b87806130d5565b91015115156000549160ff8360a81c1661115d576001600160801b0334169234840361077c5760ff60a81b1916600160a81b17600055600f81900b801561114e57600081131561107557506001600160801b03811691156110665760009160405160208101908682526000604082015260408152610f6881611736565b5190206000526201001060205260406000209182546001600160801b038082169216821160001461104a5750506001600160801b03610fab835492828416611e30565b16906001600160801b0319161790555b6001600160801b0381161561101b57610fd3926133a7565b60405180916020820160208352815180915260206040840192019060005b818110610fff575050500390f35b8251600f0b845285945060209384019390920191600101610ff1565b5080611029575b5050610fd3565b600080808093611043955af161103d612f95565b50613376565b8180611022565b6001600160801b0319169092556110619250611e30565b610fbb565b50611070926133a7565b610fd3565b600013611086575b50505050610fd3565b61108f90611cef565b6001600160801b0316901561112257604051602081019084825260006040820152604081526110bd81611736565b519020600052620100106020526040600020906001600160801b036110e6835492828416611e15565b16906001600160801b03191617905580611107575b50505b8180808061107d565b60008080809361111b955af161103d612f95565b81806110fb565b600080611149946001600160801b0361113d83968496611e15565b16905af161103d612f95565b6110fe565b50505080611029575050610fd3565b60405162461bcd60e51b8152602060048201526002602482015261445360f01b6044820152606490fd5b611195836020860151611863565b516020820182116108dc5760206111bb81840184600435600401356024600435016118d8565b908092918101031261077c576111d26020916118f0565b9201916111e160ff821661183d565b6111ee6040519182611787565b60ff8216808252601f19906112029061183d565b0160005b81811061163157505082526000905b60ff811682106112ec57505060c0820182116108dc5760c061124681840184600435600401356024600435016118d8565b908092918101031261077c5760ff926001928261126460c0946118fe565b906001600160801b0361127960208301611912565b9161128660408201611920565b9061129360608201611934565b906112ac60a06112a560808401611934565b9201611934565b906040602089015198015191151560208301521515905215156060860152166040840152600f0b6020830152848060a01b03169052019301929050610185565b90926112f9848451611863565b519060a0810181116108dc578061132160a080930182600435600401356024600435016118d8565b908093918101031261077c5760a09061133c60208401611934565b92611349604082016118f0565b9361135660608301611920565b9060ff611365608085016118f0565b966001600160801b0360208a01519416604085015216602083015215159052358452019061139560ff821661183d565b6113a26040519182611787565b60ff8216808252601f19906113b69061183d565b0160005b8181106115c357505060408401526000905b60ff811682106114f657505060a0810181116108dc5760a06113fd81830183600435600401356024600435016118d8565b908092918101031261077c5761141281611934565b61141e60208301611934565b60ff61142c604085016118f0565b6001600160801b0361144c608061144560608901611920565b9701611920565b958160608a0151971660808801521660608601521660408401521515602083015215159052610100810160a08201116108dc57806114a06101006060930160a08301600435600401356024600435016118d8565b908093918101031261077c57600192826114bc61010094611934565b9060806114d760406114d060208501611934565b9301611934565b9301519215156040840152151560208301521515905201930190611215565b9091611506836040860151611863565b519060c0810181116108dc578061152e60c080930182600435600401356024600435016118d8565b908093918101031261077c576001928261154960c09461196c565b906115566020820161196c565b9061156360408201611934565b9060ff61157260608301611934565b916001600160801b0361159360a061158c608085016118f0565b9301611920565b1660a08801521660808601521515604085015215156060840152600290810b60208401520b9052019201906113cc565b604051908160c08101106001600160401b0360c08401111761161b578160c06020930160405260008152600083820152600060408201526000606082015260006080820152600060a0820152828286010152016113ba565b634e487b7160e01b600052604160045260246000fd5b6020906040516116408161171b565b6000815261164c61181e565b838201526060604082015261165f611941565b606082015261166c61181e565b608082015282828601015201611206565b60209060405161168c81611736565b606081526116986117a8565b838201526040516116a88161176c565b60008152600084820152604082015282828601015201610173565b3461077c57604036600319011261077c576004356001600160a01b0381160361077c576024359061ffff821680920361077c576004602092148152f35b608081019081106001600160401b0382111761161b57604052565b60a081019081106001600160401b0382111761161b57604052565b606081019081106001600160401b0382111761161b57604052565b60e081019081106001600160401b0382111761161b57604052565b604081019081106001600160401b0382111761161b57604052565b90601f801991011681019081106001600160401b0382111761161b57604052565b604051906117b582611700565b60006060838281528260208201528260408201520152565b604051906117da82611736565b8160408051916117e983611751565b60009283815283602082015283838201528360608201528360808201528360a08201528360c082015281528260208201520152565b6040519061182b82611736565b60006040838281528260208201520152565b6001600160401b03811161161b5760051b60200190565b60001981146108dc5760010190565b80518210156118775760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90600f0b90600f0b019060016001607f1b0319821260016001607f1b038313176108dc57565b600f91820b910b039060016001607f1b0319821260016001607f1b038313176108dc57565b9093929384831161077c57841161077c578101920390565b359060ff8216820361077c57565b35906001600160a01b038216820361077c57565b359081600f0b820361077c57565b35906001600160801b038216820361077c57565b3590811515820361077c57565b6040519061194e8261171b565b60006080838281528260208201528260408201528260608201520152565b35908160020b820361077c57565b9260408101519060ff91826040850151169081611c42575b50506001600160801b036060840151166119ae575b5050505050565b516006548451926001600160a01b0391821692604091611a4c6119d0896123d2565b978451986001600160401b03608060208c019a633d9b87e160e11b8c528c60246001600160801b038351169101528c60446001600160801b036020840151169101528c60646001600160801b038b840151169101528c60848460608401511691015201511660a48b015260020b60c48a015260e4890190612f0a565b60c08251828151166101848a015261ffff806020830151166101a48b01528386830151166101c48b01526060820151166101e48a0152826080820151166102048a01528260a0820151166102248a01520151166102448701526020810151610264870152015116610284908185015283526102c08301918383106001600160401b0384111761161b57600093849360405251915af4611ae9612f95565b901561077c57611af76117a8565b50808051810103610120811261077c5760801361077c5760606001600160801b0381611c359360006020849760405193611b3085611700565b611b3b838201612fd4565b8552611b4960408201612fd4565b83860152611b58868201612fe2565b6040860152611b6960808201612fe2565b8686015286611b7a60a08301612fe2565b81611b8760c08501612fe2565b81611b9460e08701612fe2565b6001600160401b03611bb6610120611baf6101008b016130c1565b99016130c1565b97818a51991660808a0152168c880152166040860152168584015216905201528051611be9600f91820b8951830b61188d565b810b88526020820151810b90611c0660208a01928351830b61188d565b900b90528260408201511683611c2360408a019282845116611e15565b16905201511693019282845116611e15565b16905238808080806119a7565b611c6660608601916001600160801b0393611c618a8686511693611d07565b611d34565b855160208701519015159291849160009015611ce55750600081600f0b125b15158852600081600f0b13600014611cd55781165b169052845115159081146119925715611ccc576f0ffff5433e2b3d8211706e6102aa94725b1660808401523880611992565b62010002611cbf565b611cde90611cef565b8116611c9a565b81600f0b13611c85565b600f0b60016001607f1b031981146108dc5760000390565b8051611d259260209115611d285751600f0b915b0151600f0b61188d565b90565b810151600f0b91611d1b565b9060ff1660018103611d515750506001600160801b0316600f0b90565b60028103611d705750506001600160801b03611d259116600f0b611cef565b60048103611db657506001600160801b0390600f0b9116600f0b9081810291600160ff1b811460008312166108dc5781830514901517156108dc576127109005600f0b90565b600503611dd3576001600160801b03611d259216600f0b9061188d565b6001600160801b03611d259216600f0b906118b3565b602090611dfd611e0e938251600f0b61188d565b600f0b815201918251600f0b61188d565b600f0b9052565b9190916001600160801b03808094169116019182116108dc57565b6001600160801b0391821690821603919082116108dc57565b9015611e91576001600160801b039060009082166004811015611e6e57505050600090565b60031901918211611e7d575090565b634e487b7160e01b81526011600452602490fd5b6001600160801b039060009082166ffffffffffffffffffffffffffffffffb811115611ebc57505090565b600401918211611e7d575090565b611ed9939291611c6191611d07565b80600f0b906000821291600012600014611ef9576001600160801b031691565b611f0290611cef565b6001600160801b031691565b6001600160801b03811691906001600160c01b0316820361077c57565b9060020b9060020b0190627fffff198212627fffff8313176108dc57565b919392909360608201516121e6575b6040918282015190845192611f83825198602095868501958651918660029d8e94850b940b92612284565b848201978851612136575b60a08301926001600160801b03998a8551169081156121225792899695928c95928a8a965115159160009260001461207c57505050600097936120429386888b9a9998956103749551810b9a51900b935116915101519160018060a01b0360065416988d8989515116996120018a6123d2565b995190808983015116908383015116906001600160401b036080816060860151169401511693519b8c9a8b019d8e632370632b60e01b905260248c01613023565b51915af461204e612f95565b901561077c57612067818380899451830101910161308d565b95919890929651951690850152169101529190565b829a95839a9298610374949a98506120f896819651810b9451900b915101519260018060a01b0360065416998989515116996120b78a6123d2565b995190808983015116908383015116906001600160401b036080816060860151169401511693519b8c9a8b019d8e637c6dfe3d60e01b905260248c01613023565b51915af490612105612f95565b911561211f5750612067818380899451830101910161308d565b80fd5b505050505050505050509050600090600090565b61216f858301518451830b8651840b6001600160801b0360a0880151169061ffff6060885151015116926121698d6123d2565b94612722565b15611f8e5760005485835101518451865190895192898401946bffffffffffffffffffffffff199060601b168552603484015260e81b605483015260e81b6057820152603a81526121bf81611736565b5190206000908152620100128652869020805460ff60e81b1916600160e81b179055611f8e565b6121ef836123d2565b825190612200600292830b82611f2b565b820b845261221660208501918251840b90611f2b565b820b8091528351820b90620a276d198212159182612276575b8261226b575b5050156122425750611f58565b6064906040519062461bcd60e51b825260206004830152602482015261149560f21b6044820152fd5b131590503880612235565b620cb14a821315925061222f565b9493929491909160ff6080840151169384156123c9576122d160a08501976122bb6001600160801b03988998898c51169187611eca565b9790955116935115876122d78215948594612b93565b95612b93565b95858b16811161237f5750505061077c576122f5866122fa95611e49565b612698565b821561231957610800600160801b0360409116925b1515910152169052565b610800600160801b03808083161461234f5760016e1fffffffffffffffffffffffffffff604093600b1c1601600b1b169261230f565b60405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b6044820152606490fd5b91925090858a16811061239f57505061077c576122f5866122fa95611e49565b9091506122fa9594836000146123bb5750906122f59194611e49565b949350906122f59193611e49565b50505050505050565b60208101908151156123eb575b60409150015160020b90565b805151916001600160801b039081841693620100028510158061267f575b1561077c57600160401b600160c01b039060401b168083811160071b9181831c926001600160401b03841160061b93841c9363ffffffff851160051b94851c9461ffff861160041b95861c60ff9687821160031b91821c92600f841160021b93841c94600160038711811b96871c1196171717171717179160808310156000146126735750607e1982011c5b8002607f928392828493841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c80029081881c82881c1c80029283891c84891c1c800294858a1c868a1c1c800296878b1c888b1c1c800298898c1c8a8c1c1c80029a8b8d1c8c821c1c8002809d1c8d821c1c8002809e81901c90821c1c80029e8f80911c911c1c800260cd1c6604000000000000169d60cc1c6608000000000000169c60cb1c6610000000000000169b60ca1c6620000000000000169a60c91c6640000000000000169960c81c6680000000000000169860c71c670100000000000000169760c61c670200000000000000169660c51c670400000000000000169560c41c670800000000000000169460c31c671000000000000000169360c21c672000000000000000169260c11c674000000000000000169160c01c6780000000000000001690607f190160401b1717171717171717171717171717693627a301d71055774c85026f028f6481ab7f045a5af012a19d003aa919810160801d60020b906fdb2df09e81959a81455e260799a0632f0160801d60020b906000828214600014966001956040986126555750505090505b60020b84840152526123df565b61265e85612b93565b1611905061266c5750612648565b9050612648565b905081607f031b612495565b506f0ffff5433e2b3d8211706e6102aa94728510612409565b9291906126be579060016126b86126b2611d259594612700565b92612700565b92612698565b6001600160801b0391829181831681841611156126f85703165b1680156108f257600160401b600160c01b03611d259260401b1604611f0e565b9003166126d8565b6001600160801b0380911680156108f257600160801b0481811161077c571690565b939091929461ffff821660020b61273981856127e3565b60020b1590816127ce575b501561275557505050505050600090565b8360020b8360020b121561077c57838361276f9287612ae8565b156127bd5761277d936127f5565b6001600160801b0380911691161061279457600190565b60405162461bcd60e51b81526020600482015260016024820152601160fa1b6044820152606490fd5b505050506001600160801b0361277d565b6127d99150856127e3565b60020b1538612744565b9060020b9081156108f25760020b0790565b926128018184846128dc565b9162ffffff83161561284b5750506128189261287f565b60011b7001fffffffffffffffffffffffffffffffe6ffffffffffffffffffffffffffffffffe8216911681036108dc5790565b61287992506128738461286c84612866611d25999886612a21565b94612aa5565b928661287f565b9361287f565b90611e15565b9062ffffff1680156128c057611d25926126b86128bb6001600160801b0360208601511694511515926128b181612b93565b9460020b90611f2b565b612b93565b505050600090565b60020b627fffff1981146108dc5760000390565b90918060020b8360020b8181121561077c57600013908180612956575b1561291c57505091612916612910611d25946128c8565b916128c8565b916128dc565b9192918161294a575b501561293357505050600090565b61ffff611d259362ffffff9384169316911661299d565b60009150121538612925565b50600081126128f9565b9062ffffff8091169182156108f257160690565b9062ffffff8091169182156108f257160490565b62ffffff91821690821603919082116108dc57565b62ffffff806129ac8385612960565b161580156129f4575b156129c35750505050600090565b806129d86129d18486612974565b9386612974565b16911614156000146129eb575050600090565b611d2591612988565b5080612a008386612960565b16156129b5565b91909162ffffff808094169116029182169182036108dc57565b908060020b90600091828112612a935715612a8d5762ffffff9081169261ffff16916000198401828111612a795782612a5c85600193612974565b1601918211611e7d5750611d259291612a7491612a07565b612988565b634e487b7160e01b82526011600452602482fd5b50905090565b50611d25929150612aa3906128c8565b905b60008260020b12612ad657612ad061ffff611d259362ffffff169216612acb8184612974565b612a07565b90612988565b612ae2611d25926128c8565b90612a21565b929190916001600160801b0360208501511615612b4157612b18604091612b128561ffff95612b67565b94612b67565b93015116908162ffffff80921611159283612b34575b50505090565b1611159050388080612b2e565b50505050600090565b600291820b910b0390627fffff198212627fffff8313176108dc57565b908160020b8160020b13600014612b8a5790612b8291612b4a565b62ffffff1690565b612b8291612b4a565b60020b620a276d1981121580612efd575b1561077c576000811215612ef75780600003905b6001821615612ee5576001600160881b036ffffcb933bd6fad37aa2d162d1a5940015b169160028116612ec9575b60048116612ead575b60088116612e91575b60108116612e75575b60208116612e59575b60408116612e3d575b608090818116612e22575b6101008116612e07575b6102008116612dec575b6104008116612dd1575b6108008116612db6575b6110008116612d9b575b6120008116612d80575b6140008116612d65575b6180008116612d4a575b620100008116612d2f575b620200008116612d15575b620400008116612cfb575b6208000016612ce0575b50600012612cd1575b6001600160801b03906001600160401b038116612cc85760ff60005b169060401c011690565b60ff6001612cbe565b80156108f25760001904612ca2565b6b048a170391f7dc42444e8fa26000929302901c9190612c99565b6d2216e584f5fa1ea926041bedfe98909302811c92612c8f565b926e5d6af8dedb81196699c329225ee60402811c92612c84565b926f09aa508b5b7a84e1c677de54f3e99bc902811c92612c79565b926f31be135f97d08fd981231505542fcfa602811c92612c6e565b926f70d869a156d2a1b890bb3df62baf32f702811c92612c64565b926fa9f746462d870fdf8a65dc1f90e061e502811c92612c5a565b926fd097f3bdfd2022b8845ad8f792aa582502811c92612c50565b926fe7159475a2c29b7443b29c7fa6e889d902811c92612c46565b926ff3392b0822b70005940c7a398e4b70f302811c92612c3c565b926ff987a7253ac413176f2b074cf7815e5402811c92612c32565b926ffcbe86c7900a88aedcffc83b479aa3a402811c92612c28565b926ffe5dee046a99a2a811c461f1969c305302811c92612c1e565b916fff2ea16466c96a3843ec78b326b528610260801c91612c13565b916fff973b41fa98c081472e6896dfb254c00260801c91612c0a565b916fffcb9843d60f6159c9db58835c9266440260801c91612c01565b916fffe5caca7e10e4e61c3624eaa0941cd00260801c91612bf8565b916ffff2e50f5f656932ef12357cf3c7fdcc0260801c91612bef565b916ffff97272373d413259a46990580e213a0260801c91612be6565b6001600160881b03600160801b612bdb565b80612bb8565b50620cb14a811315612ba4565b60809080511515835260208101511515602084015260ff6040820151166040840152816001600160801b0391826060820151166060860152015116910152565b6001600160801b039182168152918116602083015291821660408201526001600160401b039283166060820152919092166080820152911660a082015260c081019190915260e00190565b3d15612fcf573d906001600160401b03821161161b5760405191612fc3601f8201601f191660200184611787565b82523d6000602084013e565b606090565b519081600f0b820361077c57565b51906001600160801b038216820361077c57565b9081606091031261077c5761300a81612fd4565b91611d25604061301c60208501612fd4565b9301612fe2565b969295909a99989491610120989461014089019c6001600160801b03988993848093168c5260020b60208c01521660408a01521660608801526001600160401b0380921660808801521660a086015260020b60c085015260020b60e0840152166101008201520152565b919082608091031261077c576130a282612fd4565b916130af60208201612fd4565b91611d25606061301c60408501612fe2565b51906001600160401b038216820361077c57565b91939290936000946020830151600f0b82600f0b13613137576131056001600160801b03604085015116836134c0565b613110575b50505050565b61312d949550606060018060a01b03845116930151151593613160565b903880808061310a565b60405162461bcd60e51b81526020600482015260016024820152604b60f81b6044820152606490fd5b91936001600160a01b03939184831661317b57505050505090565b85600f9692939495960b600096818880931360001461323257505050506001600160801b0390808216926000146132275785926131b8858761332f565b875262010010602052604087209182548480821692168211600014613208575050826131e8835492828416611e30565b16906001600160801b0319161790555b811615612b2e57611d259261340f565b6001600160801b03191690925591925061322191611e30565b906131f8565b5050611d259261340f565b829492919395975012613249575b50505050505090565b61325290611cef565b94156132a6575050906132649161332f565b825262010010602052604082209081549061328b6001600160801b03918216828416611e15565b16906001600160801b0319161790555b388080838180613240565b9181809492936001600160801b036132fb9760405192602084019563a9059cbb60e01b8752166024840152166044820152604481526132e481611700565b51925af16132f0612f95565b816133005750613376565b61329b565b8051801592508215613315575b50503861103d565b613328925060208091830101910161335e565b388061330d565b604080516001600160a01b03928316602082019081529390921682820152815261335881611736565b51902090565b9081602091031261077c5751801515810361077c5790565b1561337d57565b60405162461bcd60e51b81526020600482015260026024820152612a2360f11b6044820152606490fd5b916001600160801b0391828116838316106133e5576133c591611e30565b16806133cf575050565b6000808080936133e3955af161103d612f95565b565b60405162461bcd60e51b8152602060048201526002602482015261454360f01b6044820152606490fd5b916001600160a01b03811661346e57506001600160801b0380911690816133e557600091820381811161345a5716918261344857505050565b81806133e39481935af161103d612f95565b634e487b7160e01b83526011600452602483fd5b6040516323b872dd60e01b602082019081526001600160a01b0390941660248201523060448201526001600160801b0390921660648301526133e3926000928392919083906132e48160848101610374565b600081600f0b136000146134d5575050600190565b6134de90611cef565b6001600160801b039182169116119056fea26469706673582212206b2ac943df24ab2355aee8f2d5aa2e5d1fe1661371ccf8e14fb818116260a23e64736f6c63430008130033",
    "sourceMap": "1008:4211:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1008:4211:7;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;1430:4:28;1008:4211:7;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1008:4211:7;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;1368:21:28;;1008:4211:7;;;1333:21:28;;1008:4211:7;;;-1:-1:-1;1312:19:28;;1008:4211:7;-1:-1:-1;;;;;1008:4211:7;;;1430:4:28;;1008:4211:7;;-1:-1:-1;;1615:30:28;599:1;;1008:4211:7;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;599:1:28;;;;:::i;:::-;;1008:4211:7;599:1:28;;;;;;1008:4211:7;;;;;1665:46:28;1008:4211:7;1825:102:28;1842:7;1008:4211:7;;;1842:7:28;;;;2130:11:7;;1008:4211;;2130:11;1008:4211;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2267:11;1008:4211;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;599:1:28;1008:4211:7;;;:::i;:::-;;;;;;;;2300:1031;2341:3;1008:4211;;;2321:11;1008:4211;;;2317:22;;;;;1008:4211;-1:-1:-1;;;;;1008:4211:7;;;;;;2396:14;;1008:4211;;2396:14;:::i;:::-;;:22;;1008:4211;;1822:22:38;;;;1008:4211:7;;;;;1854:214:38;1008:4211:7;;;;;;;;;1854:214:38;1008:4211:7;2474:14;1008:4211;;;;2474:11;:14;:::i;:::-;;:23;;1008:4211;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;:::i;:::-;;;;13563:265:47;;1854:214:38;1008:4211:7;;;;;;2440:141;1008:4211;2647:3;2617:14;1008:4211;;;;2617:11;:14;:::i;:::-;;:21;1008:4211;2613:32;;;;;2708:24;1008:4211;2708:14;1008:4211;;;;2708:11;:14;:::i;:::-;;:21;:24;:::i;:::-;;1008:4211;;;;;;;;2708:24;;1008:4211;;-1:-1:-1;;;;;1008:4211:7;;;;;;;:::i;:::-;;;;:::i;:::-;;5837:15:32;;;599:1:28;;;1008:4211:7;;;-1:-1:-1;;;;;1008:4211:7;;;;5880:35:32;;1008:4211:7;;;;;;;;;;;;;;;;;;;;;5880:35:32;1008:4211:7;;;;5880:35:32;;599:1:28;;5880:35:32;;;;;;:::i;:::-;1008:4211:7;5870:46:32;;1008:4211:7;;;;14399:6:47;1008:4211:7;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1430:4:28;1008:4211:7;;;6518:33:32;:38;6574:84;599:1:28;;;1008:4211:7;;6574:84:32;1008:4211:7;;;;;;:::i;:::-;;;;;4700:55:32;;1008:4211:7;;;;;;;;4700:55:32;;1008:4211:7;;;17230:43:47;3621:1:32;;1008:4211:7;;17298:10:47;;1008:4211:7;;17298:43:47;1008:4211:7;;2750:112;;;1008:4211;;;;;;;2972:12;;;;1008:4211;2986:9;;;1008:4211;2997:9;;;;4700:55:32;;;1008:4211:7;-1:-1:-1;;;;;1008:4211:7;;;;;;;;2997:9;;1008:4211;;;;3524:314:47;;6574:84:32;3049:10:7;;;;;;;1008:4211;3049:10;;;1008:4211;;;;;;:::i;:::-;;;;;;;;;;;;4476:15;;1008:4211;;;;;;;;;;;;4472:228;1008:4211;4714:20;;1008:4211;4710:218;;4472:228;1008:4211;;;;3025:42;1008:4211;;;3100:11;1008:4211;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;2341:10:46;;:16;1008:4211:7;;;:::i;:::-;;;;1398:7:44;1008:4211:7;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;;1430:4:28;1008:4211:7;;;;;1432:20:44;599:1:28;;2316:42:46;;1008:4211:7;;3049:10;;14181::46;:21;1008:4211:7;;14176:92:46;;4472:228:7;1008:4211;2972:12;;14296::46;1008:4211:7;;;15307:10:46;15337:12;;1008:4211:7;;8661:13:21;;1008:4211:7;;8661:29:21;;;8657:341;;4472:228:7;15379:14:46;;;;1008:4211:7;15379:14:46;;1008:4211:7;-1:-1:-1;;;;;1008:4211:7;;;15379:18:46;15375:289;;4472:228:7;2997:9;;;1008:4211;2997:9;;14356::46;16182:10;1008:4211:7;16211:3:46;1008:4211:7;;16194:15:46;;;;;16322:7;16369:9;16322:7;16268:62;16322:7;;;;1008:4211:7;16322:7:46;;;:::i;:::-;;16268:62;;:::i;:::-;16369:9;;:::i;:::-;599:1:28;16182:10:46;;16194:15;;;2647:3:7;16194:15:46;;;;;;;;;;;;1008:4211:7;;3049:10;;14393::46;:21;1008:4211:7;14389:91:46;;16177:213;2487:10;;1008:4211:7;2487:10:46;;;:16;1008:4211:7;2505:12:46;;1008:4211:7;;;1398:7:44;1008:4211:7;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;1430:4:28;1008:4211:7;;;;;;;;2647:3;:::i;:::-;2601:10;;;;;;;14389:91:46;1008:4211:7;14464:4:46;2986:9:7;;14446::46;14464:4;;:::i;:::-;14389:91;;;;;;15375:289;1008:4211:7;;;;;;-1:-1:-1;1008:4211:7;15443:160:46;;-1:-1:-1;;;;;1008:4211:7;;;;;15511:10:46;;:16;1008:4211:7;;;;;;10065:1:52;;1008:4211:7;3366:12:50;3244:337;3366:12;;1008:4211:7;3244:337:50;-1:-1:-1;;;;;1008:4211:7;;;3406:26:50;-1:-1:-1;;;;;1008:4211:7;3406:26:50;;1008:4211:7;;3448:21:50;-1:-1:-1;;;;;1008:4211:7;3448:21:50;;1008:4211:7;;3485:26:50;-1:-1:-1;;;;;1008:4211:7;3485:26:50;1008:4211:7;3485:26:50;;1008:4211:7;;3527:24:50;;1008:4211:7;;;;;3244:337:50;;;1008:4211:7;3244:337:50;;;;;;;;1008:4211:7;3244:337:50;;;:::i;:::-;3179:403;;;;;;:::i;:::-;599:1:28;;;;3701:45:50;1008:4211:7;;;15647:5:46;1008:4211:7;;3701:45:50;;;;;;:::i;:::-;-1:-1:-1;;;;;1008:4211:7;3658:12:50;;;;;:26;1008:4211:7;;;;15443:160:46;15647:5;;:::i;:::-;15375:289;;;;;599:1:28;1008:4211:7;599:1:28;;15443:160:46;15586:10;1008:4211:7;15586:10:46;;:16;1008:4211:7;;;;;;10065:1:52;;1008:4211:7;4276:12:50;4154:337;4276:12;;1008:4211:7;4154:337:50;-1:-1:-1;;;;;1008:4211:7;;;4316:26:50;-1:-1:-1;;;;;1008:4211:7;4316:26:50;;1008:4211:7;;4358:21:50;-1:-1:-1;;;;;1008:4211:7;4358:21:50;;1008:4211:7;;4395:26:50;-1:-1:-1;;;;;1008:4211:7;4395:26:50;1008:4211:7;4395:26:50;;1008:4211:7;;4437:24:50;;1008:4211:7;;;;;4154:337:50;;;1008:4211:7;4154:337:50;;;;;;;;1008:4211:7;4154:337:50;;;:::i;:::-;4089:403;;;;;;:::i;:::-;599:1:28;;;;4611:45:50;1008:4211:7;;;15647:5:46;1008:4211:7;;4611:45:50;;;;;;:::i;:::-;-1:-1:-1;;;;;1008:4211:7;4568:12:50;;;;;:26;1008:4211:7;;;;15443:160:46;;8657:341:21;8757:59;12573:35;8801:14;-1:-1:-1;;;;;8801:14:21;;1008:4211:7;8801:14:21;;1008:4211:7;;8757:59:21;;;:::i;:::-;1008:4211:7;;;;;;;;;;12573:35:21;;:::i;:::-;16009:142:25;;;;1008:4211:7;;;;-1:-1:-1;;;;;;;16030:53:25;1008:4211:7;;;;;16030:53:25;:::i;:::-;16009:142;;12679:23:21;;;;-1:-1:-1;;;;;12679:23:21;;;1008:4211:7;;;;;;8801:14:21;;1008:4211:7;8657:341:21;;;;;;12679:23;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;12679:23:21;;;1008:4211:7;;;;;;;;;;;;;;;;;2529:1:21;;1008:4211:7;2529:1:21;1008:4211:7;;2529:1:21;16009:142:25;-1:-1:-1;;;;;16098:53:25;1008:4211:7;;;;;16098:53:25;:::i;:::-;16009:142;;;14176:92:46;14252:4;2986:9:7;;1008:4211;2986:9;;14234::46;14252:4;;:::i;:::-;14176:92;;4710:218:7;1008:4211;;4766:70;;1008:4211;;;;;2475:51:38;;1008:4211:7;;;;11879:21:51;;-1:-1:-1;;;;;1008:4211:7;2475:51:38;1008:4211:7;;-1:-1:-1;;;;;1008:4211:7;11879:21:51;:::i;:::-;1008:4211:7;;11917:9:51;1008:4211:7;;-1:-1:-1;;;;;1008:4211:7;;;;;;1860:6:35;;1856:10;;599:1:28;;;4850:67:7;1008:4211;;;;;;;;;4850:67;:::i;:::-;1008:4211;;;;;;4710:218;;;2475:51:38;1008:4211:7;;11879:21:51;;-1:-1:-1;;;;;1008:4211:7;2475:51:38;;4766:70:7;1008:4211;;;;;2247:51:38;;1008:4211:7;;11879:21:51;;-1:-1:-1;;;;;1008:4211:7;4766:70;;2247:51:38;1008:4211:7;;;;11879:21:51;;-1:-1:-1;;;;;1008:4211:7;4766:70;;4472:228;1008:4211;;;;;;;;;;;;;;;;;;4472:228;;3524:314:47;1008:4211:7;;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;;;;;;3764:10:47;1008:4211:7;;3764:10:47;;:19;634:6:37;1008:4211:7;;;;;;;;;;3588:196:47;;1008:4211:7;3588:196:47;;1008:4211:7;3675:10:47;1008:4211:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3588:196:47;;;;;;;;1008:4211:7;3588:196:47;;;1008:4211:7;;;;;4162:12:47;;;1008:4211:7;;;-1:-1:-1;;1008:4211:7;;;;;;4190:10:47;;:19;634:6:37;1008:4211:7;634:6:37;;1008:4211:7;;;;;;;;;;;;;;;;;;;;;;;;;3524:314:47;;;;;;;;;1008:4211:7;;;-1:-1:-1;;;1008:4211:7;;;;;;;;;;;;-1:-1:-1;;;1008:4211:7;;;;;;;3588:196:47;;1008:4211:7;3588:196:47;;1008:4211:7;3588:196:47;;;;;;1008:4211:7;3588:196:47;;;:::i;:::-;;;1008:4211:7;;;;;;;;;;;;;3588:196:47;;;;;;-1:-1:-1;3588:196:47;;;1008:4211:7;;;;;;;;;;;;;;;;1430:4:28;1008:4211:7;;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1008:4211:7;;;;;;;;;;;;-1:-1:-1;;;1008:4211:7;;;;;;;3621:1:32;1008:4211:7;;-1:-1:-1;;;3621:1:32;;1008:4211:7;;3621:1:32;;;1008:4211:7;;3621:1:32;;1008:4211:7;-1:-1:-1;;;1008:4211:7;;;3621:1:32;1008:4211:7;;3621:1:32;6574:84;;1008:4211:7;6574:84:32;;2613:32:7;-1:-1:-1;1008:4211:7;;;900:11:49;1008:4211:7;;;;;;;1195:16:49;;1008:4211:7;2613:32;;;;;-1:-1:-1;;;;;1008:4211:7;;;;-1:-1:-1;;;;;1008:4211:7;;;900:11:49;;1008:4211:7;;;;;1191:87:49;;2596:542:7;1291:17:49;;;1008:4211:7;;1291:21:49;;1287:90;;2596:542:7;-1:-1:-1;;1008:4211:7;;;;;3472:132:38;;1008:4211:7;;;3504:9:38;3637:25;1008:4211:7;;;;;3525:20:38;;1008:4211:7;;;3472:132:38;;1008:4211:7;;;;;;3637:25:38;:::i;:::-;1008:4211:7;;;;;;;;;;;3715:9:38;1008:4211:7;;;;;;3748:9:38;:20;1008:4211:7;;;;;;3782:9:38;:20;1008:4211:7;;;;;;3816:9:38;:21;1008:4211:7;3241:27;;;;:::i;:::-;1008:4211;;;;;2341:3;1008:4211;3298:14;1008:4211;;;;3298:11;:14;:::i;:::-;;:22;;2341:3;;:::i;:::-;2305:10;;;;;;3472:132:38;1008:4211:7;;;3562:9:38;3637:25;1008:4211:7;3562:20:38;;1008:4211:7;;;;;;;3472:132:38;;;1287:90:49;1008:4211:7;;1328:10:49;1008:4211:7;;;;;;-1:-1:-1;;;;;1328:38:49;1008:4211:7;;;;;;1328:38:49;:::i;:::-;1008:4211:7;;-1:-1:-1;;;;;1008:4211:7;;;;;1287:90:49;;;;1191:87;1008:4211:7;;1231:10:49;1008:4211:7;;;;;;;1231:36:49;1008:4211:7;;;;;;1231:36:49;:::i;:::-;1008:4211:7;;;;;;;;1191:87:49;;;;13563:265:47;1008:4211:7;13613:16:47;1008:4211:7;;;;;13613:31:47;;;;;;1008:4211:7;;;;;;;;;;;13726:9:47;1008:4211:7;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;;13703:20:47;;1008:4211:7;;;;;;;;;;;;;;13772:15:47;;1008:4211:7;13563:265:47;;;;;13613:31;;;;;;1854:214:38;1008:4211:7;;;;;;1854:214:38;;2317:22:7;;;1008:4211;2317:22;1008:4211;;;;3341:45;1008:4211;;;3347:11;1008:4211;3341:45;;:::i;:::-;1008:4211;3612:11;;3633:18;1008:4211;;3662:168;3703:3;1008:4211;;;3683:11;1008:4211;3679:22;;;;;3743:8;3425:39:51;3722:45:7;3743:8;;;;;:::i;:::-;1008:4211;;;;;;;;;;;3425:39:51;;:::i;:::-;3722:45:7;;:::i;:::-;1008:4211;3703:3;1008:4211;3797:14;1008:4211;;;;3797:11;:14;:::i;:::-;;:22;;3703:3;;:::i;:::-;3667:10;;;;3679:22;1008:4211;4892:51:51;3851:25:7;1008:4211;3679:22;;1008:4211;3857:11;1008:4211;3851:25;;:::i;:::-;1008:4211;;;-1:-1:-1;;;;;1008:4211:7;;;4904:39:51;;1008:4211:7;;;;;;4904:39:51;:::i;4892:51::-;4996:15;;1008:4211:7;;;;;;;;;;;;;-1:-1:-1;;;;;3712:9:40;1008:4211:7;3712:9:40;;828:21:35;;599:1:28;;-1:-1:-1;;;;1008:4211:7;-1:-1:-1;;;1008:4211:7;;;;;;;13351:9:51;;1008:4211:7;;;12152:8:51;;1008:4211:7;;;-1:-1:-1;;;;;;1008:4211:7;;;15411:232:51;;;1008:4211:7;;;;;17421:23:40;;1008:4211:7;;;;;;;;;;17421:23:40;;;;;:::i;:::-;1008:4211:7;17411:34:40;;1008:4211:7;;20561:9:51;1008:4211:7;;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;20648:15:51;;20644:175;1008:4211:7;;;;;-1:-1:-1;;;;;20679:31:51;1008:4211:7;;;;;;20679:31:51;:::i;:::-;1008:4211:7;;-1:-1:-1;;;;;1008:4211:7;;;;;20644:175:51;-1:-1:-1;;;;;1008:4211:7;;15933:13:51;1008:4211:7;;16000:9:51;;;:::i;:::-;1008:4211:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1008:4211:7;;;;;;;;;;;;;15929:178:51;18993:11;;18989:85;;15929:178;;;;;18989:85;1008:4211:7;1893:25:39;;;;1928:22;1893:25;;;;;:::i;:::-;;1928:22;:::i;:::-;18989:85:51;;;;20644:175;-1:-1:-1;;;;;;1008:4211:7;;;;20793:15:51;;-1:-1:-1;20793:15:51;:::i;:::-;20644:175;;15411:232;15622:9;;;;:::i;:::-;15411:232;;14883:226;1008:4211:7;-1:-1:-1;14997:112:51;;14883:226;;;;;;;14997:112;15060:5;;;:::i;:::-;-1:-1:-1;;;;;1008:4211:7;;16393:204:51;;;1008:4211:7;;;17421:23:40;;1008:4211:7;;;;;;;;;;17421:23:40;;;;;:::i;:::-;1008:4211:7;17411:34:40;;1008:4211:7;;20043:9:51;1008:4211:7;;;;;;-1:-1:-1;;;;;20043:42:51;1008:4211:7;;;;;;20043:42:51;:::i;:::-;1008:4211:7;;-1:-1:-1;;;;;1008:4211:7;;;;;18993:11:51;18989:85;;16393:204;;;;14997:112;;;;;;18989:85;1008:4211:7;1893:25:39;;;;1928:22;1893:25;;;;;:::i;1928:22::-;18989:85:51;;;;16393:204;1008:4211:7;17953:15:51;1928:22:39;17953:15:51;-1:-1:-1;;;;;17953:15:51;;;;;;:::i;:::-;1008:4211:7;1893:25:39;;;;;:::i;1928:22::-;16393:204:51;;13347:172;18993:11;;;;18989:85;;13347:172;;;;1008:4211:7;;;-1:-1:-1;;;1008:4211:7;;;;;;;;;;;;-1:-1:-1;;;1008:4211:7;;;;;;;1851:3:28;1888:12;1008:4211:7;;;;1888:9:28;:12;:::i;:::-;;1008:4211:7;;;;;;;;2325:21:28;1008:4211:7;;;;;;;;;;;;;2325:21:28;:::i;:::-;2314:42;;;;;;1008:4211:7;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;599:1:28;1008:4211:7;;;:::i;:::-;;;;;;;;;2426:52:28;;;;1008:4211:7;2592:104:28;2609:11;1008:4211:7;;;2609:11:28;;;;1008:4211:7;;1430:4:28;1008:4211:7;;;;;;1430:4:28;3161:27;1008:4211:7;;;;;;;;;;;;;3161:27:28;:::i;:::-;3150:85;;;;;;1008:4211:7;;;;;;;;;;1430:4:28;1008:4211:7;;:::i;:::-;;-1:-1:-1;;;;;1008:4211:7;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;2979:11:28;1008:4211:7;;2979:11:28;;;3084:12;;;1008:4211:7;;;;3109:25:28;;1008:4211:7;;;;;;;;3059:23:28;;1008:4211:7;;;3022:23:28;;1008:4211:7;;;;2999:21:28;;1008:4211:7;;;;;;;;;;1851:3:28;599:1;1830:10;;;;;2622:3;2658:10;;:13;:10;;;:13;:::i;:::-;;2648:37;1008:4211:7;;;;;;;;3882:23:28;1008:4211:7;;;;;;;;;;;;;;3882:23:28;:::i;:::-;3871:75;;;;;;1008:4211:7;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;3775:13:28;-1:-1:-1;;;;;1008:4211:7;3775:13:28;;;1008:4211:7;;;3822:24:28;;1008:4211:7;;;3797:23:28;;1008:4211:7;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;599:1:28;1008:4211:7;;;:::i;:::-;;;;;;;;;4092:10:28;;1008:4211:7;4092:10:28;;:60;1008:4211:7;4267:112:28;4284:11;1008:4211:7;;;4284:11:28;;;;1008:4211:7;;;;;;;;;;4543:23:28;1008:4211:7;;;;;;;;;;;;;4543:23:28;:::i;:::-;4532:74;;;;;;1008:4211:7;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;;;1008:4211:7;;;;;;;:::i;:::-;;;;:::i;:::-;4400:10:28;;1008:4211:7;4400:10:28;;;1008:4211:7;;;4494:22:28;;1008:4211:7;;;4477:15:28;;1008:4211:7;;;4455:20:28;;1008:4211:7;;;;4419:21:28;;1008:4211:7;;;;;;;;;;;;;;;4852:23:28;1008:4211:7;;;;;;;;;;;;;;;;4852:23:28;:::i;:::-;4841:55;;;;;;1008:4211:7;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;4752:11:28;;;1008:4211:7;;;;4811:26:28;;1008:4211:7;;;;4775:22:28;;1008:4211:7;;;;;;2622:3:28;599:1;2597:10;;;4297:3;4092:10;;4341:13;4092:10;1008:4211:7;4092:10:28;;4341;:13;:::i;:::-;;1008:4211:7;1430:4:28;1008:4211:7;;;;;;;5506:27:28;1430:4;1008:4211:7;;;;;;;;;;;;;5506:27:28;:::i;:::-;5495:96;;;;;;1008:4211:7;;;;;;;;1430:4:28;1008:4211:7;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1008:4211:7;;;;;;;:::i;:::-;;;;:::i;:::-;;;5476:15:28;;1008:4211:7;;;5460:14:28;;1008:4211:7;;;;5435:11:28;;1008:4211:7;;;;5418:15:28;;1008:4211:7;;;;;;5402:14:28;;1008:4211:7;;;;;4297:3:28;599:1;4272:10;;;1008:4211:7;;;;;1430:4:28;1008:4211:7;;;-1:-1:-1;;;;;1430:4:28;1008:4211:7;;;;;;;1430:4:28;1008:4211:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;599:1:28;1008:4211:7;;;;;;;:::i;:::-;;599:1:28;;1008:4211:7;;:::i;:::-;599:1:28;;;;1008:4211:7;;;;;:::i;:::-;;;;;;;;;;599:1:28;;;;;;;;;;;;1008:4211:7;;;;;;-1:-1:-1;;1008:4211:7;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;;;;;;;;;;5178:32;;1008:4211;;;;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;:::o;:::-;;599:1:28;;;1008:4211:7;;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;1008:4211:7;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;-1:-1:-1;1008:4211:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;1008:4211:7;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;:::o;:::-;-1:-1:-1;;1008:4211:7;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;-1:-1:-1;;;;;1008:4211:7;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;;1008:4211:7;;-1:-1:-1;;;;;1008:4211:7;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1008:4211:7;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1008:4211:7;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;1008:4211:7;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;14573:383:46:-;;14813:10;;;;1008:4211:7;;15947:14:21;;14813:10:46;15947:14:21;;1008:4211:7;;15947:30:21;;15943:168;;14573:383:46;14860:8;;-1:-1:-1;;;;;14860:8:46;;;1008:4211:7;;14856:94:46;;14573:383;;;;;;:::o;14856:94::-;14916:10;10065:1:52;;7418:12:50;;;-1:-1:-1;;;;;1008:4211:7;;;;14813:10:46;;1008:4211:7;7432:21:50;7418:12;7432:21;:::i;:::-;1008:4211:7;;;7208:258:50;-1:-1:-1;;;;;1008:4211:7;7208:258:50;;;;;;;;;1008:4211:7;7208:258:50;-1:-1:-1;;;;;1008:4211:7;;;7208:258:50;;1008:4211:7;;;-1:-1:-1;;;;;7208:258:50;1008:4211:7;;;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;;;14860:8:46;1008:4211:7;;;;;;10065:1:52;1008:4211:7;;;;;;10065:1:52;1008:4211:7;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;7208:258:50;1008:4211:7;;;;;;;;;;;;;;;;;;14860:8:46;1008:4211:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7208:258:50;1008:4211:7;;;;;;;;;;;;;;;;7208:258:50;;1008:4211:7;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;-1:-1:-1;1008:4211:7;;;14813:10:46;1008:4211:7;7143:324:50;;;;;;:::i;:::-;599:1:28;;;;1008:4211:7;;:::i;:::-;;;;;7739:114:50;;1008:4211:7;;;;;;;-1:-1:-1;1008:4211:7;;14860:8:46;-1:-1:-1;;;;;1008:4211:7;6173:37:21;1008:4211:7;-1:-1:-1;7208:258:50;1008:4211:7;;14813:10:46;1008:4211:7;;;;;:::i;:::-;10065:1:52;7739:114:50;;;10065:1:52;:::i;:::-;1008:4211:7;;10065:1:52;14813:10:46;1008:4211:7;;10065:1:52;:::i;:::-;1008:4211:7;;;;10065:1:52;1008:4211:7;;;10065:1:52;:::i;:::-;14813:10:46;1008:4211:7;;;10065:1:52;1008:4211:7;;;10065:1:52;:::i;:::-;1008:4211:7;;;;;10065:1:52;1008:4211:7;;;10065:1:52;:::i;:::-;1008:4211:7;10065:1:52;1008:4211:7;;;10065:1:52;:::i;:::-;1008:4211:7;10065:1:52;1008:4211:7;;;10065:1:52;:::i;:::-;-1:-1:-1;;;;;1008:4211:7;;;;;;;:::i;:::-;;;;:::i;:::-;7558:12:50;;;;1008:4211:7;;;7698:24:50;;1008:4211:7;;7661:26:50;;;1008:4211:7;;14813:10:46;7629:21:50;;1008:4211:7;;7592:26:50;;;1008:4211:7;;;;1831:18:24;1008:4211:7;;;6040:33:21;1008:4211:7;;;;;;;;6040:33:21;:::i;:::-;1008:4211:7;;;;7208:258:50;1008:4211:7;;;;;6083:16:21;:35;7208:258:50;6083:16:21;;1008:4211:7;;;;;6083:35:21;:::i;:::-;1008:4211:7;;;;;14813:10:46;1008:4211:7;;;;6128:16:21;:35;14813:10:46;6128:16:21;;1008:4211:7;;;;;6128:35:21;:::i;:::-;1008:4211:7;;;;;;6173:17:21;;1008:4211:7;;;;;6173:37:21;:::i;:::-;1008:4211:7;;;14856:94:46;;;;;;;15943:168:21;21635:36;16048:9;;;1008:4211:7;-1:-1:-1;;;;;1008:4211:7;21594:24:21;1008:4211:7;;;;;21594:24:21;;:::i;:::-;21635:36;:::i;:::-;1008:4211:7;;16971:15:21;;;1008:4211:7;;;;;;;;-1:-1:-1;;1008:4211:7;16971:47:21;;1008:4211:7;-1:-1:-1;1008:4211:7;;;16990:11:21;16971:47;1008:4211:7;;;;-1:-1:-1;1008:4211:7;;;17040:11:21;:50;-1:-1:-1;;;1008:4211:7;;17040:50:21;1008:4211:7;;;;;;;;17101:151:21;;15943:168;17101:151;17162:79;;;1098:38:37;17162:79:21;1008:4211:7;17143:16:21;;;1008:4211:7;17101:151:21;;15943:168;;17162:79;923:5:37;17162:79:21;;17040:50;17081:8;;;:::i;:::-;1008:4211:7;;17040:50:21;;16971:47;1008:4211:7;;;17006:11:21;16971:47;;1008:4211:7;;;-1:-1:-1;;;;;;1008:4211:7;;;;;;;:::o;20564:238:21:-;1008:4211:7;;20768:27:21;;:16;;1008:4211:7;20700:50:21;;1008:4211:7;;;20700:50:21;;20768:16;1008:4211:7;;;20768:27:21;:::i;:::-;20564:238;:::o;20700:50::-;20735:15;;1008:4211:7;;;20700:50:21;;;22209:552;;1008:4211:7;;599:1:28;22329:30:21;;599:1:28;;1008:4211:7;;-1:-1:-1;;;;;1008:4211:7;;;22363:21:21;:::o;22325:430::-;2450:1;22405:30;;2450:1;;1008:4211:7;;-1:-1:-1;;;;;22446:15:21;1008:4211:7;;;;22446:15:21;:::i;22401:354::-;2489:1;22482:26;;2489:1;;1008:4211:7;-1:-1:-1;;;;;1008:4211:7;;;;;;;2529:1:21;;;;;1008:4211:7;2529:1:21;;;;-1:-1:-1;2529:1:21;;;;;;;;;;;;;;;22581:5;2529:1;;1008:4211:7;;22524:63:21;:::o;22478:277::-;2529:1;22608:27;2529:1;;-1:-1:-1;;;;;22658:24:21;1008:4211:7;;;;22658:24:21;;:::i;22604:151::-;-1:-1:-1;;;;;22720:24:21;1008:4211:7;;;;22720:24:21;;:::i;5488:164::-;5621:15;5488:164;5589:22;5621:24;5488:164;1008:4211:7;;;;5589:22:21;:::i;:::-;1008:4211:7;;;;5621:15:21;1008:4211:7;;;;;5621:24:21;:::i;:::-;1008:4211:7;;;;5488:164:21:o;1008:4211:7:-;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;;;;;:::o;14318:601:21:-;;14466:447;;;-1:-1:-1;;;;;1008:4211:7;-1:-1:-1;;1008:4211:7;;14454:1:21;14591:30;;14454:1;;;14591:83;;;-1:-1:-1;14584:90:21;:::o;14591:83::-;-1:-1:-1;;1008:4211:7;;;;;;14591:83:21;14584:90;:::o;1008:4211:7:-;-1:-1:-1;;;1008:4211:7;;;14454:1:21;1008:4211:7;;;;14466:447:21;-1:-1:-1;;;;;1008:4211:7;-1:-1:-1;;1008:4211:7;;;14783:34:21;;1008:4211:7;;;14783:119:21;;14776:126;:::o;14783:119::-;1008:4211:7;;;;;;;14783:119:21;14776:126;:::o;17428:391::-;21635:36;17428:391;;;21594:24;17428:391;21594:24;:::i;21635:36::-;1008:4211:7;;;17716:14:21;17729:1;17716:14;;17753:59;17729:1;-1:-1:-1;17753:59:21;17729:1;;;-1:-1:-1;;;;;1008:4211:7;17428:391:21;:::o;17753:59::-;17800:11;;;:::i;:::-;-1:-1:-1;;;;;1008:4211:7;17428:391:21;:::o;1042:171:35:-;-1:-1:-1;;;;;1008:4211:7;;;1042:171:35;-1:-1:-1;;;;;1008:4211:7;1174:21:35;;599:1:28;;1042:171:35:o;1008:4211:7:-;;;;;;;;;;;;;;;;;;;:::o;16498:2565:46:-;;;;;;16889:15;;;1008:4211:7;16885:380:46;;16498:2565;17384:10;;;;;;17415:12;;;1008:4211:7;17493:4:46;1008:4211:7;;17477:14:46;;;;;;1008:4211:7;;;;;;;;;;;;;17493:4:46;;:::i;:::-;17513:11;;;1008:4211:7;;;17509:1212:46;;16498:2565;18735:15;;;1008:4211:7;-1:-1:-1;;;;;1008:4211:7;;;;;18735:20:46;;;18731:44;;1008:4211:7;;;;;;;;;;;;;;18791:265:46;-1:-1:-1;;18791:265:46;;;;1008:4211:7;;;-1:-1:-1;1008:4211:7;;5116:393:50;1008:4211:7;;;;;;;;5116:393:50;1008:4211:7;;;;;;;;;;;18912:10:46;;:16;1008:4211:7;;;;;;;10065:1:52;;1008:4211:7;5254:12:50;;;;;1008:4211:7;;5279:21:50;;;;:::i;:::-;5316:12;;:26;;;;;1008:4211:7;;5358:21:50;;;;1008:4211:7;;;-1:-1:-1;;;;;5437:24:50;5395:26;16889:15:46;5395:26:50;;1008:4211:7;;5437:24:50;;1008:4211:7;;;;5116:393:50;;;;;;;;;;;;;;;;:::i;:::-;5051:459;;;;;;:::i;:::-;599:1:28;;;;5653:54:50;1008:4211:7;;;;;;5653:54:50;;;;;;:::i;:::-;5578:12;;;;;;;1008:4211:7;;5615:21:50;;;1008:4211:7;;5578:26:50;;1008:4211:7;18784:272:46;16498:2565;:::o;18791:265::-;1008:4211:7;;;;;;;6179:365:50;1008:4211:7;;;;6179:365:50;1008:4211:7;;;;;;;;;;19039:10:46;;:16;1008:4211:7;;;;;;;10065:1:52;;1008:4211:7;6317:12:50;;;;1008:4211:7;;6342:21:50;;;;:::i;:::-;6379:12;;:26;;;;;1008:4211:7;;6407:21:50;;;;1008:4211:7;;;-1:-1:-1;;;;;6472:24:50;6444:26;16889:15:46;6444:26:50;;1008:4211:7;;6472:24:50;;1008:4211:7;;;;6179:365:50;;;;;;;;;;;;;;;;:::i;:::-;6114:431;;;;;;;:::i;:::-;599:1:28;;;;1008:4211:7;6696:54:50;1008:4211:7;;;;;;6696:54:50;;;;;;:::i;599:1:28:-;;;18731:44:46;18759:13;;;;;;;;;;;;-1:-1:-1;18759:13:46;-1:-1:-1;18759:13:46;:::o;17509:1212::-;17555:275;:13;;;;1008:4211:7;;;;;;;;-1:-1:-1;;;;;17661:15:46;;;1008:4211:7;;17729:10:46;1008:4211:7;16889:15:46;17729:10;;:16;:26;634:6:37;1008:4211:7;17808:21:46;;;;:::i;:::-;17555:275;;:::i;:::-;18560:151;17509:1212;18560:151;-1:-1:-1;1008:4211:7;18618:10:46;;;:16;1008:4211:7;;;;;;;;1831:54:48;;;;1008:4211:7;;;;16889:15:46;1008:4211:7;;;;;;;;;;;;;;;;;;;;1831:54:48;;;;;;:::i;:::-;1008:4211:7;1821:65:48;;-1:-1:-1;1008:4211:7;;;2244:12:48;1008:4211:7;;;;;;;-1:-1:-1;;;;1008:4211:7;-1:-1:-1;;;1008:4211:7;;;17509:1212:46;;16885:380;16938:21;;;:::i;:::-;1008:4211:7;;;16989:25:46;1008:4211:7;;;;16989:25:46;;:::i;:::-;1008:4211:7;;;;17045:26:46;17057:14;;;1008:4211:7;;;;;17045:26:46;;:::i;:::-;1008:4211:7;;;;;;;;;474:7:37;;;17094:34:46;;;17093:97;;;;16885:380;17093:154;;;16885:380;634:6:37;;;;;16885:380:46;;;634:6:37;;1008:4211:7;;;3621:1:32;;;;634:6:37;;17057:14:46;634:6:37;;;;;;;1008:4211:7;-1:-1:-1;;;1008:4211:7;;;634:6:37;;17093:154:46;17215:31;;;-1:-1:-1;17093:154:46;;;;:97;634:6:37;17154:35:46;;;;-1:-1:-1;17093:97:46;;10597:715:21;;;;;;;;1008:4211:7;10899:14:21;;;1008:4211:7;;10899:30:21;;;10895:47;;18310:28;11092:15;;;1008:4211:7;10987:121:21;-1:-1:-1;;;;;1008:4211:7;;;;;;;10987:121:21;;;:::i;:::-;1008:4211:7;;;;;;;;;18359:29:21;1008:4211:7;;13864:60:21;;;18310:28;:::i;:::-;18359:29;;:::i;:::-;1008:4211:7;;;;20066:22:21;;1008:4211:7;;599:1:28;;;;;13957:35:21;20062:259;13957:98;20062:259;13957:35;:::i;:::-;:98;:::i;:::-;14073:77;;;;-1:-1:-1;;;;;11278:11:21;1008:4211:7;;14073:77:21;;1008:4211:7;;11278:11:21;;1008:4211:7;;;;10597:715:21:o;14073:77::-;-1:-1:-1;;;;;5176:40:31;;;;5175:80;1008:4211:7;;5404:1:31;1008:4211:7;11278:11:21;1008:4211:7;3440:2:31;1008:4211:7;;;3440:2:31;1008:4211:7;;14073:77:21;;;1008:4211:7;;;-1:-1:-1;;;1008:4211:7;;;;;;;;;;;;-1:-1:-1;;;1008:4211:7;;;;;;;20062:259:21;1008:4211:7;;-1:-1:-1;1008:4211:7;;;;20141:22:21;;1008:4211:7;;599:1:28;;;;13957:35:21;20137:184;13957:98;20137:184;13957:35;:::i;20137:184::-;20211:110;;;13957:98;20211:110;;;;;;;20237:21;;13957:35;20237:21;20211:110;13957:35;:::i;20211:110::-;20289:21;;;;13957:35;20289:21;20211:110;13957:35;:::i;10895:47::-;10933:7;;;;;;;:::o;1319:287:24:-;1408:18;;;1008:4211:7;;;;1403:158:24;;1319:287;1577:22;;;;1008:4211:7;;;1319:287:24;:::o;1403:158::-;1467:12;;1008:4211:7;;-1:-1:-1;;;;;1008:4211:7;;;;4933:30:37;923:5;4933:30;;;:63;;;1403:158:24;599:1:28;;;-1:-1:-1;;;;;;;1008:4211:7;5048:2:37;1008:4211:7;;5061:17:37;5114:148;;;;;;;;;5271:132;-1:-1:-1;;;;;5271:132:37;;;;;;;5412:124;;;;;;;;;5545:120;;;;;;;;;1008:4211:7;5674:118:37;;;;;;;;;5801:117;;;;;;;;;5927;;5674:118;5927:117;;;;;;;6053:82;5271:132;;5412:124;5545:120;5674:118;5801:117;5927;6053:82;6149:10;6156:3;6149:10;;;6145:79;6156:3;;;-1:-1:-1;;;1008:4211:7;;;6145:79:37;6286:160;;;;;;;;;;;;;;;6455;;;;;;;;;6624;;;;;;;;;6793;;;;;;;;;6962;;;;;;;;;;7131;;;;;;;;;;7300;;;;;;;;;;7469;;;;;;;;;;7638;;;;;;;;;;7807;;;;;;;;;;7976;;;;;;;;;8145;;;;;;;;;;;8314;;;;;;;;;;8483:133;;;;;;8314:160;;;;;8145;;;;;7976;;;;;7807;;;;;7638;;;;;7469;;;;;7300;;;;;7131;;;;;6962;;;;;6793;;;;;6624;;;;;6455;;;;;6286;;;;;1008:4211:7;;;;5048:2:37;1008:4211:7;6286:160:37;6455;6624;6793;6962;7131;7300;7469;7638;7807;7976;8145;8314;8483:133;8657:24;1008:4211:7;;;;;6156:3:37;1008:4211:7;5801:117:37;1008:4211:7;;8843:39:37;1008:4211:7;6156:3:37;1008:4211:7;5801:117:37;1008:4211:7;8909:91:37;-1:-1:-1;8909:17:37;;;:91;1008:4211:7;;5927:117:37;1008:4211:7;1577:22:24;1008:4211:7;;;8909:91:37;;;;;;5801:117;1008:4211:7;1442:22:24;;;1008:4211:7;;1403:158:24;;8909:91:37;8939:26;;;:::i;:::-;1008:4211:7;8939:42:37;;-1:-1:-1;8939:61:37;;;8909:91;;8939:61;;;8909:91;;6145:79;1008:4211:7;;;6214:3:37;1008:4211:7;;6145:79:37;;4933:63;4967:29;1098:38;4967:29;;4933:63;;14523:664:25;;;;14704:7;;14809:27;14765:4;14876:27;14809;14734:170;14809:27;;;:::i;:::-;14876;;:::i;:::-;14734:170;;:::i;14700:481::-;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;14980:15:25;1008:4211:7;;;;;14980:67:25;1008:4211:7;;;;;-1:-1:-1;;;;;;;16030:53:25;1008:4211:7;1004:2:29;1008:4211:7;;;16030:53:25;:::i;14980:67::-;1008:4211:7;;;14980:67:25;;1370:301:29;-1:-1:-1;;;;;1008:4211:7;;;257:35:29;;;;-1:-1:-1;;;257:35:29;1600:24;;;599:1:28;;1008:4211:7;1370:301:29;:::o;2016:490:33:-;;;;;;1008:4211:7;;;;;3404:20:33;;;;:::i;:::-;1008:4211:7;;3404:25:33;:66;;;;2016:490;2223:38;;2219:259;;2487:12;;;;;;-1:-1:-1;2016:490:33;:::o;2219:259::-;1008:4211:7;;;;;;4279:17:33;599:1:28;;;4314:44:33;;;;;;:::i;:::-;:140;;;4373:49;;;:::i;:::-;-1:-1:-1;;;;;1008:4211:7;;;;;2417:19:33;1008:4211:7;;2463:4:33;2456:11;:::o;1008:4211:7:-;;;-1:-1:-1;;;1008:4211:7;;;;;;;;;;;;-1:-1:-1;;;1008:4211:7;;;;;;;4314:140:33;;;;;-1:-1:-1;;;;;4314:140:33;;3404:66;3445:20;;;;;:::i;:::-;1008:4211:7;;3445:25:33;3404:66;;;1008:4211:7;;;;;;;;;;;;;:::o;4591:579:33:-;;4791:38;;;;;:::i;:::-;1008:4211:7;;;;4843:12:33;1008:4211:7;;5604:34:33;;;;;:::i;:::-;1008:4211:7;;;;;;;;;;;;4871:41:33;:::o;4839:325::-;5120:33;4960:28;;5068:33;4960:28;5019;4960;;5068:85;4960:28;;;;:::i;:::-;5019;;:::i;:::-;5068:33;;;:::i;:::-;5120;;:::i;:::-;5068:85;;:::i;5795:316::-;;1008:4211:7;;5954:13:33;;5950:32;;8965:70;6012:19;8903:45;8904:22;-1:-1:-1;;;;;6012:19:33;;;1008:4211:7;;;;;;8848:25:33;;;;:::i;:::-;1008:4211:7;;;8904:22:33;;:::i;:::-;8903:45;:::i;5950:32::-;5971:8;;;5966:1;5971:8;:::o;1008:4211:7:-;;;-1:-1:-1;;1008:4211:7;;;;;;;:::o;6230:461:33:-;;;1008:4211:7;;;;;;6355:17:33;;;599:1:28;;;6397::33;-1:-1:-1;;;;6387:26:33;;6230:461;6383:302;;;6457:8;;;6467;6457;6436:40;6457:8;;:::i;:::-;6467;;:::i;:::-;6436:40;;:::i;6383:302::-;6497:27;;;;;;6383:302;-1:-1:-1;6493:192:33;;;6540:8;;;6397:1;6540:8;:::o;6493:192::-;1008:4211:7;6586:88:33;1008:4211:7;;;;;;;;;6586:88:33;:::i;6497:27::-;6397:1;6512:12;;;;6497:27;;;6387:26;6402:11;6397:1;6402:11;;6387:26;;1008:4211:7;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;6824:356:33:-;1008:4211:7;6945:18:33;;;;;:::i;:::-;1008:4211:7;6945:23:33;:50;;;;6824:356;6941:233;;;7011:8;;;;6967:1;7011:8;:::o;6941:233::-;7041:18;7065;7041;;;;:::i;:::-;7065;;;:::i;:::-;1008:4211:7;;;7040:44:33;;7036:138;1008:4211:7;;;7100:8:33;;6967:1;7100:8;:::o;7036:138::-;7146:17;;;:::i;6945:50::-;6972:18;;;;;;:::i;:::-;1008:4211:7;6972:23:33;6945:50;;1008:4211:7;;;;;;;;;;;;;;;;;;;;:::o;7318:404:33:-;;1008:4211:7;;;7433:1:33;;7423:11;;;;7419:58;;7490:12;7486:31;;1008:4211:7;;;;;;;;-1:-1:-1;;1008:4211:7;;;;;;;7640:24:33;;;7651:1;7640:24;;:::i;:::-;1008:4211:7;;;;;;;7639:41:33;7697:18;7639:41;;;;;:::i;:::-;7697:18;:::i;1008:4211:7:-;-1:-1:-1;;;1008:4211:7;;;;;;;;7486:31:33;7506:8;;;;:::o;7419:58::-;7465:8;7445:29;7465:8;;;;;;:::i;:::-;7445:29;7861:354;7976:1;1008:4211:7;;;7966:11:33;7962:58;;8142:31;1008:4211:7;8190:18:33;1008:4211:7;;;;;8143:18:33;;;;:::i;:::-;8142:31;:::i;:::-;8190:18;;:::i;7962:58::-;8008:8;7988:29;8008:8;;:::i;:::-;7988:29;;:::i;9208:424::-;;;;;-1:-1:-1;;;;;9379:19:33;;;1008:4211:7;;9379:24:33;9375:47;;9513:29;9570:14;9457:29;;;1008:4211:7;9457:29:33;;:::i;:::-;9513;;:::i;:::-;9570:14;;634:6:37;1008:4211:7;;;;;;;9559:25:33;;:66;;;;9208:424;9552:73;;;9208:424;:::o;9559:66::-;1008:4211:7;9600:25:33;;;-1:-1:-1;9559:66:33;;;;;9375:47;9407:12;;;;-1:-1:-1;9407:12:33;:::o;1008:4211:7:-;;;;;;;;;-1:-1:-1;;1008:4211:7;;;;;;;;:::o;9638:173:33:-;;1008:4211:7;;;;;;9731:13:33;:73;:13;;;9766;;;;:::i;:::-;1008:4211:7;;9638:173:33;:::o;9731:73::-;9790:13;;;:::i;1462:2721:37:-;1008:4211:7;;-1:-1:-1;;1695:16:37;;;;:36;;1462:2721;599:1:28;;;1767::37;1760:8;;1767:1;;;1008:4211:7;1767:1:37;1008:4211:7;1760:57:37;;1854:3;1844:13;;:18;1854:3;;-1:-1:-1;;;;;1865:34:37;1844:93;1008:4211:7;1951:13:37;1008:4211:7;1951:13:37;;1947:83;;1844:93;2054:3;2044:13;;2040:83;;1844:93;2147:3;2137:13;;2133:83;;1844:93;2240:4;2230:14;;2226:84;;1844:93;2334:4;2324:14;;2320:84;;1844:93;2428:4;2418:14;;2414:84;;1844:93;2522:4;2512:14;;;;2508:84;;1844:93;2616:5;2606:15;;2602:85;;1844:93;2711:5;2701:15;;2697:85;;1844:93;2806:5;2796:15;;2792:85;;1844:93;2901:5;2891:15;;2887:85;;1844:93;2996:6;2986:16;;2982:86;;1844:93;3092:6;3082:16;;3078:86;;1844:93;3188:6;3178:16;;3174:86;;1844:93;3284:6;3274:16;;3270:86;;1844:93;3380:7;3370:17;;3366:86;;1844:93;3476:7;3466:17;;3462:85;;1844:93;3571:7;3561:17;;3557:83;;1844:93;3664:7;3654:17;3650:78;;1844:93;3743:8;1767:1;-1:-1:-1;3739:47:37;;1844:93;-1:-1:-1;;;;;1008:4211:7;-1:-1:-1;;;;;1008:4211:7;;;;;1767:1:37;4134:30;1008:4211:7;;2428:4:37;1008:4211:7;;;1462:2721:37;:::o;4134:30::-;1008:4211:7;1854:3:37;4134:30;;3739:47;257:35:29;;;;-1:-1:-1;;257:35:29;3739:47:37;;3650:78;3695:25;1767:1;1008:4211:7;;;;;3650:78:37;;;;3557:83;3602:30;1008:4211:7;;;;;;3557:83:37;;3462:85;1008:4211:7;3507:32:37;1008:4211:7;;;3462:85:37;;;3366:86;1008:4211:7;3411:33:37;1008:4211:7;;;3366:86:37;;;3270;1008:4211:7;3314:34:37;1008:4211:7;;;3270:86:37;;;3174;1008:4211:7;3218:34:37;1008:4211:7;;;3174:86:37;;;3078;1008:4211:7;3122:34:37;1008:4211:7;;;3078:86:37;;;2982;1008:4211:7;3026:34:37;1008:4211:7;;;2982:86:37;;;2887:85;1008:4211:7;2930:34:37;1008:4211:7;;;2887:85:37;;;2792;1008:4211:7;2835:34:37;1008:4211:7;;;2792:85:37;;;2697;1008:4211:7;2740:34:37;1008:4211:7;;;2697:85:37;;;2602;1008:4211:7;2645:34:37;1008:4211:7;;;2602:85:37;;;2508:84;1008:4211:7;2550:34:37;1008:4211:7;;;2508:84:37;;;2414;1008:4211:7;2456:34:37;1008:4211:7;2495:3:37;1008:4211:7;2414:84:37;;;2320;1008:4211:7;2362:34:37;1008:4211:7;2401:3:37;1008:4211:7;2320:84:37;;;2226;1008:4211:7;2268:34:37;1008:4211:7;2307:3:37;1008:4211:7;2226:84:37;;;2133:83;1008:4211:7;2174:34:37;1008:4211:7;2213:3:37;1008:4211:7;2133:83:37;;;2040;1008:4211:7;2081:34:37;1008:4211:7;2120:3:37;1008:4211:7;2040:83:37;;;1947;1008:4211:7;1988:34:37;1008:4211:7;2027:3:37;1008:4211:7;1947:83:37;;;1844:93;-1:-1:-1;;;;;;;;1844:93:37;;1760:57;;;;1695:36;1715:16;634:6;1715:16;;;1695:36;;1008:4211:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;;;;;;;;;:::o;10065:1:52:-;-1:-1:-1;;;;;1008:4211:7;;;;;;;;10065:1:52;;;1008:4211:7;;;;10065:1:52;;;1008:4211:7;-1:-1:-1;;;;;1008:4211:7;;;10065:1:52;;;;1008:4211:7;;;;10065:1:52;;;;1008:4211:7;;10065:1:52;;;1008:4211:7;10065:1:52;;;1008:4211:7;;;;10065:1:52;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;10065:1:52;;;;1008:4211:7;;;;599:1:28;1008:4211:7;;-1:-1:-1;;1008:4211:7;10065:1:52;;1008:4211:7;;:::i;:::-;10065:1:52;;;-1:-1:-1;10065:1:52;;;;:::o;:::-;1008:4211:7;10065:1:52;:::o;:::-;;1008:4211:7;;;;;;;;10065:1:52:o;:::-;;1008:4211:7;-1:-1:-1;;;;;1008:4211:7;;;;;;10065:1:52:o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;1008:4211:7:-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;10065:1:52;1008:4211:7;;;;10065:1:52;1008:4211:7;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;10065:1:52;;;:::i;:::-;1008:4211:7;10065:1:52;1008:4211:7;;;10065:1:52;:::i;:::-;1008:4211:7;10065:1:52;1008:4211:7;10065:1:52;1008:4211:7;;;10065:1:52;:::i;1008:4211:7:-;;;-1:-1:-1;;;;;1008:4211:7;;;;;;:::o;6185:387:51:-;;;;;;1008:4211:7;6397:13:51;;;;1008:4211:7;;;;;;21112:16:51;1008:4211:7;;6431:35:51;-1:-1:-1;;;;;6450:15:51;;;1008:4211:7;;6431:35:51;;:::i;:::-;6427:139;;6185:387;;;;;:::o;6427:139::-;6493:62;1008:4211:7;;;6539:15:51;1008:4211:7;;;;;;;;6539:15:51;;1008:4211:7;;;6493:62:51;;:::i;:::-;6427:139;;;;;;;1008:4211:7;;;-1:-1:-1;;;1008:4211:7;;6397:13:51;1008:4211:7;;;;;;;;;-1:-1:-1;;;1008:4211:7;;;;;;;11419:346:51;;;-1:-1:-1;;;;;1008:4211:7;11419:346:51;1008:4211:7;;;;;11626:11:51;;;;;;:::o;11585:174::-;1008:4211:7;;;;;;;;;;12152:8:51;;;;;;14883:226;1008:4211:7;;;;;;;-1:-1:-1;;;;;1008:4211:7;;;;15411:232:51;;;;;15462:32;20504:21;;;;;:::i;:::-;1008:4211:7;;20561:9:51;1008:4211:7;;;;;;;;;;;;;;20648:15:51;;20644:175;1008:4211:7;;;;;;20679:31:51;1008:4211:7;;;;;;20679:31:51;:::i;:::-;1008:4211:7;;-1:-1:-1;;;;;1008:4211:7;;;;;20644:175:51;1008:4211:7;;15933:13:51;1008:4211:7;;16000:9:51;;;:::i;20644:175::-;-1:-1:-1;;;;;;1008:4211:7;;;;;;-1:-1:-1;20793:15:51;;;:::i;:::-;20644:175;;;15411:232;15622:9;;;;;:::i;14883:226::-;12368:8;;;;;;;;;14997:112;;14883:226;;;;;;;11740:8;:::o;14997:112::-;15060:5;;;:::i;:::-;16393:204;;;;20012:21;;;;;;:::i;:::-;1008:4211:7;;20043:9:51;1008:4211:7;;;;;;;;;20043:42:51;-1:-1:-1;;;;;1008:4211:7;;;;;;20043:42:51;:::i;:::-;1008:4211:7;;-1:-1:-1;;;;;1008:4211:7;;;;;16393:204:51;14997:112;;;;;;;;16393:204;1008:4211:7;;;;;;-1:-1:-1;;;;;850:72:39;1008:4211:7;;;773:66:39;;;;796:31;;;;773:66;;1008:4211:7;773:66:39;;;1008:4211:7;;;;;;;773:66:39;;;;;:::i;:::-;762:78;;;;;;:::i;:::-;858:57;;;850:72;;:::i;:::-;16393:204:51;;858:57:39;1008:4211:7;;870:16:39;;;-1:-1:-1;870:44:39;;;;858:57;;;;;;870:44;890:24;;;773:66;890:24;;;;;;;;:::i;:::-;870:44;;;;17314:138:40;1008:4211:7;;;-1:-1:-1;;;;;1008:4211:7;;;17421:23:40;;;1008:4211:7;;;;;;;;;;;17421:23:40;;;1008:4211:7;17421:23:40;:::i;:::-;1008:4211:7;17411:34:40;;17314:138;:::o;1008:4211:7:-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1008:4211:7;;;;;;;;;;;;-1:-1:-1;;;1008:4211:7;;;;;;;17378:291:51;;-1:-1:-1;;;;;1008:4211:7;;;;;;;18744:16:51;1008:4211:7;;18795:15:51;;;:::i;:::-;1008:4211:7;18993:11:51;18989:85;;17378:291;;:::o;18989:85::-;1008:4211:7;1893:25:39;;;;1928:22;1893:25;;;;;:::i;1928:22::-;17378:291:51:o;1008:4211:7:-;;;-1:-1:-1;;;1008:4211:7;;;;;;;;;;;;-1:-1:-1;;;1008:4211:7;;;;;;;17378:291:51;;-1:-1:-1;;;;;1008:4211:7;;;;;-1:-1:-1;;;;;1008:4211:7;;;18744:16:51;;1008:4211:7;;;;;;;;;;;;18993:11:51;;18989:85;;17512:151;;;17378:291::o;18989:85::-;1893:25:39;;1928:22;1893:25;;;;;;;:::i;1008:4211:7:-;-1:-1:-1;;;1008:4211:7;;;;;;;;17512:151:51;1008:4211:7;;-1:-1:-1;;;1512:76:39;;;;;;-1:-1:-1;;;;;1008:4211:7;;;1512:76:39;;;1008:4211:7;19735:4:51;1008:4211:7;;;;-1:-1:-1;;;;;1008:4211:7;;;;;;;1599:72:39;;1008:4211:7;;;;;1512:76:39;1008:4211:7;;1512:76:39;1008:4211:7;;;;1512:76:39;1008:4211:7;21302:228:51;12159:1;1008:4211:7;;;12152:8:51;21404:120;12159:1;;;21437:11;;21444:4;21437:11;:::o;21404:120::-;21494:5;;;:::i;:::-;-1:-1:-1;;;;;1008:4211:7;;;;;21486:27:51;;21479:34::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptCrocProxyRole(address,uint16)": "ac54c0fc",
    "userCmd(bytes)": "f96dc788"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"pool\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBid\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"pivotTime\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"feeMileage\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"commitEntropy\",\"type\":\"uint160\"}],\"name\":\"CrocKnockoutCross\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"slot\",\"type\":\"uint16\"}],\"name\":\"acceptCrocProxyRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"userCmd\",\"outputs\":[{\"internalType\":\"int128[]\",\"name\":\"\",\"type\":\"int128[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/callpaths/LongPath.sol\":\"LongPath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@rari-capital/=node_modules/@rari-capital/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\"],\"viaIR\":true},\"sources\":{\"contracts/callpaths/LongPath.sol\":{\"keccak256\":\"0x9d6ab489e0644d40b820e53e50d1010475fe67f0d89770f423b5d56235c16c99\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://378a380d18f53c14bc82aebf3998da846f167ede8c9ae27ed8c599d09125ace3\",\"dweb:/ipfs/Qmc7yKhr1GEgoKckj1LLVQACAY9GujAK1gXRD65SKMhN5e\"]},\"contracts/interfaces/ICrocCondOracle.sol\":{\"keccak256\":\"0x66c623f5dce7637e25d3f7033e8c1cfa21f9c0c3b425319d3d38fbe7ce8353a0\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://d32284e8381bdb229a13f57a06c69a2fd7d65880e24a5f74c9af6d9b9167daa0\",\"dweb:/ipfs/QmXUjomA3Fu4sxLF69Fg7baGircEL2eFscZLkTRPg7tJK6\"]},\"contracts/interfaces/ICrocLpConduit.sol\":{\"keccak256\":\"0x2e7ec87b1050365c16ba74f7d9beecea883d4791ec1def08e8ae45dd3510e27a\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://8f283048c17c0a0b2c525bcaf313b0fa31a3cd78a69b782f3974088352992524\",\"dweb:/ipfs/QmTuewpvVVBotRkDNUtZcZsbDDEfMLSUiCGRjiThWFevx7\"]},\"contracts/interfaces/ICrocPermitOracle.sol\":{\"keccak256\":\"0x0104134443408b373471a7f3cbed78f90092bed417f5689ae7dbb7c2fc75e91a\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://c835fbbe93904f1472c9cbaeb389f46eb544f0919f0b7abbdaea0a081c591fe8\",\"dweb:/ipfs/QmaS93RuVgzdGNJLb5GPd8QuSVuU3dy4pHuxnKorMGUoUL\"]},\"contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0x1d2b78cc48b529fea246fbfabaff22f70fea7ca2c8f32401d83c175a41ba2e5e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0becce0dde36fe28f219b00a032f9587e9861c0e35d81461a2cdc891773530cd\",\"dweb:/ipfs/Qmey4Xdv4fxJFw51dc7QQZCvdM533YZSRYyTuX3QfTZ6bP\"]},\"contracts/libraries/BitMath.sol\":{\"keccak256\":\"0x04a037cc35c1bc65a40909ff33b049f848250b9358f4d1452e37ea08dbe7d58c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://75d9a5c6a7c3f28c3839b6a59e576dc137561e025a087e45b264cff88260c504\",\"dweb:/ipfs/QmRR4xRnr6wTyRBtHeZChxh5mgrsgC3TVYM3mdHqzQFner\"]},\"contracts/libraries/Bitmaps.sol\":{\"keccak256\":\"0x44facc62f716438774561c4c4d3cd6372335c003b1d37b15ae3f140783e824f6\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://209ce75eafca0392b508409a7a1b1068bce6f053cda919e76ff4694a9f00a2a8\",\"dweb:/ipfs/QmenTVCtZxU2EiSEshudacbPNZYdQdrgJdau3TeNcN4ygA\"]},\"contracts/libraries/Chaining.sol\":{\"keccak256\":\"0xc2398494d5d1b038c9d4c50e1ea96e857aaafd7fa9be5e917dd4838768cdf236\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://4e858138bcd25b940661707e8ff6ae4627d9fc5d9ec7feb22495f6b3b3466f2d\",\"dweb:/ipfs/QmcbGbPS3ZEwypuoYtDqL6fY47qYrXiCq6VSmTYZULZSHq\"]},\"contracts/libraries/CompoundMath.sol\":{\"keccak256\":\"0x0edd6fc9fd81583a32489bfc7ebf6b70eb1d23cd1e6eb79e88ce112b5f444f0c\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://e3e597c6120b2793ae4ec3da35d925805fd7c6a9ae4c73e15c1df19de6b0e6bc\",\"dweb:/ipfs/QmPE1ZLhZXTeHYMU3xXVh8Bud27fDEHe4s8rF9Sraukgnf\"]},\"contracts/libraries/CurveAssimilate.sol\":{\"keccak256\":\"0xe124134bef09cd6f05ae9e7d4173f8ee1f22228d6f3e7ab9f0fdcae615ae7d65\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://aeade6853b8d070b38d01932566dd47f7d965401e0d883295e4e8df6335dcb45\",\"dweb:/ipfs/Qmc9SoQx4k9gCSuU2RW6zVHbHDDQZ7M6UyQeMdqkuUBToG\"]},\"contracts/libraries/CurveCache.sol\":{\"keccak256\":\"0x3d71c0f289be7de41f5369d64e4404b3335310a2105073c4d99f761d0c444488\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://0b794e4058ae9d3db8f44ffa7b96c4fc3066c7a1fa65f1441ef31aca2dce86b7\",\"dweb:/ipfs/QmeU1XqwTSLm2gk6nrcZHuDpy4yg3pHim7GzghXwgnTYn4\"]},\"contracts/libraries/CurveMath.sol\":{\"keccak256\":\"0x2b1acd7145a21185f9aa0473d4e4b341d4b34d271bc9773833b53b3ecb800869\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://4f2ffeb9365fd05fe45491e0e09c844de656c5147647f441fa031097c0f7a7ec\",\"dweb:/ipfs/QmZ5yp9eJ2eNmnHnbjg8A5uTwtgGc156dxomVYPpX3vBkg\"]},\"contracts/libraries/CurveRoll.sol\":{\"keccak256\":\"0x7ca76d8682fd81b07b940e2375eb8a2b13d94e65aa4f46a2f5cc8bd2d80cd997\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://5c2d9bf8602bab8923286a47773bf87d71bc808367c8a78454511ce732e2805d\",\"dweb:/ipfs/QmZToE9CpndJVrW4v8fDk2kcqbVnnBkspzUwwowqbqwBJA\"]},\"contracts/libraries/Directives.sol\":{\"keccak256\":\"0x349193c45904235db59b908070f910310ff88e33ca17de4aaf971a40ddbfb0e0\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://ff2062cc76d966adae1811773b929a90878965a9673d18bc41d86ba6f354a585\",\"dweb:/ipfs/QmYJmJ8BxYptvnt8SyTNfK6kvfhV1wYeKzqo9of6AEMp17\"]},\"contracts/libraries/Encoding.sol\":{\"keccak256\":\"0xb9f2d1b4a54ad699b0ca085554dbf6c4a83bfd55dcab9949e6f2d61c37ab5d28\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://2cf3852ae2f68d6b4a22a4cbda7cac1976f638427184079550a421906d730e37\",\"dweb:/ipfs/QmWK2ErFyHCyF4oHbkFDnM5mjRceKDy5KzLCXpdnpVdXra\"]},\"contracts/libraries/FixedPoint.sol\":{\"keccak256\":\"0x40a19fd78a58ce39cf26a7408e9efd28853fec9e1a6e46c6ba364002d5a82372\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://2dc685d434c72ce733ae590bd39d44912569d7e3a27093083ada767ba7ae94f1\",\"dweb:/ipfs/QmaA7tmPTRBwhwKaahGUvXfu8qLSjAmPiZrMNuiA68yFtY\"]},\"contracts/libraries/KnockoutLiq.sol\":{\"keccak256\":\"0x519fc1c3fae4209150a005d344a30ad4167b08f25102aa61bc5c55f3757993a1\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://b7b66e6d93b3257353f2a3be956cbc37042961f5eb2feb4d0b1ccf48c5710b28\",\"dweb:/ipfs/QmRj1u3svg2Ex78ocS234pjgGe2TFaV8qn4EQ43DUQMpmb\"]},\"contracts/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x4be08c2957bf570a04e24e9f1ad9e8c051d8012012b2b6abb9e59d156380fb0d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4494cb55e9b8ca079c35805b984ca4b5977fdca8302489fb6c73eb86ed932296\",\"dweb:/ipfs/QmZ9QUyuW4TcvyYKjY9ycdNdBbEPf6DxcgEQYay789kVkC\"]},\"contracts/libraries/PoolSpecs.sol\":{\"keccak256\":\"0x13c94aa15a3e26002d5f4b6e6f2a55e32a742e40cfb8cb97b1d1b6333ca293cb\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://a0723aad7e94311ae7a933f46cc97b99f6cd5df6692172ad8c60e5e4d8e08a4b\",\"dweb:/ipfs/QmRM2VDrDyPAYfmaTV2ggSto9ChsLifNMxrHhUzn4ZUvDq\"]},\"contracts/libraries/PriceGrid.sol\":{\"keccak256\":\"0x0013969c29c78171f596a30dfc208260b86933b87f1b558ecc72947f7ca3d8cb\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://a6126488d8aa9ed62d3634e3bd16cab4faebf41ad0d08cd79240db0ed92f6404\",\"dweb:/ipfs/QmQmYd3cmLSqQiUjtUBSJMgmqJivCQatkv63wBDi6RvN36\"]},\"contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0xf898eb103e1a643b06af1bdf2bd548e6f3f5cd20a1fb0c14adce5eabd69f3916\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7d14c65f9b5c726154c73d5e2d0d2b41d4449b7586376a03cf57ccff8c4361e5\",\"dweb:/ipfs/QmPf4bHt9WRgKAqzb7nN8GGSoDVHYfnbdZE8Qxt1cvzZBg\"]},\"contracts/libraries/SwapCurve.sol\":{\"keccak256\":\"0xd9fa65709f31c5d3b50ab17a32b82ee46f544b009f970ac6d42f6e06bef3de82\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://0ce14340fca6da6107deb5c3800d32b89fba81b057f043f36778f5c80dc896d8\",\"dweb:/ipfs/QmPuEoFHzrrKVJjTqmGfzKt4ienEs2CLf4Ptj9UaQUqwh3\"]},\"contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xd276edd31578d04c288d0ccf01b06db27101def6cb746e36985df86a3d764121\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d8bccc39424530cf1c313523e4f369efcda79dc9e2e83a7e4a84d8196d3dd3ea\",\"dweb:/ipfs/QmRvnThuYDQWHdmJxBoz3bbzizcaJt1NyQGNVjwQ25zfHi\"]},\"contracts/libraries/TokenFlow.sol\":{\"keccak256\":\"0x57fc4abcbf4f72f65c74910f54d02d286d1253affff3d72c3f4e4ed913df3408\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://0ae19fb5a87a01e8a51ec99ec3cd6bb1ab66264f935e6b78010757dfa2e0cb1d\",\"dweb:/ipfs/QmQw7KHYyPk6LGYRFyRdZg7pQxyJwMQHNB9L3gtaDWpQpB\"]},\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x678579017489c8e16cee15fc7d895ff2c17a05e8ffafa7f1664b57e110e78c99\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e7cc5585bebf8685fbc67284ef5b0020f6a703f41f43e19c8caa428dc5db0bd6\",\"dweb:/ipfs/QmR4GvtaVbxVNtn4A28sXbhjWs6vVpxBK77aBUbc98j64u\"]},\"contracts/mixins/AgentMask.sol\":{\"keccak256\":\"0x2b387cd7e90facc8f17fcb95f8d068a7b10dfe8463abb9d4bbd7d906ab909ba2\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://683f931b6e5b61c574b5d9da7c32a37a56cc01ea0bd5893567f6f9d30c3a113d\",\"dweb:/ipfs/Qmaoyt6zCbF55NpqwiPHL1uG3fBCH7Yj3CoGiW4a56Gg52\"]},\"contracts/mixins/KnockoutCounter.sol\":{\"keccak256\":\"0x825428479e94a70c5499f0944d7bc39d4e7dcc2b42dc0bf1751c655e10da57c8\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://10d2f88aa47746a6e970c15cc01c93735c6f0737e1c474cf89e580c68cd59459\",\"dweb:/ipfs/Qmd33pdB4KiX4Y9yGAezVne8sZLCC1JipK91YKRrretH9J\"]},\"contracts/mixins/LevelBook.sol\":{\"keccak256\":\"0x61c34a21940486e63378e19b6019c01aeb175b213ccd218ec078cd7147e809d1\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://7372aa4f3bc08147af7d442ec66778a39885ca69575cb90879481a182aa96b9e\",\"dweb:/ipfs/QmRrdudHsw89WnAjqyf8BK6bavirKJbtrnAajeu9htaZVw\"]},\"contracts/mixins/LiquidityCurve.sol\":{\"keccak256\":\"0xc370db5575df2265c7a884c5fcda26d0f4535c6b3e74ff6b53f17d742c293988\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://d611829c9d72779d8f0f2ce6c881f748a5fdb1765cf48aba6962742e773aa80e\",\"dweb:/ipfs/QmV9cy2S29GdZeyg8huvBiLLVs9VAA5xQQ5LPQNBAx1MrV\"]},\"contracts/mixins/LiquidityMining.sol\":{\"keccak256\":\"0x97c28b3310a56512bc07b00682d189c87d6ed7152053bcf915fdf3711eb4348b\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://332e2703b7d5ed8ab82076cd8e0fbeb47098a2c0fc421d9bc24712a3a829e3bf\",\"dweb:/ipfs/QmQZtkPnWEWXUMgRkyKHZHVXv3YAuUfacY5d88R1RUpCxK\"]},\"contracts/mixins/MarketSequencer.sol\":{\"keccak256\":\"0x901d1db4ab568050d2d7242f31ef884eab3e188a93e39bcb6b8b6258959d2945\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://1d74c50e251bfbf7c6b6ba6b4ec94f26c7c9c3c73c463ec3a775da84430a038a\",\"dweb:/ipfs/QmXmPSaQeow9GyhAH6v9vztmU3EQgF4v9kLeMMrf4sM3Hu\"]},\"contracts/mixins/PoolRegistry.sol\":{\"keccak256\":\"0xce5e7321d15fa2f39b67baf693b2b10bd7bc9c4bd6ba7b188466c02d4454b0dc\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://9f7a3ac178e8cf3e2f973ca22411854f1be2238d909d3fde5c5293836d6a59ea\",\"dweb:/ipfs/QmVmzJ7JBGmaLdBQq5R4sNJTKEZjUHCsNkYVN2mBuUPuZp\"]},\"contracts/mixins/PositionRegistrar.sol\":{\"keccak256\":\"0xa5f6ccb107f319b1156a2dcfe8a20d773185833031e5a97c3195681ff96e8de9\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://9af5c39925b017882a60ec1c8e5e07666438a3dd0ab14d4a5d6f42b8efcf35c5\",\"dweb:/ipfs/Qmbdv47orXzJMQhsM1r4r82za3HEYT8rYpP7rBtyWCn2Rj\"]},\"contracts/mixins/ProtocolAccount.sol\":{\"keccak256\":\"0x90770ea4836fb4ccc44ad3036f280b6c1f4721f89fc483fea8726a84f482967e\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://fe5c484ff92f1a3756c0493886a121aae45f264296ae99d88f71204c684965e7\",\"dweb:/ipfs/QmPHrEJFxTL37XaVkxYtvvcdMVeLikAWFK2UVsYaGMX5Bw\"]},\"contracts/mixins/ProxyCaller.sol\":{\"keccak256\":\"0x0da25f1912cf084bd20b2602084f87b57f56852102b995460779dc3c3ae17ede\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://fdb36ed8618d0c7f6765e372c29fea7b25fb37eefc6803d5d8daa5efbf0f0d63\",\"dweb:/ipfs/QmPSdSAcZfpKvanSHnLP5Lb1NXuVRZKUh6SfNGeB4pVeGt\"]},\"contracts/mixins/SettleLayer.sol\":{\"keccak256\":\"0x08ce1632c5858135b32949a819fb69f0f3f7a33adbb8f98108dfb577e7f6e209\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://947c4d6607ddfd03360e63c054644cf408af12684aa241bafa57520d33030595\",\"dweb:/ipfs/QmYEkqCh2sV414eH71sNcrkXpionN6qRGMuZEHvi5rD4jV\"]},\"contracts/mixins/StorageLayout.sol\":{\"keccak256\":\"0x062e0303689aeb94de590021902ad1b0f9d0c538ce4fe05fd75fca64aca4f289\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://9c25b4be759c5471bacb822218ef2e6d8aebc2f96c95524a83deea1b41ade837\",\"dweb:/ipfs/Qmcu7VejuT2EPKjEjVUqHrhQCFH8HWxUbMYH3aPEL8KyCD\"]},\"contracts/mixins/TickCensus.sol\":{\"keccak256\":\"0xa80aa7ea27ae07a32a4cdcacafb8db76546f386e50762633413fc41d0ec363a7\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://3903278a20bf66a357e5b1c1e82837dba078377edee37192c881a884332ab450\",\"dweb:/ipfs/QmPnFLrQzWxZwS1cUTanyNfuRsZmibPUDXFsGGp2ZD8ETJ\"]},\"contracts/mixins/TradeMatcher.sol\":{\"keccak256\":\"0x4d90531cc8c152a4e8f64a99795ac44bc29538a39339537eefd3081c1116af0a\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://314ac928a0c5198cda7cbf9bc4d2f34b0d4febd846f119b163d1d57726aee4bd\",\"dweb:/ipfs/QmVAzHDoHSftzmPYKJ5x9FxazNkEa2unv7Qkdmd7Ut726C\"]},\"node_modules/hardhat/console.sol\":{\"keccak256\":\"0x60b0215121bf25612a6739fb2f1ec35f31ee82e4a8216c032c8243d904ab3aa9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e29880d33dd479bb046ba306993d26ccb779a4b1d94a046cb3567f22948bb4d\",\"dweb:/ipfs/QmfTY1qzPt5C63Wc7y6JqfZr5899NRvXYdCpyLzR5FXQic\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isBid",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "pivotTime",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "feeMileage",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "uint160",
              "name": "commitEntropy",
              "type": "uint160",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CrocKnockoutCross",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "slot",
              "type": "uint16"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "acceptCrocProxyRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "input",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "userCmd",
          "outputs": [
            {
              "internalType": "int128[]",
              "name": "",
              "type": "int128[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@rari-capital/=node_modules/@rari-capital/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "solidity-code-metrics/=node_modules/solidity-code-metrics/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/callpaths/LongPath.sol": "LongPath"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/callpaths/LongPath.sol": {
        "keccak256": "0x9d6ab489e0644d40b820e53e50d1010475fe67f0d89770f423b5d56235c16c99",
        "urls": [
          "bzz-raw://378a380d18f53c14bc82aebf3998da846f167ede8c9ae27ed8c599d09125ace3",
          "dweb:/ipfs/Qmc7yKhr1GEgoKckj1LLVQACAY9GujAK1gXRD65SKMhN5e"
        ],
        "license": "GPL-3"
      },
      "contracts/interfaces/ICrocCondOracle.sol": {
        "keccak256": "0x66c623f5dce7637e25d3f7033e8c1cfa21f9c0c3b425319d3d38fbe7ce8353a0",
        "urls": [
          "bzz-raw://d32284e8381bdb229a13f57a06c69a2fd7d65880e24a5f74c9af6d9b9167daa0",
          "dweb:/ipfs/QmXUjomA3Fu4sxLF69Fg7baGircEL2eFscZLkTRPg7tJK6"
        ],
        "license": "GPL-3"
      },
      "contracts/interfaces/ICrocLpConduit.sol": {
        "keccak256": "0x2e7ec87b1050365c16ba74f7d9beecea883d4791ec1def08e8ae45dd3510e27a",
        "urls": [
          "bzz-raw://8f283048c17c0a0b2c525bcaf313b0fa31a3cd78a69b782f3974088352992524",
          "dweb:/ipfs/QmTuewpvVVBotRkDNUtZcZsbDDEfMLSUiCGRjiThWFevx7"
        ],
        "license": "GPL-3"
      },
      "contracts/interfaces/ICrocPermitOracle.sol": {
        "keccak256": "0x0104134443408b373471a7f3cbed78f90092bed417f5689ae7dbb7c2fc75e91a",
        "urls": [
          "bzz-raw://c835fbbe93904f1472c9cbaeb389f46eb544f0919f0b7abbdaea0a081c591fe8",
          "dweb:/ipfs/QmaS93RuVgzdGNJLb5GPd8QuSVuU3dy4pHuxnKorMGUoUL"
        ],
        "license": "GPL-3"
      },
      "contracts/interfaces/IERC20Minimal.sol": {
        "keccak256": "0x1d2b78cc48b529fea246fbfabaff22f70fea7ca2c8f32401d83c175a41ba2e5e",
        "urls": [
          "bzz-raw://0becce0dde36fe28f219b00a032f9587e9861c0e35d81461a2cdc891773530cd",
          "dweb:/ipfs/Qmey4Xdv4fxJFw51dc7QQZCvdM533YZSRYyTuX3QfTZ6bP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/BitMath.sol": {
        "keccak256": "0x04a037cc35c1bc65a40909ff33b049f848250b9358f4d1452e37ea08dbe7d58c",
        "urls": [
          "bzz-raw://75d9a5c6a7c3f28c3839b6a59e576dc137561e025a087e45b264cff88260c504",
          "dweb:/ipfs/QmRR4xRnr6wTyRBtHeZChxh5mgrsgC3TVYM3mdHqzQFner"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/Bitmaps.sol": {
        "keccak256": "0x44facc62f716438774561c4c4d3cd6372335c003b1d37b15ae3f140783e824f6",
        "urls": [
          "bzz-raw://209ce75eafca0392b508409a7a1b1068bce6f053cda919e76ff4694a9f00a2a8",
          "dweb:/ipfs/QmenTVCtZxU2EiSEshudacbPNZYdQdrgJdau3TeNcN4ygA"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/Chaining.sol": {
        "keccak256": "0xc2398494d5d1b038c9d4c50e1ea96e857aaafd7fa9be5e917dd4838768cdf236",
        "urls": [
          "bzz-raw://4e858138bcd25b940661707e8ff6ae4627d9fc5d9ec7feb22495f6b3b3466f2d",
          "dweb:/ipfs/QmcbGbPS3ZEwypuoYtDqL6fY47qYrXiCq6VSmTYZULZSHq"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/CompoundMath.sol": {
        "keccak256": "0x0edd6fc9fd81583a32489bfc7ebf6b70eb1d23cd1e6eb79e88ce112b5f444f0c",
        "urls": [
          "bzz-raw://e3e597c6120b2793ae4ec3da35d925805fd7c6a9ae4c73e15c1df19de6b0e6bc",
          "dweb:/ipfs/QmPE1ZLhZXTeHYMU3xXVh8Bud27fDEHe4s8rF9Sraukgnf"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/CurveAssimilate.sol": {
        "keccak256": "0xe124134bef09cd6f05ae9e7d4173f8ee1f22228d6f3e7ab9f0fdcae615ae7d65",
        "urls": [
          "bzz-raw://aeade6853b8d070b38d01932566dd47f7d965401e0d883295e4e8df6335dcb45",
          "dweb:/ipfs/Qmc9SoQx4k9gCSuU2RW6zVHbHDDQZ7M6UyQeMdqkuUBToG"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/CurveCache.sol": {
        "keccak256": "0x3d71c0f289be7de41f5369d64e4404b3335310a2105073c4d99f761d0c444488",
        "urls": [
          "bzz-raw://0b794e4058ae9d3db8f44ffa7b96c4fc3066c7a1fa65f1441ef31aca2dce86b7",
          "dweb:/ipfs/QmeU1XqwTSLm2gk6nrcZHuDpy4yg3pHim7GzghXwgnTYn4"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/CurveMath.sol": {
        "keccak256": "0x2b1acd7145a21185f9aa0473d4e4b341d4b34d271bc9773833b53b3ecb800869",
        "urls": [
          "bzz-raw://4f2ffeb9365fd05fe45491e0e09c844de656c5147647f441fa031097c0f7a7ec",
          "dweb:/ipfs/QmZ5yp9eJ2eNmnHnbjg8A5uTwtgGc156dxomVYPpX3vBkg"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/CurveRoll.sol": {
        "keccak256": "0x7ca76d8682fd81b07b940e2375eb8a2b13d94e65aa4f46a2f5cc8bd2d80cd997",
        "urls": [
          "bzz-raw://5c2d9bf8602bab8923286a47773bf87d71bc808367c8a78454511ce732e2805d",
          "dweb:/ipfs/QmZToE9CpndJVrW4v8fDk2kcqbVnnBkspzUwwowqbqwBJA"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/Directives.sol": {
        "keccak256": "0x349193c45904235db59b908070f910310ff88e33ca17de4aaf971a40ddbfb0e0",
        "urls": [
          "bzz-raw://ff2062cc76d966adae1811773b929a90878965a9673d18bc41d86ba6f354a585",
          "dweb:/ipfs/QmYJmJ8BxYptvnt8SyTNfK6kvfhV1wYeKzqo9of6AEMp17"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/Encoding.sol": {
        "keccak256": "0xb9f2d1b4a54ad699b0ca085554dbf6c4a83bfd55dcab9949e6f2d61c37ab5d28",
        "urls": [
          "bzz-raw://2cf3852ae2f68d6b4a22a4cbda7cac1976f638427184079550a421906d730e37",
          "dweb:/ipfs/QmWK2ErFyHCyF4oHbkFDnM5mjRceKDy5KzLCXpdnpVdXra"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/FixedPoint.sol": {
        "keccak256": "0x40a19fd78a58ce39cf26a7408e9efd28853fec9e1a6e46c6ba364002d5a82372",
        "urls": [
          "bzz-raw://2dc685d434c72ce733ae590bd39d44912569d7e3a27093083ada767ba7ae94f1",
          "dweb:/ipfs/QmaA7tmPTRBwhwKaahGUvXfu8qLSjAmPiZrMNuiA68yFtY"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/KnockoutLiq.sol": {
        "keccak256": "0x519fc1c3fae4209150a005d344a30ad4167b08f25102aa61bc5c55f3757993a1",
        "urls": [
          "bzz-raw://b7b66e6d93b3257353f2a3be956cbc37042961f5eb2feb4d0b1ccf48c5710b28",
          "dweb:/ipfs/QmRj1u3svg2Ex78ocS234pjgGe2TFaV8qn4EQ43DUQMpmb"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/LiquidityMath.sol": {
        "keccak256": "0x4be08c2957bf570a04e24e9f1ad9e8c051d8012012b2b6abb9e59d156380fb0d",
        "urls": [
          "bzz-raw://4494cb55e9b8ca079c35805b984ca4b5977fdca8302489fb6c73eb86ed932296",
          "dweb:/ipfs/QmZ9QUyuW4TcvyYKjY9ycdNdBbEPf6DxcgEQYay789kVkC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/PoolSpecs.sol": {
        "keccak256": "0x13c94aa15a3e26002d5f4b6e6f2a55e32a742e40cfb8cb97b1d1b6333ca293cb",
        "urls": [
          "bzz-raw://a0723aad7e94311ae7a933f46cc97b99f6cd5df6692172ad8c60e5e4d8e08a4b",
          "dweb:/ipfs/QmRM2VDrDyPAYfmaTV2ggSto9ChsLifNMxrHhUzn4ZUvDq"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/PriceGrid.sol": {
        "keccak256": "0x0013969c29c78171f596a30dfc208260b86933b87f1b558ecc72947f7ca3d8cb",
        "urls": [
          "bzz-raw://a6126488d8aa9ed62d3634e3bd16cab4faebf41ad0d08cd79240db0ed92f6404",
          "dweb:/ipfs/QmQmYd3cmLSqQiUjtUBSJMgmqJivCQatkv63wBDi6RvN36"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/SafeCast.sol": {
        "keccak256": "0xf898eb103e1a643b06af1bdf2bd548e6f3f5cd20a1fb0c14adce5eabd69f3916",
        "urls": [
          "bzz-raw://7d14c65f9b5c726154c73d5e2d0d2b41d4449b7586376a03cf57ccff8c4361e5",
          "dweb:/ipfs/QmPf4bHt9WRgKAqzb7nN8GGSoDVHYfnbdZE8Qxt1cvzZBg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/SwapCurve.sol": {
        "keccak256": "0xd9fa65709f31c5d3b50ab17a32b82ee46f544b009f970ac6d42f6e06bef3de82",
        "urls": [
          "bzz-raw://0ce14340fca6da6107deb5c3800d32b89fba81b057f043f36778f5c80dc896d8",
          "dweb:/ipfs/QmPuEoFHzrrKVJjTqmGfzKt4ienEs2CLf4Ptj9UaQUqwh3"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/TickMath.sol": {
        "keccak256": "0xd276edd31578d04c288d0ccf01b06db27101def6cb746e36985df86a3d764121",
        "urls": [
          "bzz-raw://d8bccc39424530cf1c313523e4f369efcda79dc9e2e83a7e4a84d8196d3dd3ea",
          "dweb:/ipfs/QmRvnThuYDQWHdmJxBoz3bbzizcaJt1NyQGNVjwQ25zfHi"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/TokenFlow.sol": {
        "keccak256": "0x57fc4abcbf4f72f65c74910f54d02d286d1253affff3d72c3f4e4ed913df3408",
        "urls": [
          "bzz-raw://0ae19fb5a87a01e8a51ec99ec3cd6bb1ab66264f935e6b78010757dfa2e0cb1d",
          "dweb:/ipfs/QmQw7KHYyPk6LGYRFyRdZg7pQxyJwMQHNB9L3gtaDWpQpB"
        ],
        "license": "GPL-3"
      },
      "contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x678579017489c8e16cee15fc7d895ff2c17a05e8ffafa7f1664b57e110e78c99",
        "urls": [
          "bzz-raw://e7cc5585bebf8685fbc67284ef5b0020f6a703f41f43e19c8caa428dc5db0bd6",
          "dweb:/ipfs/QmR4GvtaVbxVNtn4A28sXbhjWs6vVpxBK77aBUbc98j64u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/mixins/AgentMask.sol": {
        "keccak256": "0x2b387cd7e90facc8f17fcb95f8d068a7b10dfe8463abb9d4bbd7d906ab909ba2",
        "urls": [
          "bzz-raw://683f931b6e5b61c574b5d9da7c32a37a56cc01ea0bd5893567f6f9d30c3a113d",
          "dweb:/ipfs/Qmaoyt6zCbF55NpqwiPHL1uG3fBCH7Yj3CoGiW4a56Gg52"
        ],
        "license": "GPL-3"
      },
      "contracts/mixins/KnockoutCounter.sol": {
        "keccak256": "0x825428479e94a70c5499f0944d7bc39d4e7dcc2b42dc0bf1751c655e10da57c8",
        "urls": [
          "bzz-raw://10d2f88aa47746a6e970c15cc01c93735c6f0737e1c474cf89e580c68cd59459",
          "dweb:/ipfs/Qmd33pdB4KiX4Y9yGAezVne8sZLCC1JipK91YKRrretH9J"
        ],
        "license": "GPL-3"
      },
      "contracts/mixins/LevelBook.sol": {
        "keccak256": "0x61c34a21940486e63378e19b6019c01aeb175b213ccd218ec078cd7147e809d1",
        "urls": [
          "bzz-raw://7372aa4f3bc08147af7d442ec66778a39885ca69575cb90879481a182aa96b9e",
          "dweb:/ipfs/QmRrdudHsw89WnAjqyf8BK6bavirKJbtrnAajeu9htaZVw"
        ],
        "license": "GPL-3"
      },
      "contracts/mixins/LiquidityCurve.sol": {
        "keccak256": "0xc370db5575df2265c7a884c5fcda26d0f4535c6b3e74ff6b53f17d742c293988",
        "urls": [
          "bzz-raw://d611829c9d72779d8f0f2ce6c881f748a5fdb1765cf48aba6962742e773aa80e",
          "dweb:/ipfs/QmV9cy2S29GdZeyg8huvBiLLVs9VAA5xQQ5LPQNBAx1MrV"
        ],
        "license": "GPL-3"
      },
      "contracts/mixins/LiquidityMining.sol": {
        "keccak256": "0x97c28b3310a56512bc07b00682d189c87d6ed7152053bcf915fdf3711eb4348b",
        "urls": [
          "bzz-raw://332e2703b7d5ed8ab82076cd8e0fbeb47098a2c0fc421d9bc24712a3a829e3bf",
          "dweb:/ipfs/QmQZtkPnWEWXUMgRkyKHZHVXv3YAuUfacY5d88R1RUpCxK"
        ],
        "license": "GPL-3"
      },
      "contracts/mixins/MarketSequencer.sol": {
        "keccak256": "0x901d1db4ab568050d2d7242f31ef884eab3e188a93e39bcb6b8b6258959d2945",
        "urls": [
          "bzz-raw://1d74c50e251bfbf7c6b6ba6b4ec94f26c7c9c3c73c463ec3a775da84430a038a",
          "dweb:/ipfs/QmXmPSaQeow9GyhAH6v9vztmU3EQgF4v9kLeMMrf4sM3Hu"
        ],
        "license": "GPL-3"
      },
      "contracts/mixins/PoolRegistry.sol": {
        "keccak256": "0xce5e7321d15fa2f39b67baf693b2b10bd7bc9c4bd6ba7b188466c02d4454b0dc",
        "urls": [
          "bzz-raw://9f7a3ac178e8cf3e2f973ca22411854f1be2238d909d3fde5c5293836d6a59ea",
          "dweb:/ipfs/QmVmzJ7JBGmaLdBQq5R4sNJTKEZjUHCsNkYVN2mBuUPuZp"
        ],
        "license": "GPL-3"
      },
      "contracts/mixins/PositionRegistrar.sol": {
        "keccak256": "0xa5f6ccb107f319b1156a2dcfe8a20d773185833031e5a97c3195681ff96e8de9",
        "urls": [
          "bzz-raw://9af5c39925b017882a60ec1c8e5e07666438a3dd0ab14d4a5d6f42b8efcf35c5",
          "dweb:/ipfs/Qmbdv47orXzJMQhsM1r4r82za3HEYT8rYpP7rBtyWCn2Rj"
        ],
        "license": "GPL-3"
      },
      "contracts/mixins/ProtocolAccount.sol": {
        "keccak256": "0x90770ea4836fb4ccc44ad3036f280b6c1f4721f89fc483fea8726a84f482967e",
        "urls": [
          "bzz-raw://fe5c484ff92f1a3756c0493886a121aae45f264296ae99d88f71204c684965e7",
          "dweb:/ipfs/QmPHrEJFxTL37XaVkxYtvvcdMVeLikAWFK2UVsYaGMX5Bw"
        ],
        "license": "GPL-3"
      },
      "contracts/mixins/ProxyCaller.sol": {
        "keccak256": "0x0da25f1912cf084bd20b2602084f87b57f56852102b995460779dc3c3ae17ede",
        "urls": [
          "bzz-raw://fdb36ed8618d0c7f6765e372c29fea7b25fb37eefc6803d5d8daa5efbf0f0d63",
          "dweb:/ipfs/QmPSdSAcZfpKvanSHnLP5Lb1NXuVRZKUh6SfNGeB4pVeGt"
        ],
        "license": "GPL-3"
      },
      "contracts/mixins/SettleLayer.sol": {
        "keccak256": "0x08ce1632c5858135b32949a819fb69f0f3f7a33adbb8f98108dfb577e7f6e209",
        "urls": [
          "bzz-raw://947c4d6607ddfd03360e63c054644cf408af12684aa241bafa57520d33030595",
          "dweb:/ipfs/QmYEkqCh2sV414eH71sNcrkXpionN6qRGMuZEHvi5rD4jV"
        ],
        "license": "GPL-3"
      },
      "contracts/mixins/StorageLayout.sol": {
        "keccak256": "0x062e0303689aeb94de590021902ad1b0f9d0c538ce4fe05fd75fca64aca4f289",
        "urls": [
          "bzz-raw://9c25b4be759c5471bacb822218ef2e6d8aebc2f96c95524a83deea1b41ade837",
          "dweb:/ipfs/Qmcu7VejuT2EPKjEjVUqHrhQCFH8HWxUbMYH3aPEL8KyCD"
        ],
        "license": "GPL-3"
      },
      "contracts/mixins/TickCensus.sol": {
        "keccak256": "0xa80aa7ea27ae07a32a4cdcacafb8db76546f386e50762633413fc41d0ec363a7",
        "urls": [
          "bzz-raw://3903278a20bf66a357e5b1c1e82837dba078377edee37192c881a884332ab450",
          "dweb:/ipfs/QmPnFLrQzWxZwS1cUTanyNfuRsZmibPUDXFsGGp2ZD8ETJ"
        ],
        "license": "GPL-3"
      },
      "contracts/mixins/TradeMatcher.sol": {
        "keccak256": "0x4d90531cc8c152a4e8f64a99795ac44bc29538a39339537eefd3081c1116af0a",
        "urls": [
          "bzz-raw://314ac928a0c5198cda7cbf9bc4d2f34b0d4febd846f119b163d1d57726aee4bd",
          "dweb:/ipfs/QmVAzHDoHSftzmPYKJ5x9FxazNkEa2unv7Qkdmd7Ut726C"
        ],
        "license": "GPL-3"
      },
      "node_modules/hardhat/console.sol": {
        "keccak256": "0x60b0215121bf25612a6739fb2f1ec35f31ee82e4a8216c032c8243d904ab3aa9",
        "urls": [
          "bzz-raw://6e29880d33dd479bb046ba306993d26ccb779a4b1d94a046cb3567f22948bb4d",
          "dweb:/ipfs/QmfTY1qzPt5C63Wc7y6JqfZr5899NRvXYdCpyLzR5FXQic"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/callpaths/LongPath.sol",
    "id": 3561,
    "exportedSymbols": {
      "AgentMask": [
        18487
      ],
      "BitMath": [
        9551
      ],
      "Bitmaps": [
        10052
      ],
      "Chaining": [
        10872
      ],
      "CompoundMath": [
        11258
      ],
      "CrocSlots": [
        26925
      ],
      "CurveAssimilate": [
        11567
      ],
      "CurveCache": [
        11634
      ],
      "CurveMath": [
        12173
      ],
      "CurveRoll": [
        12976
      ],
      "Directives": [
        13074
      ],
      "FixedPoint": [
        13723
      ],
      "ICrocCondOracle": [
        5729
      ],
      "ICrocLpConduit": [
        5767
      ],
      "ICrocNonceOracle": [
        5719
      ],
      "ICrocPermitOracle": [
        5894
      ],
      "IERC20Minimal": [
        5966
      ],
      "IERC20Permit": [
        5986
      ],
      "KnockoutCounter": [
        19838
      ],
      "KnockoutLiq": [
        14399
      ],
      "LevelBook": [
        20571
      ],
      "LiquidityCurve": [
        21350
      ],
      "LiquidityMath": [
        14984
      ],
      "LiquidityMining": [
        22534
      ],
      "LongPath": [
        3560
      ],
      "MarketSequencer": [
        23406
      ],
      "OrderEncoding": [
        13595
      ],
      "PoolRegistry": [
        24300
      ],
      "PoolSpecs": [
        15232
      ],
      "PositionRegistrar": [
        24830
      ],
      "PriceGrid": [
        15843
      ],
      "ProtocolAccount": [
        24940
      ],
      "ProxyCaller": [
        25583
      ],
      "SafeCast": [
        16167
      ],
      "SettleLayer": [
        26596
      ],
      "StorageLayout": [
        26843
      ],
      "StoragePrototypes": [
        26943
      ],
      "SwapCurve": [
        16718
      ],
      "TickCensus": [
        27794
      ],
      "TickMath": [
        17253
      ],
      "TokenFlow": [
        17455
      ],
      "TradeMatcher": [
        29014
      ],
      "TransferHelper": [
        17577
      ],
      "console": [
        38213
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:5185:7",
    "nodes": [
      {
        "id": 3169,
        "nodeType": "PragmaDirective",
        "src": "35:23:7",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 3170,
        "nodeType": "ImportDirective",
        "src": "60:37:7",
        "nodes": [],
        "absolutePath": "contracts/libraries/Directives.sol",
        "file": "../libraries/Directives.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3561,
        "sourceUnit": 13075,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3171,
        "nodeType": "ImportDirective",
        "src": "98:35:7",
        "nodes": [],
        "absolutePath": "contracts/libraries/Encoding.sol",
        "file": "../libraries/Encoding.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3561,
        "sourceUnit": 13596,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3172,
        "nodeType": "ImportDirective",
        "src": "134:36:7",
        "nodes": [],
        "absolutePath": "contracts/libraries/TokenFlow.sol",
        "file": "../libraries/TokenFlow.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3561,
        "sourceUnit": 17456,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3173,
        "nodeType": "ImportDirective",
        "src": "171:36:7",
        "nodes": [],
        "absolutePath": "contracts/libraries/PriceGrid.sol",
        "file": "../libraries/PriceGrid.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3561,
        "sourceUnit": 15844,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3174,
        "nodeType": "ImportDirective",
        "src": "208:39:7",
        "nodes": [],
        "absolutePath": "contracts/mixins/MarketSequencer.sol",
        "file": "../mixins/MarketSequencer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3561,
        "sourceUnit": 23407,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3175,
        "nodeType": "ImportDirective",
        "src": "248:35:7",
        "nodes": [],
        "absolutePath": "contracts/mixins/SettleLayer.sol",
        "file": "../mixins/SettleLayer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3561,
        "sourceUnit": 26597,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3176,
        "nodeType": "ImportDirective",
        "src": "284:36:7",
        "nodes": [],
        "absolutePath": "contracts/mixins/PoolRegistry.sol",
        "file": "../mixins/PoolRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3561,
        "sourceUnit": 24301,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3177,
        "nodeType": "ImportDirective",
        "src": "321:39:7",
        "nodes": [],
        "absolutePath": "contracts/mixins/ProtocolAccount.sol",
        "file": "../mixins/ProtocolAccount.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3561,
        "sourceUnit": 24941,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3178,
        "nodeType": "ImportDirective",
        "src": "361:37:7",
        "nodes": [],
        "absolutePath": "contracts/mixins/StorageLayout.sol",
        "file": "../mixins/StorageLayout.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3561,
        "sourceUnit": 26944,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3560,
        "nodeType": "ContractDefinition",
        "src": "1008:4211:7",
        "nodes": [
          {
            "id": 3187,
            "nodeType": "UsingForDirective",
            "src": "1086:27:7",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3185,
              "name": "SafeCast",
              "nameLocations": [
                "1092:8:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16167,
              "src": "1092:8:7"
            },
            "typeName": {
              "id": 3186,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "1105:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            }
          },
          {
            "id": 3191,
            "nodeType": "UsingForDirective",
            "src": "1118:38:7",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3188,
              "name": "TokenFlow",
              "nameLocations": [
                "1124:9:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17455,
              "src": "1124:9:7"
            },
            "typeName": {
              "id": 3190,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3189,
                "name": "TokenFlow.PairSeq",
                "nameLocations": [
                  "1138:9:7",
                  "1148:7:7"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17269,
                "src": "1138:17:7"
              },
              "referencedDeclaration": 17269,
              "src": "1138:17:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PairSeq_$17269_storage_ptr",
                "typeString": "struct TokenFlow.PairSeq"
              }
            }
          },
          {
            "id": 3195,
            "nodeType": "UsingForDirective",
            "src": "1161:41:7",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3192,
              "name": "CurveMath",
              "nameLocations": [
                "1167:9:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12173,
              "src": "1167:9:7"
            },
            "typeName": {
              "id": 3194,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3193,
                "name": "CurveMath.CurveState",
                "nameLocations": [
                  "1181:9:7",
                  "1191:10:7"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11664,
                "src": "1181:20:7"
              },
              "referencedDeclaration": 11664,
              "src": "1181:20:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_CurveState_$11664_storage_ptr",
                "typeString": "struct CurveMath.CurveState"
              }
            }
          },
          {
            "id": 3199,
            "nodeType": "UsingForDirective",
            "src": "1207:37:7",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3196,
              "name": "Chaining",
              "nameLocations": [
                "1213:8:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10872,
              "src": "1213:8:7"
            },
            "typeName": {
              "id": 3198,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3197,
                "name": "Chaining.PairFlow",
                "nameLocations": [
                  "1226:8:7",
                  "1235:8:7"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10120,
                "src": "1226:17:7"
              },
              "referencedDeclaration": 10120,
              "src": "1226:17:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PairFlow_$10120_storage_ptr",
                "typeString": "struct Chaining.PairFlow"
              }
            }
          },
          {
            "id": 3408,
            "nodeType": "FunctionDefinition",
            "src": "1904:1546:7",
            "nodes": [],
            "body": {
              "id": 3407,
              "nodeType": "Block",
              "src": "1985:1465:7",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3211,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "2028:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3407,
                      "src": "1995:38:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                        "typeString": "struct Directives.OrderDirective"
                      },
                      "typeName": {
                        "id": 3210,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3209,
                          "name": "Directives.OrderDirective",
                          "nameLocations": [
                            "1995:10:7",
                            "2006:14:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13073,
                          "src": "1995:25:7"
                        },
                        "referencedDeclaration": 13073,
                        "src": "1995:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderDirective_$13073_storage_ptr",
                          "typeString": "struct Directives.OrderDirective"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3216,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3214,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3201,
                        "src": "2062:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 3212,
                        "name": "OrderEncoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13595,
                        "src": "2036:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OrderEncoding_$13595_$",
                          "typeString": "type(library OrderEncoding)"
                        }
                      },
                      "id": 3213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2050:11:7",
                      "memberName": "decodeOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13190,
                      "src": "2036:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_struct$_OrderDirective_$13073_memory_ptr_$",
                        "typeString": "function (bytes calldata) pure returns (struct Directives.OrderDirective memory)"
                      }
                    },
                    "id": 3215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2036:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                      "typeString": "struct Directives.OrderDirective memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1995:73:7"
                },
                {
                  "assignments": [
                    3221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3221,
                      "mutability": "mutable",
                      "name": "settleChannel",
                      "nameLocation": "2114:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3407,
                      "src": "2078:49:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                        "typeString": "struct Directives.SettlementChannel"
                      },
                      "typeName": {
                        "id": 3220,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3219,
                          "name": "Directives.SettlementChannel",
                          "nameLocations": [
                            "2078:10:7",
                            "2089:17:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13049,
                          "src": "2078:28:7"
                        },
                        "referencedDeclaration": 13049,
                        "src": "2078:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementChannel_$13049_storage_ptr",
                          "typeString": "struct Directives.SettlementChannel"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3224,
                  "initialValue": {
                    "expression": {
                      "id": 3222,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3211,
                      "src": "2130:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                        "typeString": "struct Directives.OrderDirective memory"
                      }
                    },
                    "id": 3223,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2136:5:7",
                    "memberName": "open_",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13068,
                    "src": "2130:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                      "typeString": "struct Directives.SettlementChannel memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2078:63:7"
                },
                {
                  "assignments": [
                    3229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3229,
                      "mutability": "mutable",
                      "name": "pairs",
                      "nameLocation": "2176:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3407,
                      "src": "2151:30:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                        "typeString": "struct TokenFlow.PairSeq"
                      },
                      "typeName": {
                        "id": 3228,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3227,
                          "name": "TokenFlow.PairSeq",
                          "nameLocations": [
                            "2151:9:7",
                            "2161:7:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17269,
                          "src": "2151:17:7"
                        },
                        "referencedDeclaration": 17269,
                        "src": "2151:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PairSeq_$17269_storage_ptr",
                          "typeString": "struct TokenFlow.PairSeq"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3230,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2151:30:7"
                },
                {
                  "assignments": [
                    3235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3235,
                      "mutability": "mutable",
                      "name": "cntx",
                      "nameLocation": "2216:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3407,
                      "src": "2191:29:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExecCntx_$10106_memory_ptr",
                        "typeString": "struct Chaining.ExecCntx"
                      },
                      "typeName": {
                        "id": 3234,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3233,
                          "name": "Chaining.ExecCntx",
                          "nameLocations": [
                            "2191:8:7",
                            "2200:8:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10106,
                          "src": "2191:17:7"
                        },
                        "referencedDeclaration": 10106,
                        "src": "2191:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExecCntx_$10106_storage_ptr",
                          "typeString": "struct Chaining.ExecCntx"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3236,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2191:29:7"
                },
                {
                  "assignments": [
                    3241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3241,
                      "mutability": "mutable",
                      "name": "flows",
                      "nameLocation": "2246:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3407,
                      "src": "2230:21:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int128_$dyn_memory_ptr",
                        "typeString": "int128[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3239,
                          "name": "int128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2230:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "id": 3240,
                        "nodeType": "ArrayTypeName",
                        "src": "2230:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int128_$dyn_storage_ptr",
                          "typeString": "int128[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3251,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 3245,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3211,
                              "src": "2267:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                                "typeString": "struct Directives.OrderDirective memory"
                              }
                            },
                            "id": 3246,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2273:5:7",
                            "memberName": "hops_",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13072,
                            "src": "2267:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_HopDirective_$13065_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Directives.HopDirective memory[] memory"
                            }
                          },
                          "id": 3247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2279:6:7",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2267:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 3248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2286:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2267:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2254:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_int128_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (int128[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3242,
                          "name": "int128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2258:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "id": 3243,
                        "nodeType": "ArrayTypeName",
                        "src": "2258:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int128_$dyn_storage_ptr",
                          "typeString": "int128[]"
                        }
                      }
                    },
                    "id": 3250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2254:34:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int128_$dyn_memory_ptr",
                      "typeString": "int128[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2230:58:7"
                },
                {
                  "body": {
                    "id": 3388,
                    "nodeType": "Block",
                    "src": "2346:985:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3267,
                                "name": "settleChannel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3221,
                                "src": "2374:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                                  "typeString": "struct Directives.SettlementChannel memory"
                                }
                              },
                              "id": 3268,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2388:6:7",
                              "memberName": "token_",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13042,
                              "src": "2374:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 3269,
                                      "name": "order",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3211,
                                      "src": "2396:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                                        "typeString": "struct Directives.OrderDirective memory"
                                      }
                                    },
                                    "id": 3270,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2402:5:7",
                                    "memberName": "hops_",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13072,
                                    "src": "2396:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_HopDirective_$13065_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Directives.HopDirective memory[] memory"
                                    }
                                  },
                                  "id": 3272,
                                  "indexExpression": {
                                    "id": 3271,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3253,
                                    "src": "2408:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2396:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HopDirective_$13065_memory_ptr",
                                    "typeString": "struct Directives.HopDirective memory"
                                  }
                                },
                                "id": 3273,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2411:7:7",
                                "memberName": "settle_",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13061,
                                "src": "2396:22:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                                  "typeString": "struct Directives.SettlementChannel memory"
                                }
                              },
                              "id": 3274,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2419:6:7",
                              "memberName": "token_",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13042,
                              "src": "2396:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3264,
                              "name": "pairs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3229,
                              "src": "2360:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                "typeString": "struct TokenFlow.PairSeq memory"
                              }
                            },
                            "id": 3266,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2366:7:7",
                            "memberName": "nextHop",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17317,
                            "src": "2360:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_PairSeq_$17269_memory_ptr_$_t_address_$_t_address_$returns$__$attached_to$_t_struct$_PairSeq_$17269_memory_ptr_$",
                              "typeString": "function (struct TokenFlow.PairSeq memory,address,address) pure"
                            }
                          },
                          "id": 3275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2360:66:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3276,
                        "nodeType": "ExpressionStatement",
                        "src": "2360:66:7"
                      },
                      {
                        "expression": {
                          "id": 3291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3277,
                              "name": "cntx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3235,
                              "src": "2440:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExecCntx_$10106_memory_ptr",
                                "typeString": "struct Chaining.ExecCntx memory"
                              }
                            },
                            "id": 3279,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2445:8:7",
                            "memberName": "improve_",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10102,
                            "src": "2440:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ImproveSettings_$15255_memory_ptr",
                              "typeString": "struct PriceGrid.ImproveSettings memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 3281,
                                      "name": "order",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3211,
                                      "src": "2474:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                                        "typeString": "struct Directives.OrderDirective memory"
                                      }
                                    },
                                    "id": 3282,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2480:5:7",
                                    "memberName": "hops_",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13072,
                                    "src": "2474:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_HopDirective_$13065_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Directives.HopDirective memory[] memory"
                                    }
                                  },
                                  "id": 3284,
                                  "indexExpression": {
                                    "id": 3283,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3253,
                                    "src": "2486:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2474:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HopDirective_$13065_memory_ptr",
                                    "typeString": "struct Directives.HopDirective memory"
                                  }
                                },
                                "id": 3285,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2489:8:7",
                                "memberName": "improve_",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13064,
                                "src": "2474:23:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PriceImproveReq_$13054_memory_ptr",
                                  "typeString": "struct Directives.PriceImproveReq memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3286,
                                  "name": "pairs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3229,
                                  "src": "2545:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                    "typeString": "struct TokenFlow.PairSeq memory"
                                  }
                                },
                                "id": 3287,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2551:10:7",
                                "memberName": "baseToken_",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17259,
                                "src": "2545:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3288,
                                  "name": "pairs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3229,
                                  "src": "2563:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                    "typeString": "struct TokenFlow.PairSeq memory"
                                  }
                                },
                                "id": 3289,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2569:11:7",
                                "memberName": "quoteToken_",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17261,
                                "src": "2563:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_PriceImproveReq_$13054_memory_ptr",
                                  "typeString": "struct Directives.PriceImproveReq memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3280,
                              "name": "queryPriceImprove",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24091,
                              "src": "2456:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_PriceImproveReq_$13054_memory_ptr_$_t_address_$_t_address_$returns$_t_struct$_ImproveSettings_$15255_memory_ptr_$",
                                "typeString": "function (struct Directives.PriceImproveReq memory,address,address) view returns (struct PriceGrid.ImproveSettings memory)"
                              }
                            },
                            "id": 3290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2456:125:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ImproveSettings_$15255_memory_ptr",
                              "typeString": "struct PriceGrid.ImproveSettings memory"
                            }
                          },
                          "src": "2440:141:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ImproveSettings_$15255_memory_ptr",
                            "typeString": "struct PriceGrid.ImproveSettings memory"
                          }
                        },
                        "id": 3292,
                        "nodeType": "ExpressionStatement",
                        "src": "2440:141:7"
                      },
                      {
                        "body": {
                          "id": 3366,
                          "nodeType": "Block",
                          "src": "2652:486:7",
                          "statements": [
                            {
                              "assignments": [
                                3312
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3312,
                                  "mutability": "mutable",
                                  "name": "dir",
                                  "nameLocation": "2702:3:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3366,
                                  "src": "2670:35:7",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolDirective_$13040_memory_ptr",
                                    "typeString": "struct Directives.PoolDirective"
                                  },
                                  "typeName": {
                                    "id": 3311,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 3310,
                                      "name": "Directives.PoolDirective",
                                      "nameLocations": [
                                        "2670:10:7",
                                        "2681:13:7"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 13040,
                                      "src": "2670:24:7"
                                    },
                                    "referencedDeclaration": 13040,
                                    "src": "2670:24:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolDirective_$13040_storage_ptr",
                                      "typeString": "struct Directives.PoolDirective"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3320,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 3313,
                                        "name": "order",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3211,
                                        "src": "2708:5:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                                          "typeString": "struct Directives.OrderDirective memory"
                                        }
                                      },
                                      "id": 3314,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2714:5:7",
                                      "memberName": "hops_",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 13072,
                                      "src": "2708:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_HopDirective_$13065_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct Directives.HopDirective memory[] memory"
                                      }
                                    },
                                    "id": 3316,
                                    "indexExpression": {
                                      "id": 3315,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3253,
                                      "src": "2720:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2708:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HopDirective_$13065_memory_ptr",
                                      "typeString": "struct Directives.HopDirective memory"
                                    }
                                  },
                                  "id": 3317,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2723:6:7",
                                  "memberName": "pools_",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13058,
                                  "src": "2708:21:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_PoolDirective_$13040_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Directives.PoolDirective memory[] memory"
                                  }
                                },
                                "id": 3319,
                                "indexExpression": {
                                  "id": 3318,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3294,
                                  "src": "2730:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2708:24:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolDirective_$13040_memory_ptr",
                                  "typeString": "struct Directives.PoolDirective memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2670:62:7"
                            },
                            {
                              "expression": {
                                "id": 3332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 3321,
                                    "name": "cntx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3235,
                                    "src": "2750:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExecCntx_$10106_memory_ptr",
                                      "typeString": "struct Chaining.ExecCntx memory"
                                    }
                                  },
                                  "id": 3323,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "2755:5:7",
                                  "memberName": "pool_",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10099,
                                  "src": "2750:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolCursor_$15016_memory_ptr",
                                    "typeString": "struct PoolSpecs.PoolCursor memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 3325,
                                        "name": "pairs",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3229,
                                        "src": "2773:5:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                          "typeString": "struct TokenFlow.PairSeq memory"
                                        }
                                      },
                                      "id": 3326,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2779:10:7",
                                      "memberName": "baseToken_",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 17259,
                                      "src": "2773:16:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 3327,
                                        "name": "pairs",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3229,
                                        "src": "2791:5:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                          "typeString": "struct TokenFlow.PairSeq memory"
                                        }
                                      },
                                      "id": 3328,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2797:11:7",
                                      "memberName": "quoteToken_",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 17261,
                                      "src": "2791:17:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 3329,
                                        "name": "dir",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3312,
                                        "src": "2849:3:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolDirective_$13040_memory_ptr",
                                          "typeString": "struct Directives.PoolDirective memory"
                                        }
                                      },
                                      "id": 3330,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2853:8:7",
                                      "memberName": "poolIdx_",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 13026,
                                      "src": "2849:12:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 3324,
                                    "name": "queryPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24121,
                                    "src": "2763:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_struct$_PoolCursor_$15016_memory_ptr_$",
                                      "typeString": "function (address,address,uint256) view returns (struct PoolSpecs.PoolCursor memory)"
                                    }
                                  },
                                  "id": 3331,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2763:99:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolCursor_$15016_memory_ptr",
                                    "typeString": "struct PoolSpecs.PoolCursor memory"
                                  }
                                },
                                "src": "2750:112:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolCursor_$15016_memory_ptr",
                                  "typeString": "struct PoolSpecs.PoolCursor memory"
                                }
                              },
                              "id": 3333,
                              "nodeType": "ExpressionStatement",
                              "src": "2750:112:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3335,
                                      "name": "cntx",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3235,
                                      "src": "2894:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ExecCntx_$10106_memory_ptr",
                                        "typeString": "struct Chaining.ExecCntx memory"
                                      }
                                    },
                                    "id": 3336,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2899:5:7",
                                    "memberName": "pool_",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10099,
                                    "src": "2894:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolCursor_$15016_memory_ptr",
                                      "typeString": "struct PoolSpecs.PoolCursor memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3337,
                                      "name": "pairs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3229,
                                      "src": "2906:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                        "typeString": "struct TokenFlow.PairSeq memory"
                                      }
                                    },
                                    "id": 3338,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2912:10:7",
                                    "memberName": "baseToken_",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17259,
                                    "src": "2906:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3339,
                                      "name": "pairs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3229,
                                      "src": "2924:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                        "typeString": "struct TokenFlow.PairSeq memory"
                                      }
                                    },
                                    "id": 3340,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2930:11:7",
                                    "memberName": "quoteToken_",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17261,
                                    "src": "2924:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3341,
                                      "name": "dir",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3312,
                                      "src": "2972:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolDirective_$13040_memory_ptr",
                                        "typeString": "struct Directives.PoolDirective memory"
                                      }
                                    },
                                    "id": 3342,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2976:8:7",
                                    "memberName": "ambient_",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13029,
                                    "src": "2972:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AmbientDirective_$13017_memory_ptr",
                                      "typeString": "struct Directives.AmbientDirective memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3343,
                                      "name": "dir",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3312,
                                      "src": "2986:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolDirective_$13040_memory_ptr",
                                        "typeString": "struct Directives.PoolDirective memory"
                                      }
                                    },
                                    "id": 3344,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2990:5:7",
                                    "memberName": "swap_",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13036,
                                    "src": "2986:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapDirective_$12997_memory_ptr",
                                      "typeString": "struct Directives.SwapDirective memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3345,
                                      "name": "dir",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3312,
                                      "src": "2997:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolDirective_$13040_memory_ptr",
                                        "typeString": "struct Directives.PoolDirective memory"
                                      }
                                    },
                                    "id": 3346,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3001:5:7",
                                    "memberName": "conc_",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13033,
                                    "src": "2997:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_ConcentratedDirective_$13010_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Directives.ConcentratedDirective memory[] memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_PoolCursor_$15016_memory_ptr",
                                      "typeString": "struct PoolSpecs.PoolCursor memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_AmbientDirective_$13017_memory_ptr",
                                      "typeString": "struct Directives.AmbientDirective memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_SwapDirective_$12997_memory_ptr",
                                      "typeString": "struct Directives.SwapDirective memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_struct$_ConcentratedDirective_$13010_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Directives.ConcentratedDirective memory[] memory"
                                    }
                                  ],
                                  "id": 3334,
                                  "name": "verifyPermit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23636,
                                  "src": "2881:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PoolCursor_$15016_memory_ptr_$_t_address_$_t_address_$_t_struct$_AmbientDirective_$13017_memory_ptr_$_t_struct$_SwapDirective_$12997_memory_ptr_$_t_array$_t_struct$_ConcentratedDirective_$13010_memory_ptr_$dyn_memory_ptr_$returns$__$",
                                    "typeString": "function (struct PoolSpecs.PoolCursor memory,address,address,struct Directives.AmbientDirective memory,struct Directives.SwapDirective memory,struct Directives.ConcentratedDirective memory[] memory)"
                                  }
                                },
                                "id": 3347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2881:126:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3348,
                              "nodeType": "ExpressionStatement",
                              "src": "2881:126:7"
                            },
                            {
                              "expression": {
                                "id": 3357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 3349,
                                    "name": "cntx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3235,
                                    "src": "3025:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExecCntx_$10106_memory_ptr",
                                      "typeString": "struct Chaining.ExecCntx memory"
                                    }
                                  },
                                  "id": 3351,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "3030:5:7",
                                  "memberName": "roll_",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10105,
                                  "src": "3025:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RollTarget_$10111_memory_ptr",
                                    "typeString": "struct Chaining.RollTarget memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 3353,
                                        "name": "dir",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3312,
                                        "src": "3049:3:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolDirective_$13040_memory_ptr",
                                          "typeString": "struct Directives.PoolDirective memory"
                                        }
                                      },
                                      "id": 3354,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3053:6:7",
                                      "memberName": "chain_",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 13039,
                                      "src": "3049:10:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ChainingFlags_$13024_memory_ptr",
                                        "typeString": "struct Directives.ChainingFlags memory"
                                      }
                                    },
                                    {
                                      "id": 3355,
                                      "name": "pairs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3229,
                                      "src": "3061:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                        "typeString": "struct TokenFlow.PairSeq memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_ChainingFlags_$13024_memory_ptr",
                                        "typeString": "struct Directives.ChainingFlags memory"
                                      },
                                      {
                                        "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                        "typeString": "struct TokenFlow.PairSeq memory"
                                      }
                                    ],
                                    "id": 3352,
                                    "name": "targetRoll",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3544,
                                    "src": "3038:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_ChainingFlags_$13024_memory_ptr_$_t_struct$_PairSeq_$17269_memory_ptr_$returns$_t_struct$_RollTarget_$10111_memory_ptr_$",
                                      "typeString": "function (struct Directives.ChainingFlags memory,struct TokenFlow.PairSeq memory) view returns (struct Chaining.RollTarget memory)"
                                    }
                                  },
                                  "id": 3356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3038:29:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RollTarget_$10111_memory_ptr",
                                    "typeString": "struct Chaining.RollTarget memory"
                                  }
                                },
                                "src": "3025:42:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RollTarget_$10111_memory_ptr",
                                  "typeString": "struct Chaining.RollTarget memory"
                                }
                              },
                              "id": 3358,
                              "nodeType": "ExpressionStatement",
                              "src": "3025:42:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3360,
                                      "name": "pairs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3229,
                                      "src": "3100:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                        "typeString": "struct TokenFlow.PairSeq memory"
                                      }
                                    },
                                    "id": 3361,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3106:5:7",
                                    "memberName": "flow_",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17268,
                                    "src": "3100:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PairFlow_$10120_memory_ptr",
                                      "typeString": "struct Chaining.PairFlow memory"
                                    }
                                  },
                                  {
                                    "id": 3362,
                                    "name": "dir",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3312,
                                    "src": "3113:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolDirective_$13040_memory_ptr",
                                      "typeString": "struct Directives.PoolDirective memory"
                                    }
                                  },
                                  {
                                    "id": 3363,
                                    "name": "cntx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3235,
                                    "src": "3118:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExecCntx_$10106_memory_ptr",
                                      "typeString": "struct Chaining.ExecCntx memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_PairFlow_$10120_memory_ptr",
                                      "typeString": "struct Chaining.PairFlow memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_PoolDirective_$13040_memory_ptr",
                                      "typeString": "struct Directives.PoolDirective memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_ExecCntx_$10106_memory_ptr",
                                      "typeString": "struct Chaining.ExecCntx memory"
                                    }
                                  ],
                                  "id": 3359,
                                  "name": "tradeOverPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22645,
                                  "src": "3086:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PairFlow_$10120_memory_ptr_$_t_struct$_PoolDirective_$13040_memory_ptr_$_t_struct$_ExecCntx_$10106_memory_ptr_$returns$__$",
                                    "typeString": "function (struct Chaining.PairFlow memory,struct Directives.PoolDirective memory,struct Chaining.ExecCntx memory)"
                                  }
                                },
                                "id": 3364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3086:37:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3365,
                              "nodeType": "ExpressionStatement",
                              "src": "3086:37:7"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3297,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3294,
                            "src": "2613:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 3298,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3211,
                                    "src": "2617:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                                      "typeString": "struct Directives.OrderDirective memory"
                                    }
                                  },
                                  "id": 3299,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2623:5:7",
                                  "memberName": "hops_",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13072,
                                  "src": "2617:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_HopDirective_$13065_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Directives.HopDirective memory[] memory"
                                  }
                                },
                                "id": 3301,
                                "indexExpression": {
                                  "id": 3300,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3253,
                                  "src": "2629:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2617:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_HopDirective_$13065_memory_ptr",
                                  "typeString": "struct Directives.HopDirective memory"
                                }
                              },
                              "id": 3302,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2632:6:7",
                              "memberName": "pools_",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13058,
                              "src": "2617:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PoolDirective_$13040_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Directives.PoolDirective memory[] memory"
                              }
                            },
                            "id": 3303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2639:6:7",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2617:28:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2613:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3367,
                        "initializationExpression": {
                          "assignments": [
                            3294
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3294,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "2606:1:7",
                              "nodeType": "VariableDeclaration",
                              "scope": 3367,
                              "src": "2601:6:7",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3293,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2601:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3296,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2610:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2601:10:7"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 3306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "2647:3:7",
                            "subExpression": {
                              "id": 3305,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3294,
                              "src": "2649:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3307,
                          "nodeType": "ExpressionStatement",
                          "src": "2647:3:7"
                        },
                        "nodeType": "ForStatement",
                        "src": "2596:542:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3369,
                              "name": "pairs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3229,
                              "src": "3170:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                "typeString": "struct TokenFlow.PairSeq memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                "typeString": "struct TokenFlow.PairSeq memory"
                              }
                            ],
                            "id": 3368,
                            "name": "accumProtocolFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              24860,
                              24897
                            ],
                            "referencedDeclaration": 24860,
                            "src": "3152:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PairSeq_$17269_memory_ptr_$returns$__$",
                              "typeString": "function (struct TokenFlow.PairSeq memory)"
                            }
                          },
                          "id": 3370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3152:24:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3371,
                        "nodeType": "ExpressionStatement",
                        "src": "3152:24:7"
                      },
                      {
                        "expression": {
                          "id": 3378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3372,
                              "name": "flows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3241,
                              "src": "3241:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int128_$dyn_memory_ptr",
                                "typeString": "int128[] memory"
                              }
                            },
                            "id": 3374,
                            "indexExpression": {
                              "id": 3373,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3253,
                              "src": "3247:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3241:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int128",
                              "typeString": "int128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3375,
                                "name": "pairs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3229,
                                "src": "3252:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                  "typeString": "struct TokenFlow.PairSeq memory"
                                }
                              },
                              "id": 3376,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3258:8:7",
                              "memberName": "clipFlow",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17427,
                              "src": "3252:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_PairSeq_$17269_memory_ptr_$returns$_t_int128_$attached_to$_t_struct$_PairSeq_$17269_memory_ptr_$",
                                "typeString": "function (struct TokenFlow.PairSeq memory) pure returns (int128)"
                              }
                            },
                            "id": 3377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3252:16:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int128",
                              "typeString": "int128"
                            }
                          },
                          "src": "3241:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "id": 3379,
                        "nodeType": "ExpressionStatement",
                        "src": "3241:27:7"
                      },
                      {
                        "expression": {
                          "id": 3386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3380,
                            "name": "settleChannel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3221,
                            "src": "3282:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                              "typeString": "struct Directives.SettlementChannel memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 3381,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3211,
                                  "src": "3298:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                                    "typeString": "struct Directives.OrderDirective memory"
                                  }
                                },
                                "id": 3382,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3304:5:7",
                                "memberName": "hops_",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13072,
                                "src": "3298:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_HopDirective_$13065_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct Directives.HopDirective memory[] memory"
                                }
                              },
                              "id": 3384,
                              "indexExpression": {
                                "id": 3383,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3253,
                                "src": "3310:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3298:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HopDirective_$13065_memory_ptr",
                                "typeString": "struct Directives.HopDirective memory"
                              }
                            },
                            "id": 3385,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3313:7:7",
                            "memberName": "settle_",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13061,
                            "src": "3298:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                              "typeString": "struct Directives.SettlementChannel memory"
                            }
                          },
                          "src": "3282:38:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                            "typeString": "struct Directives.SettlementChannel memory"
                          }
                        },
                        "id": 3387,
                        "nodeType": "ExpressionStatement",
                        "src": "3282:38:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3256,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3253,
                      "src": "2317:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 3257,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3211,
                          "src": "2321:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                            "typeString": "struct Directives.OrderDirective memory"
                          }
                        },
                        "id": 3258,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2327:5:7",
                        "memberName": "hops_",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13072,
                        "src": "2321:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_HopDirective_$13065_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Directives.HopDirective memory[] memory"
                        }
                      },
                      "id": 3259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2333:6:7",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2321:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2317:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3389,
                  "initializationExpression": {
                    "assignments": [
                      3253
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3253,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2310:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 3389,
                        "src": "2305:6:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3252,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2305:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3255,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2314:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2305:10:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2341:3:7",
                      "subExpression": {
                        "id": 3261,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3253,
                        "src": "2343:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3263,
                    "nodeType": "ExpressionStatement",
                    "src": "2341:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "2300:1031:7"
                },
                {
                  "expression": {
                    "id": 3398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3390,
                        "name": "flows",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3241,
                        "src": "3341:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int128_$dyn_memory_ptr",
                          "typeString": "int128[] memory"
                        }
                      },
                      "id": 3394,
                      "indexExpression": {
                        "expression": {
                          "expression": {
                            "id": 3391,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3211,
                            "src": "3347:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                              "typeString": "struct Directives.OrderDirective memory"
                            }
                          },
                          "id": 3392,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3353:5:7",
                          "memberName": "hops_",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13072,
                          "src": "3347:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_HopDirective_$13065_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Directives.HopDirective memory[] memory"
                          }
                        },
                        "id": 3393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3359:6:7",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3347:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3341:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int128",
                        "typeString": "int128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3395,
                          "name": "pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3229,
                          "src": "3369:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                            "typeString": "struct TokenFlow.PairSeq memory"
                          }
                        },
                        "id": 3396,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3375:9:7",
                        "memberName": "closeFlow",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17439,
                        "src": "3369:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_PairSeq_$17269_memory_ptr_$returns$_t_int128_$attached_to$_t_struct$_PairSeq_$17269_memory_ptr_$",
                          "typeString": "function (struct TokenFlow.PairSeq memory) pure returns (int128)"
                        }
                      },
                      "id": 3397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3369:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int128",
                        "typeString": "int128"
                      }
                    },
                    "src": "3341:45:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "id": 3399,
                  "nodeType": "ExpressionStatement",
                  "src": "3341:45:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3401,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3211,
                        "src": "3408:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                          "typeString": "struct Directives.OrderDirective memory"
                        }
                      },
                      {
                        "id": 3402,
                        "name": "flows",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3241,
                        "src": "3415:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int128_$dyn_memory_ptr",
                          "typeString": "int128[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                          "typeString": "struct Directives.OrderDirective memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int128_$dyn_memory_ptr",
                          "typeString": "int128[] memory"
                        }
                      ],
                      "id": 3400,
                      "name": "settleFlows",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3471,
                        25759
                      ],
                      "referencedDeclaration": 3471,
                      "src": "3396:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OrderDirective_$13073_memory_ptr_$_t_array$_t_int128_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct Directives.OrderDirective memory,int128[] memory)"
                      }
                    },
                    "id": 3403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3396:25:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3404,
                  "nodeType": "ExpressionStatement",
                  "src": "3396:25:7"
                },
                {
                  "expression": {
                    "id": 3405,
                    "name": "flows",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3241,
                    "src": "3438:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int128_$dyn_memory_ptr",
                      "typeString": "int128[] memory"
                    }
                  },
                  "functionReturnParameters": 3206,
                  "id": 3406,
                  "nodeType": "Return",
                  "src": "3431:12:7"
                }
              ]
            },
            "functionSelector": "f96dc788",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userCmd",
            "nameLocation": "1913:7:7",
            "parameters": {
              "id": 3202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3201,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "1937:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3408,
                  "src": "1922:20:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3200,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1922:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1921:22:7"
            },
            "returnParameters": {
              "id": 3206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3205,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3408,
                  "src": "1968:15:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int128_$dyn_memory_ptr",
                    "typeString": "int128[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3203,
                      "name": "int128",
                      "nodeType": "ElementaryTypeName",
                      "src": "1968:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int128",
                        "typeString": "int128"
                      }
                    },
                    "id": 3204,
                    "nodeType": "ArrayTypeName",
                    "src": "1968:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int128_$dyn_storage_ptr",
                      "typeString": "int128[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1967:17:7"
            },
            "scope": 3560,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3471,
            "nodeType": "FunctionDefinition",
            "src": "3456:452:7",
            "nodes": [],
            "body": {
              "id": 3470,
              "nodeType": "Block",
              "src": "3550:358:7",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3421
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3421,
                      "mutability": "mutable",
                      "name": "settleChannel",
                      "nameLocation": "3596:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3470,
                      "src": "3560:49:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                        "typeString": "struct Directives.SettlementChannel"
                      },
                      "typeName": {
                        "id": 3420,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3419,
                          "name": "Directives.SettlementChannel",
                          "nameLocations": [
                            "3560:10:7",
                            "3571:17:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13049,
                          "src": "3560:28:7"
                        },
                        "referencedDeclaration": 13049,
                        "src": "3560:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementChannel_$13049_storage_ptr",
                          "typeString": "struct Directives.SettlementChannel"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3424,
                  "initialValue": {
                    "expression": {
                      "id": 3422,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3411,
                      "src": "3612:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                        "typeString": "struct Directives.OrderDirective memory"
                      }
                    },
                    "id": 3423,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3618:5:7",
                    "memberName": "open_",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13068,
                    "src": "3612:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                      "typeString": "struct Directives.SettlementChannel memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3560:63:7"
                },
                {
                  "assignments": [
                    3426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3426,
                      "mutability": "mutable",
                      "name": "ethFlow",
                      "nameLocation": "3640:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3470,
                      "src": "3633:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int128",
                        "typeString": "int128"
                      },
                      "typeName": {
                        "id": 3425,
                        "name": "int128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3633:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3428,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 3427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3650:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3633:18:7"
                },
                {
                  "body": {
                    "id": 3458,
                    "nodeType": "Block",
                    "src": "3708:122:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 3448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3441,
                            "name": "ethFlow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3426,
                            "src": "3722:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int128",
                              "typeString": "int128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 3443,
                                  "name": "flows",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3414,
                                  "src": "3743:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_int128_$dyn_memory_ptr",
                                    "typeString": "int128[] memory"
                                  }
                                },
                                "id": 3445,
                                "indexExpression": {
                                  "id": 3444,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3430,
                                  "src": "3749:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3743:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int128",
                                  "typeString": "int128"
                                }
                              },
                              {
                                "id": 3446,
                                "name": "settleChannel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3421,
                                "src": "3753:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                                  "typeString": "struct Directives.SettlementChannel memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int128",
                                  "typeString": "int128"
                                },
                                {
                                  "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                                  "typeString": "struct Directives.SettlementChannel memory"
                                }
                              ],
                              "id": 3442,
                              "name": "settleLeg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                25653,
                                25728
                              ],
                              "referencedDeclaration": 25653,
                              "src": "3733:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_int128_$_t_struct$_SettlementChannel_$13049_memory_ptr_$returns$_t_int128_$",
                                "typeString": "function (int128,struct Directives.SettlementChannel memory) returns (int128)"
                              }
                            },
                            "id": 3447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3733:34:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int128",
                              "typeString": "int128"
                            }
                          },
                          "src": "3722:45:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "id": 3449,
                        "nodeType": "ExpressionStatement",
                        "src": "3722:45:7"
                      },
                      {
                        "expression": {
                          "id": 3456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3450,
                            "name": "settleChannel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3421,
                            "src": "3781:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                              "typeString": "struct Directives.SettlementChannel memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 3451,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3411,
                                  "src": "3797:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                                    "typeString": "struct Directives.OrderDirective memory"
                                  }
                                },
                                "id": 3452,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3803:5:7",
                                "memberName": "hops_",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13072,
                                "src": "3797:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_HopDirective_$13065_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct Directives.HopDirective memory[] memory"
                                }
                              },
                              "id": 3454,
                              "indexExpression": {
                                "id": 3453,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3430,
                                "src": "3809:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3797:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HopDirective_$13065_memory_ptr",
                                "typeString": "struct Directives.HopDirective memory"
                              }
                            },
                            "id": 3455,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3812:7:7",
                            "memberName": "settle_",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13061,
                            "src": "3797:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                              "typeString": "struct Directives.SettlementChannel memory"
                            }
                          },
                          "src": "3781:38:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                            "typeString": "struct Directives.SettlementChannel memory"
                          }
                        },
                        "id": 3457,
                        "nodeType": "ExpressionStatement",
                        "src": "3781:38:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3433,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3430,
                      "src": "3679:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 3434,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3411,
                          "src": "3683:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                            "typeString": "struct Directives.OrderDirective memory"
                          }
                        },
                        "id": 3435,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3689:5:7",
                        "memberName": "hops_",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13072,
                        "src": "3683:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_HopDirective_$13065_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Directives.HopDirective memory[] memory"
                        }
                      },
                      "id": 3436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3695:6:7",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3683:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3679:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3459,
                  "initializationExpression": {
                    "assignments": [
                      3430
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3430,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3672:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 3459,
                        "src": "3667:6:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3429,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3667:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3432,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3676:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3667:10:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3703:3:7",
                      "subExpression": {
                        "id": 3438,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3430,
                        "src": "3705:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3440,
                    "nodeType": "ExpressionStatement",
                    "src": "3703:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "3662:168:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3461,
                          "name": "flows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3414,
                          "src": "3851:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int128_$dyn_memory_ptr",
                            "typeString": "int128[] memory"
                          }
                        },
                        "id": 3465,
                        "indexExpression": {
                          "expression": {
                            "expression": {
                              "id": 3462,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3411,
                              "src": "3857:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                                "typeString": "struct Directives.OrderDirective memory"
                              }
                            },
                            "id": 3463,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3863:5:7",
                            "memberName": "hops_",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13072,
                            "src": "3857:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_HopDirective_$13065_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Directives.HopDirective memory[] memory"
                            }
                          },
                          "id": 3464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3869:6:7",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3857:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3851:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "id": 3466,
                        "name": "settleChannel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3421,
                        "src": "3878:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                          "typeString": "struct Directives.SettlementChannel memory"
                        }
                      },
                      {
                        "id": 3467,
                        "name": "ethFlow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3426,
                        "src": "3893:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementChannel_$13049_memory_ptr",
                          "typeString": "struct Directives.SettlementChannel memory"
                        },
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      ],
                      "id": 3460,
                      "name": "settleFinal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        25628,
                        25685
                      ],
                      "referencedDeclaration": 25628,
                      "src": "3839:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int128_$_t_struct$_SettlementChannel_$13049_memory_ptr_$_t_int128_$returns$__$",
                        "typeString": "function (int128,struct Directives.SettlementChannel memory,int128)"
                      }
                    },
                    "id": 3468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3839:62:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3469,
                  "nodeType": "ExpressionStatement",
                  "src": "3839:62:7"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleFlows",
            "nameLocation": "3465:11:7",
            "parameters": {
              "id": 3415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3411,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "3511:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3471,
                  "src": "3478:38:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderDirective_$13073_memory_ptr",
                    "typeString": "struct Directives.OrderDirective"
                  },
                  "typeName": {
                    "id": 3410,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3409,
                      "name": "Directives.OrderDirective",
                      "nameLocations": [
                        "3478:10:7",
                        "3489:14:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13073,
                      "src": "3478:25:7"
                    },
                    "referencedDeclaration": 13073,
                    "src": "3478:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderDirective_$13073_storage_ptr",
                      "typeString": "struct Directives.OrderDirective"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3414,
                  "mutability": "mutable",
                  "name": "flows",
                  "nameLocation": "3534:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3471,
                  "src": "3518:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int128_$dyn_memory_ptr",
                    "typeString": "int128[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3412,
                      "name": "int128",
                      "nodeType": "ElementaryTypeName",
                      "src": "3518:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int128",
                        "typeString": "int128"
                      }
                    },
                    "id": 3413,
                    "nodeType": "ArrayTypeName",
                    "src": "3518:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int128_$dyn_storage_ptr",
                      "typeString": "int128[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3477:63:7"
            },
            "returnParameters": {
              "id": 3416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3550:0:7"
            },
            "scope": 3560,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3544,
            "nodeType": "FunctionDefinition",
            "src": "4283:651:7",
            "nodes": [],
            "body": {
              "id": 3543,
              "nodeType": "Block",
              "src": "4462:472:7",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "expression": {
                      "id": 3483,
                      "name": "flags",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3474,
                      "src": "4476:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ChainingFlags_$13024_memory_ptr",
                        "typeString": "struct Directives.ChainingFlags memory"
                      }
                    },
                    "id": 3484,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4482:9:7",
                    "memberName": "rollExit_",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13019,
                    "src": "4476:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3514,
                    "nodeType": "Block",
                    "src": "4594:106:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 3505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3500,
                              "name": "roll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3481,
                              "src": "4608:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RollTarget_$10111_memory_ptr",
                                "typeString": "struct Chaining.RollTarget memory"
                              }
                            },
                            "id": 3502,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4613:10:7",
                            "memberName": "inBaseQty_",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10108,
                            "src": "4608:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3503,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3477,
                              "src": "4626:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                "typeString": "struct TokenFlow.PairSeq memory"
                              }
                            },
                            "id": 3504,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4631:12:7",
                            "memberName": "isBaseFront_",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17263,
                            "src": "4626:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4608:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3506,
                        "nodeType": "ExpressionStatement",
                        "src": "4608:35:7"
                      },
                      {
                        "expression": {
                          "id": 3512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3507,
                              "name": "roll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3481,
                              "src": "4657:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RollTarget_$10111_memory_ptr",
                                "typeString": "struct Chaining.RollTarget memory"
                              }
                            },
                            "id": 3509,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4662:11:7",
                            "memberName": "prePairBal_",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10110,
                            "src": "4657:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int128",
                              "typeString": "int128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3510,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3477,
                              "src": "4676:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                "typeString": "struct TokenFlow.PairSeq memory"
                              }
                            },
                            "id": 3511,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4681:8:7",
                            "memberName": "legFlow_",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17265,
                            "src": "4676:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int128",
                              "typeString": "int128"
                            }
                          },
                          "src": "4657:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "id": 3513,
                        "nodeType": "ExpressionStatement",
                        "src": "4657:32:7"
                      }
                    ]
                  },
                  "id": 3515,
                  "nodeType": "IfStatement",
                  "src": "4472:228:7",
                  "trueBody": {
                    "id": 3499,
                    "nodeType": "Block",
                    "src": "4493:95:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 3491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3485,
                              "name": "roll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3481,
                              "src": "4507:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RollTarget_$10111_memory_ptr",
                                "typeString": "struct Chaining.RollTarget memory"
                              }
                            },
                            "id": 3487,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4512:10:7",
                            "memberName": "inBaseQty_",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10108,
                            "src": "4507:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4525:18:7",
                            "subExpression": {
                              "expression": {
                                "id": 3488,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3477,
                                "src": "4526:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                  "typeString": "struct TokenFlow.PairSeq memory"
                                }
                              },
                              "id": 3489,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4531:12:7",
                              "memberName": "isBaseFront_",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17263,
                              "src": "4526:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4507:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3492,
                        "nodeType": "ExpressionStatement",
                        "src": "4507:36:7"
                      },
                      {
                        "expression": {
                          "id": 3497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3493,
                              "name": "roll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3481,
                              "src": "4557:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RollTarget_$10111_memory_ptr",
                                "typeString": "struct Chaining.RollTarget memory"
                              }
                            },
                            "id": 3495,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4562:11:7",
                            "memberName": "prePairBal_",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10110,
                            "src": "4557:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int128",
                              "typeString": "int128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 3496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4576:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4557:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "id": 3498,
                        "nodeType": "ExpressionStatement",
                        "src": "4557:20:7"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "expression": {
                      "id": 3516,
                      "name": "flags",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3474,
                      "src": "4714:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ChainingFlags_$13024_memory_ptr",
                        "typeString": "struct Directives.ChainingFlags memory"
                      }
                    },
                    "id": 3517,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4720:14:7",
                    "memberName": "offsetSurplus_",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13023,
                    "src": "4714:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3542,
                  "nodeType": "IfStatement",
                  "src": "4710:218:7",
                  "trueBody": {
                    "id": 3541,
                    "nodeType": "Block",
                    "src": "4736:192:7",
                    "statements": [
                      {
                        "assignments": [
                          3519
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3519,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "4758:5:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 3541,
                            "src": "4750:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3518,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4750:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3529,
                        "initialValue": {
                          "condition": {
                            "expression": {
                              "id": 3520,
                              "name": "flags",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3474,
                              "src": "4766:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ChainingFlags_$13024_memory_ptr",
                                "typeString": "struct Directives.ChainingFlags memory"
                              }
                            },
                            "id": 3521,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4772:9:7",
                            "memberName": "rollExit_",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13019,
                            "src": "4766:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3525,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3477,
                                "src": "4819:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                  "typeString": "struct TokenFlow.PairSeq memory"
                                }
                              },
                              "id": 3526,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4824:10:7",
                              "memberName": "frontToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17334,
                              "src": "4819:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_PairSeq_$17269_memory_ptr_$returns$_t_address_$attached_to$_t_struct$_PairSeq_$17269_memory_ptr_$",
                                "typeString": "function (struct TokenFlow.PairSeq memory) pure returns (address)"
                              }
                            },
                            "id": 3527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4819:17:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "4766:70:7",
                          "trueExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3522,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3477,
                                "src": "4800:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                                  "typeString": "struct TokenFlow.PairSeq memory"
                                }
                              },
                              "id": 3523,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4805:9:7",
                              "memberName": "backToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17351,
                              "src": "4800:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_PairSeq_$17269_memory_ptr_$returns$_t_address_$attached_to$_t_struct$_PairSeq_$17269_memory_ptr_$",
                                "typeString": "function (struct TokenFlow.PairSeq memory) pure returns (address)"
                              }
                            },
                            "id": 3524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4800:16:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4750:86:7"
                      },
                      {
                        "expression": {
                          "id": 3539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3530,
                              "name": "roll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3481,
                              "src": "4850:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RollTarget_$10111_memory_ptr",
                                "typeString": "struct Chaining.RollTarget memory"
                              }
                            },
                            "id": 3532,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4855:11:7",
                            "memberName": "prePairBal_",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10110,
                            "src": "4850:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int128",
                              "typeString": "int128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3534,
                                    "name": "lockHolder_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 26605,
                                    "src": "4883:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3535,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3519,
                                    "src": "4896:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3533,
                                  "name": "querySurplus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26047,
                                  "src": "4870:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint128_$",
                                    "typeString": "function (address,address) view returns (uint128)"
                                  }
                                },
                                "id": 3536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4870:32:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 3537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4903:12:7",
                              "memberName": "toInt128Sign",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16134,
                              "src": "4870:45:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint128_$returns$_t_int128_$attached_to$_t_uint128_$",
                                "typeString": "function (uint128) pure returns (int128)"
                              }
                            },
                            "id": 3538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4870:47:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int128",
                              "typeString": "int128"
                            }
                          },
                          "src": "4850:67:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "id": 3540,
                        "nodeType": "ExpressionStatement",
                        "src": "4850:67:7"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "targetRoll",
            "nameLocation": "4292:10:7",
            "parameters": {
              "id": 3478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3474,
                  "mutability": "mutable",
                  "name": "flags",
                  "nameLocation": "4336:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3544,
                  "src": "4304:37:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ChainingFlags_$13024_memory_ptr",
                    "typeString": "struct Directives.ChainingFlags"
                  },
                  "typeName": {
                    "id": 3473,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3472,
                      "name": "Directives.ChainingFlags",
                      "nameLocations": [
                        "4304:10:7",
                        "4315:13:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13024,
                      "src": "4304:24:7"
                    },
                    "referencedDeclaration": 13024,
                    "src": "4304:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ChainingFlags_$13024_storage_ptr",
                      "typeString": "struct Directives.ChainingFlags"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3477,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "4393:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3544,
                  "src": "4368:29:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PairSeq_$17269_memory_ptr",
                    "typeString": "struct TokenFlow.PairSeq"
                  },
                  "typeName": {
                    "id": 3476,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3475,
                      "name": "TokenFlow.PairSeq",
                      "nameLocations": [
                        "4368:9:7",
                        "4378:7:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17269,
                      "src": "4368:17:7"
                    },
                    "referencedDeclaration": 17269,
                    "src": "4368:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PairSeq_$17269_storage_ptr",
                      "typeString": "struct TokenFlow.PairSeq"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4303:95:7"
            },
            "returnParameters": {
              "id": 3482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3481,
                  "mutability": "mutable",
                  "name": "roll",
                  "nameLocation": "4456:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3544,
                  "src": "4429:31:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RollTarget_$10111_memory_ptr",
                    "typeString": "struct Chaining.RollTarget"
                  },
                  "typeName": {
                    "id": 3480,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3479,
                      "name": "Chaining.RollTarget",
                      "nameLocations": [
                        "4429:8:7",
                        "4438:10:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10111,
                      "src": "4429:19:7"
                    },
                    "referencedDeclaration": 10111,
                    "src": "4429:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RollTarget_$10111_storage_ptr",
                      "typeString": "struct Chaining.RollTarget"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4428:33:7"
            },
            "scope": 3560,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 3559,
            "nodeType": "FunctionDefinition",
            "src": "5082:135:7",
            "nodes": [],
            "body": {
              "id": 3558,
              "nodeType": "Block",
              "src": "5161:56:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 3556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3553,
                      "name": "slot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3548,
                      "src": "5178:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 3554,
                        "name": "CrocSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26925,
                        "src": "5186:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CrocSlots_$26925_$",
                          "typeString": "type(library CrocSlots)"
                        }
                      },
                      "id": 3555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5196:14:7",
                      "memberName": "LONG_PROXY_IDX",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26897,
                      "src": "5186:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "5178:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3552,
                  "id": 3557,
                  "nodeType": "Return",
                  "src": "5171:39:7"
                }
              ]
            },
            "functionSelector": "ac54c0fc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptCrocProxyRole",
            "nameLocation": "5091:19:7",
            "parameters": {
              "id": 3549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3546,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3559,
                  "src": "5112:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5112:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3548,
                  "mutability": "mutable",
                  "name": "slot",
                  "nameLocation": "5128:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3559,
                  "src": "5121:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 3547,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "5121:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5111:22:7"
            },
            "returnParameters": {
              "id": 3552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3551,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3559,
                  "src": "5155:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3550,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5155:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5154:6:7"
            },
            "scope": 3560,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3179,
              "name": "MarketSequencer",
              "nameLocations": [
                "1029:15:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23406,
              "src": "1029:15:7"
            },
            "id": 3180,
            "nodeType": "InheritanceSpecifier",
            "src": "1029:15:7"
          },
          {
            "baseName": {
              "id": 3181,
              "name": "SettleLayer",
              "nameLocations": [
                "1046:11:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26596,
              "src": "1046:11:7"
            },
            "id": 3182,
            "nodeType": "InheritanceSpecifier",
            "src": "1046:11:7"
          },
          {
            "baseName": {
              "id": 3183,
              "name": "ProtocolAccount",
              "nameLocations": [
                "1059:15:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24940,
              "src": "1059:15:7"
            },
            "id": 3184,
            "nodeType": "InheritanceSpecifier",
            "src": "1059:15:7"
          }
        ],
        "canonicalName": "LongPath",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3560,
          24940,
          26596,
          23406,
          29014,
          25583,
          19838,
          18487,
          21350,
          22534,
          24830,
          24300,
          20571,
          27794,
          26843
        ],
        "name": "LongPath",
        "nameLocation": "1017:8:7",
        "scope": 3561,
        "usedErrors": []
      }
    ],
    "license": "GPL-3"
  },
  "id": 7
}